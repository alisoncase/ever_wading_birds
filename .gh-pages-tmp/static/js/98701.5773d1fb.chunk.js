"use strict";(self.webpackChunkever_wading_birds=self.webpackChunkever_wading_birds||[]).push([[98701],{2180:(e,t,i)=>{i.d(t,{e:()=>l,s:()=>o});var r=i(10193),n=i(83238),a=i(87520),s=i(53512);async function o(e,t,i){const r=await l(e,t,i);return a.default.fromJSON(r)}async function l(e,t,i){const a=(0,r.Dl)(e),o={...i},l=s.default.from(t),{data:u}=await(0,n.eW)(a,l,l.sourceSpatialReference,o);return u}},5957:(e,t,i)=>{function r(e){const t={};for(const i in e){if("declaredClass"===i)continue;const n=e[i];if(null!=n&&"function"!=typeof n)if(Array.isArray(n)){t[i]=[];for(let e=0;e<n.length;e++)t[i][e]=r(n[e])}else"object"==typeof n?n.toJSON&&(t[i]=JSON.stringify(n)):t[i]=n}return t}i.d(t,{z:()=>r})},39817:(e,t,i)=>{i.d(t,{A:()=>n});var r=i(42080);class n{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];this.lengths=e??[],this.coords=t??[]}static fromJSON(e){return new n(e.lengths,e.coords)}static fromRect(e){const[t,i,r,a]=e,s=r-t,o=a-i;return new n([5],[t,i,s,0,0,o,-s,0,0,-o])}get isPoint(){return 0===this.lengths.length&&this.coords.length>=2}get maxLength(){return Math.max(...this.lengths)}get size(){return this.lengths.reduce(((e,t)=>e+t))}get usedMemory(){return 64+(0,r.Qf)(this.lengths,this.coords)}area(){let e=0,t=0;if(!this.lengths.length)return 0;for(let i=0;i<this.lengths.length;i++){const r=this.lengths[i];if(r<3)continue;let n=this.coords[2*t],a=this.coords[2*t+1];for(let i=1;i<r;i+=1){const r=this.coords[2*(i+t)],s=this.coords[2*(i+t)+1];e+=-.5*(r-n)*(s+a),n=r,a=s}t+=r}return e}forEachVertex(e){let t=0;this.lengths.length||e(this.coords[0],this.coords[1]);for(let i=0;i<this.lengths.length;i++){const r=this.lengths[i];for(let i=0;i<r;i++)e(this.coords[2*(i+t)],this.coords[2*(i+t)+1]);t+=r}}deltaDecode(){const e=this.clone(),{coords:t,lengths:i}=e;let r=0;for(const n of i){for(let e=1;e<n;e++)t[2*(r+e)]+=t[2*(r+e)-2],t[2*(r+e)+1]+=t[2*(r+e)-1];r+=n}return e}clone(e){if(0===this.lengths.length)return new n([],[this.coords[0],this.coords[1]]);const t=2*(0===this.lengths.length?1:this.lengths.reduce(((e,t)=>e+t))),i=this.coords.slice(0,t);return e?(e.set(i),new n(this.lengths,e)):new n(Array.from(this.lengths),Array.from(i))}}},40602:(e,t,i)=>{function r(e,t){return e?t?4:3:t?3:2}function n(e,t,i,n){if(!t?.lengths.length)return null;e.lengths.length&&(e.lengths.length=0),e.coords.length&&(e.coords.length=0);const o=e.coords,l=[],u=i?[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY]:[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY],{lengths:c,coords:p}=t,m=r(i,n);let d=0;for(const r of c){const e=a(u,p,d,r,i,n);e&&l.push(e),d+=r*m}if(l.sort(((e,t)=>{let r=e[2]-t[2];return 0===r&&i&&(r=e[4]-t[4]),r})),l.length){let e=6*l[0][2];o[0]=l[0][0]/e,o[1]=l[0][1]/e,i&&(e=6*l[0][4],o[2]=0!==e?l[0][3]/e:0),(o[0]<u[0]||o[0]>u[1]||o[1]<u[2]||o[1]>u[3]||i&&(o[2]<u[4]||o[2]>u[5]))&&(o.length=0)}if(!o.length){const e=t.lengths[0]?s(p,0,c[0],i,n):null;if(!e)return null;o[0]=e[0],o[1]=e[1],i&&e.length>2&&(o[2]=e[2])}return e}function a(e,t,i,n,a,s){const o=r(a,s);let l=i,u=i+o,c=0,p=0,m=0,d=0,h=0;for(let r=0,y=n-1;r<y;r++,l+=o,u+=o){const i=t[l],r=t[l+1],n=t[l+2],s=t[u],o=t[u+1],f=t[u+2];let y=i*o-s*r;d+=y,c+=(i+s)*y,p+=(r+o)*y,a&&(y=i*f-s*n,m+=(n+f)*y,h+=y),i<e[0]&&(e[0]=i),i>e[1]&&(e[1]=i),r<e[2]&&(e[2]=r),r>e[3]&&(e[3]=r),a&&(n<e[4]&&(e[4]=n),n>e[5]&&(e[5]=n))}if(d>0&&(d*=-1),h>0&&(h*=-1),!d)return null;const f=[c,p,.5*d];return a&&(f[3]=m,f[4]=.5*h),f}function s(e,t,i,n,a){const s=r(n,a);let p=t,m=t+s,d=0,h=0,f=0,y=0;for(let r=0,g=i-1;r<g;r++,p+=s,m+=s){const t=e[p],i=e[p+1],r=e[p+2],a=e[m],s=e[m+1],g=e[m+2],b=n?l(t,i,r,a,s,g):o(t,i,a,s);if(b)if(d+=b,n){const e=c(t,i,r,a,s,g);h+=b*e[0],f+=b*e[1],y+=b*e[2]}else{const e=u(t,i,a,s);h+=b*e[0],f+=b*e[1]}}return d>0?n?[h/d,f/d,y/d]:[h/d,f/d]:i>0?n?[e[t],e[t+1],e[t+2]]:[e[t],e[t+1]]:null}function o(e,t,i,r){const n=i-e,a=r-t;return Math.sqrt(n*n+a*a)}function l(e,t,i,r,n,a){const s=r-e,o=n-t,l=a-i;return Math.sqrt(s*s+o*o+l*l)}function u(e,t,i,r){return[e+.5*(i-e),t+.5*(r-t)]}function c(e,t,i,r,n,a){return[e+.5*(r-e),t+.5*(n-t),i+.5*(a-i)]}i.d(t,{Q:()=>n})},44909:(e,t,i)=>{i.d(t,{H:()=>o});var r=i(93800),n=i(48602),a=(i(21265),i(50925),i(14746),i(75269)),s=i(99197);const o=e=>{let t=class extends e{constructor(){super(...arguments),this.activePresetRendererName=null,this.presetRenderers=null}};return(0,r._)([(0,n.MZ)({type:String,json:{name:"layerDefinition.activePresetRendererName",write:{allowNull:!0}}})],t.prototype,"activePresetRendererName",void 0),(0,r._)([(0,n.MZ)({type:[s.default],json:{name:"layerDefinition.presetRenderers",write:!0}})],t.prototype,"presetRenderers",void 0),t=(0,r._)([(0,a.$)("esri.layers.mixins.RasterPresetRendererMixin")],t),t}},52579:(e,t,i)=>{i.d(t,{A:()=>r});class r{constructor(){this.objectIdFieldName=null,this.globalIdFieldName=null,this.geohashFieldName=null,this.geometryProperties=null,this.geometryType=null,this.spatialReference=null,this.hasZ=!1,this.hasM=!1,this.features=[],this.fields=[],this.transform=null,this.exceededTransferLimit=!1,this.uniqueIdField=null,this.queryGeometryType=null,this.queryGeometry=null}weakClone(){const e=new r;return e.objectIdFieldName=this.objectIdFieldName,e.globalIdFieldName=this.globalIdFieldName,e.geohashFieldName=this.geohashFieldName,e.geometryProperties=this.geometryProperties,e.geometryType=this.geometryType,e.spatialReference=this.spatialReference,e.hasZ=this.hasZ,e.hasM=this.hasM,e.features=this.features,e.fields=this.fields,e.transform=this.transform,e.exceededTransferLimit=this.exceededTransferLimit,e.uniqueIdField=this.uniqueIdField,e.queryGeometry=this.queryGeometry,e.queryGeometryType=this.queryGeometryType,e}}},58703:(e,t,i)=>{i.d(t,{V:()=>s});var r=i(10193),n=i(83238),a=i(53512);async function s(e,t,i){const s=(0,r.Dl)(e),{data:o}=await(0,n.Pk)(s,a.default.from(t),i);return o.objectIds??[]}},66296:(e,t,i)=>{i.d(t,{E9:()=>h,Tw:()=>m,X6:()=>d});var r=i(23060),n=i(12560),a=i(75400),s=i(93321),o=i(4463),l=i(286),u=i(10193),c=i(87520);async function p(e,t,i){const p=(0,u.Dl)(e),{rasterFunction:m,sourceJSON:d}=t||{},h=m?JSON.stringify(m.rasterFunctionDefinition||m):null,f=(0,u.lF)({...p.query,renderingRule:h,f:"json"}),y=(0,u.jV)(f,i);e=p.path;const g=d||await(0,r.default)(e,y).then((e=>e.data)),b=g.hasRasterAttributeTable?(0,r.default)(`${e}/rasterAttributeTable`,y):null,R=g.hasColormap?(0,r.default)(`${e}/colormap`,y):null,v=g.hasHistograms?(0,r.default)(`${e}/histograms`,y):null,w=g.currentVersion>=10.3?(0,r.default)(`${e}/keyProperties`,y):null,S=g.hasMultidimensions?(0,r.default)(`${e}/multidimensionalInfo`,y):null,I=await Promise.allSettled([b,R,v,w,S]);let _=null;if(g.minValues&&g.minValues.length===g.bandCount){_=[];for(let e=0;e<g.minValues.length;e++)_.push({min:g.minValues[e],max:g.maxValues[e],avg:g.meanValues[e],stddev:g.stdvValues[e]})}const F=n.default.fromJSON(g.extent),x=Math.ceil(F.width/g.pixelSizeX-.1),T=Math.ceil(F.height/g.pixelSizeY-.1),D=s.default.fromJSON(g.spatialReference||g.extent.spatialReference),P="fulfilled"===I[0].status?I[0].value?.data:null,M=P?.features?.length?c.default.fromJSON(P):null,N="fulfilled"===I[1].status?I[1].value?.data.colormap:null,C=N?.length?N:null,O="fulfilled"===I[2].status?I[2].value?.data.histograms:null,V=O?.[0]?.counts?.length?O:null,A="fulfilled"===I[3].status?I[3].value?.data??{}:{},E="fulfilled"===I[4].status?I[4].value?.data.multidimensionalInfo:null,q=E?.variables?.length?E:null;q&&q.variables.forEach((e=>{e.statistics?.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),e.dimensions?.forEach((e=>{"StdTime"!==e.name||e.recurring||e.unit||(e.unit="ISO8601")}))}));const{defaultVariable:j,serviceDataType:J}=g;j&&j!==A.DefaultVariable&&(A.DefaultVariable=j),J?.includes("esriImageServiceDataTypeVector")&&!J.includes(A.DataType)&&(A.DataType=J.replace("esriImageServiceDataType",""));let Z=g.noDataValue;g.noDataValues?.length&&g.noDataValues.some((e=>e!==Z))&&(Z=g.noDataValues);const L=g.transposeInfo?new l.A({blockWidth:256,blockHeight:256,pyramidBlockWidth:256,pyramidBlockHeight:256,pyramidScalingFactor:2,compression:"lerc",origin:new a.default({x:g.extent.xmin,y:g.extent.ymax,spatialReference:D}),firstPyramidLevel:1,maximumPyramidLevel:Math.max(0,Math.round(Math.log(Math.max(x,T))/Math.LN2-8)),transposeInfo:g.transposeInfo}):void 0;return new o.default({width:x,height:T,bandCount:g.bandCount,extent:n.default.fromJSON(g.extent),spatialReference:D,pixelSize:new a.default({x:g.pixelSizeX,y:g.pixelSizeY,spatialReference:D}),pixelType:g.pixelType.toLowerCase(),statistics:_,attributeTable:M,colormap:C,histograms:V,keyProperties:A,noDataValue:Z,multidimensionalInfo:q,storageInfo:L})}function m(e,t,i){return p(e,{sourceJSON:t},i)}function d(e,t,i){return p(e,{rasterFunction:t},i)}function h(e,t){e.attributeTable||(t.hasRasterAttributeTable=!1),e.histograms||(t.hasHistograms=!1),e.colormap||(t.hasColormap=!1),e.multidimensionalInfo||(t.hasMultidimensions=!1)}},67011:(e,t,i)=>{i.d(t,{N3:()=>o,Om:()=>s});var r=i(42080),n=i(40602),a=i(39817);class s{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0,n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;this.geometry=e,this.attributes=t,this.centroid=i,this.objectId=r,this.displayId=n}static fromJSON(e){const t=e.geometry?a.A.fromJSON(e.geometry):null,i=e.centroid?a.A.fromJSON(e.centroid):null,r=e.objectId;return new s(t,e.attributes,i,r)}weakClone(){const e=new s(this.geometry,this.attributes,this.centroid,this.objectId);return e.displayId=this.displayId,e}clone(){const e=this.geometry?.clone(),t=new s(e,{...this.attributes},this.centroid?.clone(),this.objectId);return t.displayId=this.displayId,t}ensureCentroid(e){return this.centroid??=(0,n.Q)(new a.A,this.geometry,e.hasZ,e.hasM),this.centroid}get usedMemory(){return 128+(0,r.lM)(this.attributes)+(this.geometry?.usedMemory??0)}}function o(e){return!!e.geometry?.coords?.length}},69953:(e,t,i)=>{i.d(t,{C:()=>s,m:()=>a});var r=i(74719),n=i(49959);async function a(e,t,i){let a;try{a=await createImageBitmap(e)}catch(s){throw new r.default("request:server",`Unable to load ${t}`,{url:t,error:s})}return(0,n.throwIfAborted)(i),a}async function s(e,t,i,a,s){let o;try{o=await createImageBitmap(e)}catch(l){throw new r.default("request:server",`Unable to load tile ${t}/${i}/${a}`,{error:l,level:t,row:i,col:a})}return(0,n.throwIfAborted)(s),o}},75942:(e,t,i)=>{i.d(t,{I:()=>s});var r=i(10193),n=i(83238),a=i(53512);async function s(e,t,i){const s=(0,r.Dl)(e),{data:o}=await(0,n.gW)(s,a.default.from(t),i);return o.count}},83238:(e,t,i)=>{i.d(t,{GB:()=>R,IJ:()=>h,Jf:()=>b,Pk:()=>y,eW:()=>d,gW:()=>g,kS:()=>f});var r=i(23060),n=i(43103),a=i(78629),s=i(30312),o=i(70576),l=i(5957),u=i(29071),c=i(31714);const p="Layer does not support extent calculation.";function m(e,t){const i=e.geometry,r=e.toJSON();delete r.compactGeometryEnabled,delete r.defaultSpatialReferenceEnabled;const n=r;let s,l,u;if(null!=i&&(l=i.spatialReference,u=(0,o.YX)(l),n.geometryType=(0,a.getJsonType)(i),n.geometry=function(e,t){if(t&&"extent"===e.type)return`${e.xmin},${e.ymin},${e.xmax},${e.ymax}`;if(t&&"point"===e.type)return`${e.x},${e.y}`;const i=e.toJSON();return delete i.spatialReference,JSON.stringify(i)}(i,e.compactGeometryEnabled),n.inSR=u),r.groupByFieldsForStatistics&&(n.groupByFieldsForStatistics=r.groupByFieldsForStatistics.join(",")),r.objectIds&&(n.objectIds=r.objectIds.join(",")),r.orderByFields&&(n.orderByFields=r.orderByFields.join(",")),!r.outFields||!r.returnDistinctValues&&(t?.returnCountOnly||t?.returnExtentOnly||t?.returnIdsOnly)?delete n.outFields:r.outFields.includes("*")?n.outFields="*":n.outFields=r.outFields.join(","),r.outSR?(n.outSR=(0,o.YX)(r.outSR),s=e.outSpatialReference):i&&(r.returnGeometry||r.returnCentroid)&&(n.outSR=n.inSR,s=l),r.returnGeometry&&delete r.returnGeometry,r.outStatistics&&(n.outStatistics=JSON.stringify(r.outStatistics)),r.fullText&&(n.fullText=JSON.stringify(r.fullText)),r.pixelSize&&(n.pixelSize=JSON.stringify(r.pixelSize)),r.quantizationParameters&&(e.defaultSpatialReferenceEnabled&&null!=l&&null!=e.quantizationParameters?.extent&&l.equals(e.quantizationParameters.extent.spatialReference)&&delete r.quantizationParameters.extent.spatialReference,n.quantizationParameters=JSON.stringify(r.quantizationParameters)),r.parameterValues&&(n.parameterValues=JSON.stringify(r.parameterValues)),r.rangeValues&&(n.rangeValues=JSON.stringify(r.rangeValues)),r.dynamicDataSource&&(n.layer=JSON.stringify({source:r.dynamicDataSource}),delete r.dynamicDataSource),r.timeExtent){const e=r.timeExtent,{start:t,end:i}=e;null==t&&null==i||(n.time=t===i?t:`${t??"null"},${i??"null"}`),delete r.timeExtent}return e.defaultSpatialReferenceEnabled&&null!=l&&null!=s&&l.equals(s)&&(n.defaultSR=n.inSR,delete n.inSR,delete n.outSR),n}async function d(e,t,i,r){const n=null!=t.timeExtent&&t.timeExtent.isEmpty?{data:{features:[]}}:await R(e,t,"json",r);return(0,c.q)(t,i,n.data),n}async function h(e,t,i,r){if(null!=t.timeExtent&&t.timeExtent.isEmpty)return{data:i.createFeatureResult()};const n=await f(e,t,r),a=n;return a.data=(0,u.m)(n.data,i),a}function f(e,t,i){return R(e,t,"pbf",i)}function y(e,t,i){return null!=t.timeExtent&&t.timeExtent.isEmpty?Promise.resolve({data:{objectIds:[]}}):R(e,t,"json",i,{returnIdsOnly:!0})}function g(e,t,i){return null!=t.timeExtent&&t.timeExtent.isEmpty?Promise.resolve({data:{count:0}}):R(e,t,"json",i,{returnIdsOnly:!0,returnCountOnly:!0})}async function b(e,t,i){if(null!=t.timeExtent&&t.timeExtent.isEmpty)return{data:{count:0,extent:null}};const r=await R(e,t,"json",i,{returnExtentOnly:!0,returnCountOnly:!0}),n=r.data;if(n.hasOwnProperty("extent"))return r;if(n.features)throw new Error(p);if(n.hasOwnProperty("count"))throw new Error(p);return r}async function R(e,t,i){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};const u="string"==typeof e?(0,n.urlToObject)(e):e,c=t.geometry?[t.geometry]:[],p=await(0,s.normalizeCentralMeridian)(c,null,{signal:a.signal}),d=p?.[0];null!=d&&((t=t.clone()).geometry=d);const h=(0,l.z)({...u.query,f:i,...o,...m(t,o)});return(0,r.default)((0,n.join)(u.path,(f=o,null==t.formatOf3DObjects||f.returnCountOnly||f.returnExtentOnly||f.returnIdsOnly?"query":"query3d")),{...a,responseType:"pbf"===i?"array-buffer":"json",query:{...h,...a.query}});var f}},86482:(e,t,i)=>{i.r(t),i.d(t,{default:()=>Je});var r=i(93800),n=i(35377),a=i(85715),s=i(74719),o=i(59321),l=i(49959),u=i(48602),c=(i(21265),i(50925)),p=(i(14746),i(75269)),m=i(15484),d=i(57457),h=i(79625),f=i(23060),y=i(82301),g=i(79953),b=i(43103),R=i(80556),v=i(14800),w=i(12560),S=i(65920),I=i(93321),_=i(70576),F=i(75238),x=i(73848),T=i(19455),D=i(84766),P=i(82518);const M={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}};var N=i(78496),C=i(70943),O=i(56563);const V=new Set(["u1","u2","u4","u8","s8","u16","s16"]),A={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},E=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function q(e){return E.has(e.type)}function j(e,t){if(!e||!t)return(0,y.clone)(e||t);const i=(0,y.clone)(e);if(i.functionDefinition&&t.rasterFunctionDefinition){const e=t.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=void 0),J(i.functionDefinition.arguments,t),i.rasterFunctionDefinition=i.functionDefinition.toJSON()}else"none"!==t.functionName?.toLowerCase()&&(z(i.functionArguments).Raster=t);return i}function J(e,t){for(const i in e)"raster"===i.toLowerCase()&&("RasterFunctionVariable"===e[i].type?(e[i]=t.rasterFunctionDefinition,e[i].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===e[i].type&&J(e[i].arguments,t))}function Z(e){const t=(0,y.clone)(M[e.functionName+"Function"]),i=e.functionArguments;for(const r in i)"raster"===r.toLowerCase()?(t.arguments[r]=Z(i[r]),t.arguments[r].type="RasterFunctionTemplate"):"colormap"===r.toLowerCase()?(t.arguments[r].value=U(i[r]),t.arguments.ColorSchemeType.value=0):t.arguments[r].value=i[r];return t}function L(e,t){switch(t=t||{},e.type){case"raster-stretch":return function(e,t){const i=t.convertToRFT,r=new D.default;r.functionName="Stretch";const n=H[C.u.toJSON(e.stretchType)],a="u8",s=e.customStatistics?.map((e=>[e.min,e.max,e.avg??0,e.stddev??1])),o={StretchType:n,Statistics:s,DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(o.Min=e.outputMin),null!=e.outputMax&&(o.Max=e.outputMax),n===H.standardDeviation?(o.NumberOfStandardDeviations=e.numberOfStandardDeviations,r.outputPixelType=a):n===H.percentClip?(o.MinPercent=e.minPercent,o.MaxPercent=e.maxPercent,r.outputPixelType=a):n===H.minMax?r.outputPixelType=a:n===H.sigmoid&&(o.SigmoidStrengthLevel=e.sigmoidStrengthLevel),r.functionArguments=o,r.variableName="Raster",e.colorRamp){const n=e.colorRamp,a=new D.default;if(i)a.functionArguments={ColorRamp:(0,N.hf)(n)};else{const i=(0,N.hs)(n,!0);if(i)a.functionArguments={colorRampName:i};else if(!t.convertColorRampToColormap||"algorithmic"!==n.type&&"multipart"!==n.type){const t=e.colorRamp.toJSON();"algorithmic"===t.type?t.algorithm=t.algorithm||"esriCIELabAlgorithm":"multipart"===t.type&&t.colorRamps?.length&&t.colorRamps.forEach((e=>e.algorithm=e.algorithm||"esriCIELabAlgorithm")),a.functionArguments={colorRamp:t}}else a.functionArguments={Colormap:(0,N.R8)(n)}}return a.variableName="Raster",a.functionName="Colormap",a.functionArguments.Raster=r,i?new D.default({rasterFunctionDefinition:Z(a)}):a}return i?new D.default({rasterFunctionDefinition:Z(r)}):r}(e,t);case"class-breaks":return function(e,t){const i=[],r=[],n=[],a=[],s=1e-4,{pixelType:o,rasterAttributeTable:l}=t,u=null==l?null:l.features,c=B(l);if(c&&u&&Array.isArray(u)&&e.classBreakInfos){e.classBreakInfos.forEach(((t,i)=>{const r=t.symbol?.color;let n;r?.a&&null!=t.minValue&&null!=t.maxValue&&u.forEach((s=>{null!=t.minValue&&null!=t.maxValue&&(n=s.attributes[e.field],(n>=t.minValue&&n<t.maxValue||i===e.classBreakInfos.length-1&&n>=t.minValue)&&a.push([s.attributes[c],r.r,r.g,r.b]))}))}));const i=o?G(a,o):a,r=new D.default;return r.functionName="Colormap",r.functionArguments={},r.functionArguments.Colormap=i,r.variableName="Raster",t.convertToRFT?new D.default({rasterFunctionDefinition:Z(r)}):r}e.classBreakInfos.forEach(((e,t)=>{if(null==e.minValue||null==e.maxValue)return;const o=e.symbol&&e.symbol.color;o?.a?(0===t?i.push(e.minValue,e.maxValue+s):i.push(e.minValue+s,e.maxValue+s),r.push(t),a.push([t,o.r,o.g,o.b])):n.push(e.minValue,e.maxValue)}));const p=o?G(a,o):a,m=new D.default;m.functionName="Remap",m.functionArguments={InputRanges:i,OutputValues:r,NoDataRanges:n},m.variableName="Raster";const d=new D.default;return d.functionName="Colormap",d.functionArguments={Colormap:p,Raster:m},t.convertToRFT?new D.default({rasterFunctionDefinition:Z(d)}):d}(e,t);case"unique-value":return function(e,t){const i=[],{pixelType:r,rasterAttributeTable:n}=t,a=null==n?null:n.features,s=B(n),o=e.defaultSymbol?.color?.toRgb(),l=e.uniqueValueInfos;if(l)if(a){if(s){const t=new Map;l.forEach((e=>{const i=e.value,r=Q(e);null!=i&&r?.a&&t.set(String(i),r.toRgb())}));const r=e.field;r&&a.forEach((e=>{let{attributes:n}=e;const a=String(n[r]),l=n[s],u=t.get(a);u?i.push([l,...u]):o&&i.push([l,...o])}))}}else for(let p=0;p<l.length;p++){const e=l[p],t=Q(e),r=+e.value;if(t?.a){if(isNaN(r))return null;i.push([r,t.r,t.g,t.b])}}const u=r?G(i,r):i,c=new D.default;return c.functionName="Colormap",c.functionArguments={},c.functionArguments.Colormap=u,c.variableName="Raster",t.convertToRFT?new D.default({rasterFunctionDefinition:Z(c)}):c}(e,t);case"raster-colormap":return function(e,t){const i=e.extractColormap();if(!i||0===i.length)return null;const{pixelType:r}=t,n=r?G(i,r):i,a=new D.default;return a.functionName="Colormap",a.functionArguments={},a.functionArguments.Colormap=n,t.convertToRFT?new D.default({rasterFunctionDefinition:Z(a)}):a}(e,t);case"vector-field":return function(e,t){const i=new D.default;i.functionName="VectorFieldRenderer";const{dataType:r,bandNames:n}=t,a="vector-uv"===r;let s,o;if(n&&2===n.length){const e=n.map((e=>e.toLowerCase()));s=e.indexOf("magnitude"),o=e.indexOf("direction")}-1!==s&&null!==s||(s=0,o=1);const l="arithmetic"===e.rotationType?1:2,u="flow-from"===e.flowRepresentation?0:1,c=e.visualVariables?e.visualVariables.find((e=>"Magnitude"===e.field)):new O.default,p={magnitudeBandID:s,directionBandID:o,isUVComponents:a,referenceSystem:l,massFlowAngleRepresentation:u,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:A[e.style.toLowerCase().replace("-","_")],minimumMagnitude:c.minDataValue,maximumMagnitude:c.maxDataValue,minimumSymbolSize:c.minSize,maximumSymbolSize:c.maxSize};i.functionArguments=p;const m=Z(i);return t.convertToRFT?D.default.fromJSON({rasterFunctionDefinition:m}):i}(e,t);case"raster-shaded-relief":return function(e,t){const i=t.convertToRFT;if("elevation"!==t.dataType&&("generic"!==t.dataType||1!==t.bandCount||"s16"!==t.pixelType&&"s32"!==t.pixelType&&"f32"!==t.pixelType&&"f64"!==t.pixelType))return new D.default;const r=new D.default;r.functionName="Hillshade";const n="traditional"===e.hillshadeType?0:1,a="none"===e.scalingType?1:3,s={HillshadeType:n,SlopeType:a,ZFactor:e.zFactor};return 0===n&&(s.Azimuth=e.azimuth,s.Altitude=e.altitude),3===a&&(s.PSPower=e.pixelSizePower,s.PSZFactor=e.pixelSizeFactor),r.functionArguments=s,r.variableName="Raster",e.colorRamp&&(r.functionName="ShadedRelief",i?s.ColorRamp=(0,N.hf)(e.colorRamp):s.Colormap=(0,N.R8)(e.colorRamp)),i?new D.default({rasterFunctionDefinition:Z(r)}):r}(e,t);case"flow":throw new Error("Unsupported rendering rule.")}}function z(e){const t=e?.Raster??e?.raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?z(t.functionArguments):e}const H={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function G(e,t){const i=V.has(t)?(0,P.hP)(t):null;return i&&e.push([Math.floor(i[0]-1),0,0,0],[Math.ceil(i[1]+1),0,0,0]),e}function B(e){if(null==e)return;const{fields:t}=e,i=t?.find((e=>e?.name&&"value"===e.name.toLowerCase()));return i?.name}function Q(e){return"polygon-3d"===e.symbol?.type?e.symbol.symbolLayers?.find((e=>"fill"===e.type))?.material?.color:e.symbol?.color}function U(e){const t=[],i=[];return e.forEach((e=>{t.push(e[0]),i.push((0,N.vL)([...e.slice(1),255]))})),{type:"RasterColormap",values:t,colors:i}}var k=i(1888),$=i(24889);let W=class extends T.A{constructor(){super(...arguments),this.layer=null,this.compression=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(e,t,i){this.layer.version<10.3||(t[i]=e)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(e,t,i){this.format&&this.format.toLowerCase().includes("jpg")&&null!=e&&(t[i]=e)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}get format(){return"vector-field"===this.layer.renderer?.type?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}get pixelType(){const{layer:e}=this;return e.pixelType!==e.serviceRasterInfo.pixelType?e.pixelType:void 0}writeLercVersion(e,t,i){"lerc"===this.format&&this.layer.version>=10.5&&(t[i]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("rasterFunction"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("pixelType"),e.commitProperty("definitionExpression"),e.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const i=e.definitionExpression;return t?i&&i!==t.where&&(t=t.clone(),t.where=i):i&&(t=new k.default({where:i})),t}get rasterFunction(){const e=this.layer;let{rasterFunction:t}=e;const i=e.pixelFilter,r=!e.format||e.format.includes("jpg")||e.format.includes("png");t=this._addResampleRasterFunction(t);const n=e.multidimensionalSubset?.areaOfInterest;return n&&(t=function(e,t){const i=new D.default({functionName:"Clip",functionArguments:{ClippingGeometry:t.toJSON(),ClippingType:1}});return j(i,e)}(t,n)),r&&!i&&"vector-field"!==e.renderer?.type&&(t=this.combineRendererWithRenderingRule(t)),t}combineRendererWithRenderingRule(e){const t=this.layer,{rasterInfo:i,renderer:r}=t;return e=e||t.rasterFunction,r&&q(r)?j(L(r,{rasterAttributeTable:i.attributeTable,pixelType:i.pixelType,dataType:i.dataType,bandNames:i.bandInfos.map((e=>{let{name:t}=e;return t})),convertColorRampToColormap:t.version<10.6,convertToRFT:!!e?.rasterFunctionDefinition,bandCount:i.bandCount}),e):e}_addResampleRasterFunction(e){if("vector-field"!==this.layer.renderer?.type||"Resample"===e?.functionName)return e;const t="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,i=this.layer.serviceRasterInfo.pixelSize;let r=new D.default({functionName:"Resample",functionArguments:{ResamplingType:t,InputCellSize:i}});return r=e?.rasterFunctionDefinition?new D.default({rasterFunctionDefinition:Z(r)}):r,j(r,e)}};(0,r._)([(0,u.MZ)()],W.prototype,"layer",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],W.prototype,"adjustAspectRatio",null),(0,r._)([(0,m.K)("adjustAspectRatio")],W.prototype,"writeAdjustAspectRatio",null),(0,r._)([(0,u.MZ)({json:{write:!0}})],W.prototype,"bandIds",null),(0,r._)([(0,u.MZ)({json:{write:!0}})],W.prototype,"compression",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],W.prototype,"compressionQuality",null),(0,r._)([(0,m.K)("compressionQuality")],W.prototype,"writeCompressionQuality",null),(0,r._)([(0,u.MZ)({json:{write:!0}})],W.prototype,"compressionTolerance",null),(0,r._)([(0,m.K)("compressionTolerance")],W.prototype,"writeCompressionTolerance",null),(0,r._)([(0,u.MZ)({json:{write:!0}})],W.prototype,"format",null),(0,r._)([(0,u.MZ)({type:String,json:{read:{reader:$.SZ.read},write:{writer:$.SZ.write}}})],W.prototype,"interpolation",null),(0,r._)([(0,u.MZ)({json:{write:!0}})],W.prototype,"noData",null),(0,r._)([(0,u.MZ)({type:String,json:{read:{reader:$.hm.read},write:{writer:$.hm.write}}})],W.prototype,"noDataInterpretation",null),(0,r._)([(0,u.MZ)({type:$.e8.apiValues,json:{read:$.e8.read,write:$.e8.write}})],W.prototype,"pixelType",null),(0,r._)([(0,u.MZ)({json:{write:!0}})],W.prototype,"lercVersion",void 0),(0,r._)([(0,m.K)("lercVersion")],W.prototype,"writeLercVersion",null),(0,r._)([(0,u.MZ)({type:Number})],W.prototype,"version",null),(0,r._)([(0,u.MZ)({json:{write:!0}})],W.prototype,"mosaicRule",null),(0,r._)([(0,u.MZ)({json:{write:!0,name:"renderingRule"}})],W.prototype,"rasterFunction",null),W=(0,r._)([(0,p.$)("esri.layers.support.ExportImageServiceParameters")],W);var K=i(50616),Y=i(76747),X=i(69953),ee=i(59718),te=i(61531),ie=i(21118),re=i(4463),ne=i(43922),ae=i(74706),se=i(51971),oe=i(21543),le=i(76874),ue=i(27181),ce=i(56908),pe=i(61682),me=i(66296),de=i(75400),he=i(286),fe=i(10193);var ye=i(75942),ge=i(58703),be=i(2180),Re=i(87520),ve=i(20681),we=i(53512),Se=i(65078);const Ie=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),_e=(0,R.Qp)(R.GB,{min:0,max:255});const Fe=e=>{let t=class extends e{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new W({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.length<1||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replaceAll(/ /gi,"_"),t.name)})),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>"number"==typeof e)))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,i){null!=e&&"lerc"!==this.format&&(t[i]=e)}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?k.default.fromJSON(t):null}get fieldsIndex(){return this.fields?new Y.default(this.fields):null}set format(e){e&&Ie.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t?.mosaicMethod&&(t=k.default.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const i=e||t.mosaicRule;return i?k.default.fromJSON(i):this._isMosaicRuleSupported(t)?k.default.fromJSON(t):null}writeMosaicRule(e,t,i){const{mosaicRule:r}=this;this._isValidCustomizedMosaicRule(r)&&(t[i]=r.toJSON())}writeNoData(e,t,i){null!=e&&"number"==typeof e&&(t[i]=_e(e))}readObjectIdField(e,t){if(!e){const i=t.fields.find((e=>"esriFieldTypeOID"===e.type||"oid"===e.type));e=i?.name}return e}get parsedUrl(){return(0,b.urlToObject)(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}get renderer(){const{activePresetRendererName:e,presetRenderers:t}=this;if(e){const i=t?.find((t=>{let{name:i}=t;return i===e}));return i?.renderer.clone()}return this.internalRenderer}set renderer(e){this.activePresetRendererName=null,this.internalRenderer=e}set internalRenderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("internalRenderer",e)}readRenderer(e,t,i){const r=t?.layerDefinition?.drawingInfo?.renderer,n=(0,ce.LF)(r,i);return null==n?null:("vector-field"===n.type&&t.symbolTileSize&&!r.symbolTileSize&&(n.symbolTileSize=t.symbolTileSize),q(n)||c.A.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),n)}writeRenderer(e,t,i){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this.fields?.map((e=>e.clone()))??[];e.push((0,ie.rZ)()),"mosaic-dataset"===this.sourceType&&this.fields?.length&&e.push((0,ie.Nd)()),this.version>=10.4&&null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.some((e=>{let{name:t}=e;return"none"===t.toLowerCase()}))&&e.push((0,ie.dy)()),null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.filter((e=>{let{name:t}=e;return"none"!==t.toLowerCase()})).forEach((t=>{let{name:i}=t;return e.push((0,ie.nq)(i))}));const{rasterInfo:t}=this;if(this._isVectorDataSet()){const i=t?.multidimensionalInfo?.variables[0].unit?.trim(),r=(0,ie.DV)(i),n=(0,ie.y6)();e.push(r,n)}if(t?.multidimensionalInfo&&"raster-dataset"===this.sourceType){const i=(0,ie.AL)(t.multidimensionalInfo);e.push(...i)}const i=t?.attributeTable;if(null!=i){const t=(0,ie.jC)(i);e.push(...t)}return e}set rasterFunction(e){let t=e;t?.rasterFunction&&(t=D.default.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}readRasterFunction(e,t){const i=t.rasterFunctionInfos;return t.renderingRule||i?.length&&"None"!==i[0].name?this._isRFTJson(t.renderingRule)?D.default.fromJSON({rasterFunctionDefinition:t.renderingRule}):D.default.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}readSpatialReference(e,t){const i=e||t.extent.spatialReference;return i?I.default.fromJSON(i):null}writePixelType(e,t,i){null!=this.serviceRasterInfo&&this.pixelType===this.serviceRasterInfo.pixelType||(t[i]=$.e8.toJSON(e))}readVersion(e,t){let i=t.currentVersion;return i||(i=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),i}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let i=e;const{renderer:r,symbolizer:n,pixelFilter:a,bandIds:s}=this;if(!this._isPicture()&&r&&n&&!a){const a=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(r.toJSON()),o=this._rasterJobHandler.instance;if(o){a&&(n.bind(),await o.updateSymbolizer(n,t),this._cachedRendererJson=r.toJSON());const l=await o.symbolize({bandIds:s,...e},t);i={extent:e.extent,pixelBlock:l}}else i={extent:e.extent,pixelBlock:n.symbolize({bandIds:s,...e})}}return i}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async calculateVolume(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsCalculateVolume)throw new s.default("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=(0,y.clone)(e),this.mosaicRule&&null==e.mosaicRule&&(e.mosaicRule=this.mosaicRule),(0,pe.calculateVolume)(this.url,e,this._getRequestOptions(t))}async computeAngles(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeAngles)throw new s.default("imagery-layer:compute-angles","this operation is not supported on the input image service");return(0,pe.computeAngles)(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputePixelLocation)throw new s.default("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return(0,pe.computePixelSpaceLocations)(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeHistograms)throw new s.default("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=(0,y.clone)(e),this._applyMosaicAndRenderingRules(e),(0,pe.computeHistograms)(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeStatisticsHistograms)throw new s.default("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=(0,y.clone)(e),this._applyMosaicAndRenderingRules(e),(0,pe.computeStatisticsHistograms)(this.url,e,this._getRequestOptions(t))}async measureHeight(e,t){const i=await this._fetchCapabilities(t?.signal);if(!("base-and-top"===e.operationType?i.mensuration.supportsHeightFromBaseAndTop:"base-and-top-shadow"===e.operationType?i.mensuration.supportsHeightFromBaseAndTopShadow:i.mensuration.supportsHeightFromTopAndTopShadow))throw new s.default("imagery-layer:measure-height","this operation is not supported on the input image service");return e=(0,y.clone)(e),this._applyMosaicRule(e),(0,pe.measureHeight)(this.url,e,this._getRequestOptions(t))}async measureAreaAndPerimeter(e,t){const i=await this._fetchCapabilities(t?.signal);if(!i.mensuration.supportsAreaAndPerimeter||e.is3D&&!i.mensuration.supports3D)throw new s.default("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=(0,y.clone)(e),this._applyMosaicRule(e),(0,pe.measureAreaAndPerimeter)(this.url,e,this._getRequestOptions(t))}async measureDistanceAndAngle(e,t){const i=await this._fetchCapabilities(t?.signal);if(!i.mensuration.supportsDistanceAndAngle||e.is3D&&!i.mensuration.supports3D)throw new s.default("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=(0,y.clone)(e),this._applyMosaicRule(e),(0,pe.measureDistanceAndAngle)(this.url,e,this._getRequestOptions(t))}async measurePointOrCentroid(e,t){const i=await this._fetchCapabilities(t?.signal);if(!i.mensuration.supportsPointOrCentroid||e.is3D&&!i.mensuration.supports3D)throw new s.default("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=(0,y.clone)(e),this._applyMosaicRule(e),(0,pe.measurePointOrCentroid)(this.url,e,this._getRequestOptions(t))}async measureLengthFromImage(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsMeasureFromImage)throw new s.default("imagery-layer:measure-length-from-image","this operation is not supported on the input image service");if("polyline"!==e.geometry.type)throw new s.default("imagery-layer:measure-length-from-image","this input geometry must be a polyline");return(0,pe.measureLengthFromImage)(this.url,e,this._getRequestOptions(t))}async measureAreaFromImage(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsMeasureFromImage)throw new s.default("imagery-layer:measure-area-from-image","this operation is not supported on the input image service");if("polygon"!==e.geometry.type)throw new s.default("imagery-layer:measure-area-from-image","this input geometry must be a polygon");return(0,pe.measureAreaFromImage)(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return null!=t?t.get(e):void 0}getFieldDomain(e,t){const i=this.getField(e);return i?i.domain:null}async fetchImage(e,t,r){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(null==e||null==t||null==r)throw new s.default("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){const e=await this._generateRasterInfo(this.rasterFunction,{signal:n.signal});e&&(this.rasterInfo=e)}const a=this.getExportImageServiceParameters(e,t,r,n.timeExtent);if(null==a){if(n.requestAsImageElement&&this._canRequestImageElement(this.format)){const e=document.createElement("canvas");return e.width=t,e.height=r,n.returnImageBitmap?{imageBitmap:await(0,X.m)(e,`${i(this.parsedUrl)}/exportImage`,n.signal)}:{imageOrCanvasElement:e}}const{bandIds:a,rasterInfo:s}=this,o=(a?.length||s.bandCount)??0,l=t*r,u=s.pixelType,c=[];for(let e=0;e<o;e++)c.push(te.default.createEmptyBand(u,l));return{pixelData:{pixelBlock:new te.default({width:t,height:r,pixels:c,mask:new Uint8Array(l),pixelType:u}),extent:e}}}const o=!!n.requestAsImageElement&&!this.pixelFilter,l=o&&!!n.returnImageBitmap,u={imageServiceParameters:a,imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:o,returnImageBitmap:l,signal:n.signal};return this._requestArrayBuffer(u)}fetchKeyProperties(e){return(0,f.default)(i(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then((e=>e.data))}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new s.default("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):(0,f.default)(i(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then((e=>Re.default.fromJSON(e.data)))}getCatalogItemRasterInfo(e,t){const r={...t,query:this._getQueryParams()};return async function(e,t,i){const r=(0,fe.Dl)(e),n=(0,fe.lF)({...r?.query,f:"json"}),a=(0,fe.jV)(n,i),s=`${r?.path}/${t}/info`,o=(0,f.default)(`${s}`,a),l=(0,f.default)(`${s}/keyProperties`,a),u=await Promise.allSettled([o,l]),c="fulfilled"===u[0].status?u[0].value.data:null,p="fulfilled"===u[1].status?u[1].value.data:null;let m=null;c.statistics?.length&&(m=c.statistics.map((e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]}))));const d=w.default.fromJSON(c.extent),h=Math.ceil(d.width/c.pixelSizeX-.1),y=Math.ceil(d.height/c.pixelSizeY-.1),g=d.spatialReference,b=new de.default({x:c.pixelSizeX,y:c.pixelSizeY,spatialReference:g}),R=c.histograms?.length?c.histograms:null,v=new he.A({origin:c.origin,blockWidth:c.blockWidth,blockHeight:c.blockHeight,firstPyramidLevel:c.firstPyramidLevel,maximumPyramidLevel:c.maxPyramidLevel});return new re.default({width:h,height:y,bandCount:c.bandCount,extent:d,spatialReference:g,pixelSize:b,pixelType:c.pixelType.toLowerCase(),statistics:m,histograms:R,keyProperties:p,storageInfo:v})}(i(this.parsedUrl),e,r)}async getCatalogItemICSInfo(e,t){const{data:r}=await(0,f.default)(i(this.parsedUrl)+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),n=r?.ics;if(!n)return;let a=null;try{a=(await(0,f.default)(i(this.parsedUrl)+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!a?.spatialReference)return{ics:n,icsToPixelTransform:null,icsExtent:null,northDirection:null};const s=this.version>=10.7?(0,f.default)(i(this.parsedUrl)+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>({}))):{},o=a.spatialReference,l={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[a]}),inSR:(0,_.YX)(o),outSR:"0:"+e},u=(0,f.default)(i(this.parsedUrl)+"/project",{query:this._getQueryParams(l),...t}).then((e=>e.data)).catch((()=>({}))),c=(a.xmin+a.xmax)/2,p=(a.ymax-a.ymin)/6,m=a.ymin+p,d=[];for(let i=0;i<5;i++)d.push({x:c,y:m+p*i});const h={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:d}),inSR:(0,_.YX)(o),outSR:"0:"+e},y=(0,f.default)(i(this.parsedUrl)+"/project",{query:this._getQueryParams(h),...t}).then((e=>e.data)).catch((()=>({}))),g=await Promise.all([s,u,y]);let b=g[0].ipxf;if(null==b){const e=n.geodataXform?.xf_0;"topup"===e?.name?.toLowerCase()&&6===e?.coefficients?.length&&(b={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const R=w.default.fromJSON(g[1]?.geometries?.[0]);R&&(R.spatialReference=new I.default({wkid:0,imageCoordinateSystem:n}));const v=g[2].geometries?g[2].geometries.filter((e=>null!=e?.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y)):[],S=v.length;if(S<3)return{ics:n,icsToPixelTransform:b,icsExtent:R,northDirection:null};let F=0,x=0,T=0,D=0;for(let i=0;i<S;i++)F+=v[i].x,x+=v[i].y,T+=v[i].x*v[i].x,D+=v[i].x*v[i].y;const P=(S*D-F*x)/(S*T-F*F);let M=0;const N=v[4].x>v[0].x,C=v[4].y>v[0].y;return P===1/0?M=C?90:270:0===P?M=N?0:180:P>0?M=N?180*Math.atan(P)/Math.PI:180*Math.atan(P)/Math.PI+180:P<0&&(M=C?180+180*Math.atan(P)/Math.PI:360+180*Math.atan(P)/Math.PI),{ics:n,icsToPixelTransform:b,icsExtent:R,northDirection:M}}async generateRasterInfo(e,t){e=(0,R.PZ)(D.default,e);const r={...t,query:this._getQueryParams()};if(!e||"none"===e.functionName?.toLowerCase()||this._isVectorFieldResampleFunction(e))return this.serviceRasterInfo??(0,me.Tw)(i(this.parsedUrl),this.sourceJSON,r);const n=function(e){const t=JSON.stringify(e),i=t.includes('"rasterFunctionDefinition":{'),r=i?t.match(/"type":"(.*?FunctionArguments")/gi):t.match(/"rasterFunction":"(.*?")/gi),n=r?.map((e=>i?e.slice(8,-18):e.slice(18,-1)));return n?n.join("/"):null}(e);if(!n)throw new s.default("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[n])return this._functionRasterInfos[n];const a=(0,me.X6)(i(this.parsedUrl),e,r);this._functionRasterInfos[n]=a;try{return await a}catch(o){throw this._functionRasterInfos[n]=null,o}}getExportImageServiceParameters(e,t,r,n){e=e.clone().shiftCentralMeridian();const a=(0,pe.getImageSpatialReferenceQueryParameter)(e.spatialReference,i(this.parsedUrl)),s=this.exportImageServiceParameters.toJSON(),{bandIds:o,noData:l}=s;let{renderingRule:u}=s;const c=this.rasterFunction?.rasterFunctionDefinition,p=this.renderer?.type,m=!p||"raster-stretch"===p||"raster-colormap"===p||"unique-value"===p||"class-breaks"===p||"raster-shaded-relief"===p;if(o?.length&&this._hasRasterFunction(this.rasterFunction)&&!c&&m){const e={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:o}};if("Stretch"===u.rasterFunction)e.rasterFunctionArguments.Raster=u.rasterFunctionArguments.Raster,u.rasterFunctionArguments.Raster=e;else if("Colormap"===u.rasterFunction){const t=u.rasterFunctionArguments.Raster;"Stretch"===t?.rasterFunction?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,u.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=u,u=e;s.bandIds=void 0}else s.bandIds=o?.join(",");Array.isArray(l)&&l.length>0&&(s.noData=l.join(","));const d=this._processMultidimensionalIntersection(null,n,this.exportImageServiceParameters.mosaicRule);if(d.isOutSide)return null;s.mosaicRule=null!=d.mosaicRule?JSON.stringify(d.mosaicRule):null,n=d.timeExtent,s.renderingRule=this._getRenderingRuleString(D.default.fromJSON(u));const h={};if(null!=n){const{start:e,end:t}=n.toJSON();e&&t&&e===t?h.time=""+e:null==e&&null==t||(h.time=`${e??"null"},${t??"null"}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:a,imageSR:a,size:t+","+r,...s,...h}}async getSamples(e,t){const i=await this._fetchCapabilities(t?.signal);if(!i?.operations.supportsGetSamples)throw new s.default("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=(0,y.clone)(e);const{raster:r}=this;return r&&null==e.raster&&(e.raster=r),(0,pe.getSamples)(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsIdentify)throw new s.default("imagery-layer:identify","identify operation is not supported on the input image service");e=(0,y.clone)(e),this.version<10.91&&"extent"===e.geometry?.type&&(e.geometry=S.default.fromExtent(e.geometry));const i=this._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||this.mosaicRule);if(i.isOutSide)throw new s.default("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=i.timeExtent,e.mosaicRule=i.mosaicRule;const{raster:r,rasterFunction:n}=this;return n&&null==e.rasterFunction&&(e.rasterFunction=n),r&&null==e.raster&&(e.raster=r),(0,pe.identify)(this.url,e,this._getRequestOptions(t))}async imageToMap(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsImageToMap)throw new s.default("imagery-layer:image-to-map","imageToMap operation is not supported on the input image service");return(0,pe.imageToMap)(i(this.parsedUrl),e,this._getRequestOptions(t))}async imageToMapMultiray(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsImageToMapMultiray)throw new s.default("imagery-layer:image-to-map-multiray","imageToMapMultiray operation is not supported on the input image service");return(0,pe.imageToMapMultiray)(i(this.parsedUrl),e,this._getRequestOptions(t))}async mapToImage(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsMapToImage)throw new s.default("imagery-layer:map-to-image","mapToImage operation is not supported on the input image service");return(0,pe.mapToImage)(i(this.parsedUrl),e,this._getRequestOptions(t))}async findImages(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsFindImages)throw new s.default("imagery-layer:find-images","findImages operation is not supported on the input image service");return(0,pe.findImages)(i(this.parsedUrl),e,this._getRequestOptions(t))}async getImageUrl(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsGetImageUrl)throw new s.default("imagery-layer:get-image-url","getImageUrl operation is not supported on the input image service");return(0,pe.getImageUrl)(i(this.parsedUrl),e,this._getRequestOptions(t))}createQuery(){return new we.default({outFields:["*"],returnGeometry:!0,where:this.definitionExpression||"1=1"})}async queryBoundary(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQueryBoundary)throw new s.default("imagery-layer:query-boundary","queryBoundary operation is not supported on the input image service");return e=e??{outSpatialReference:this.spatialReference},(0,pe.queryBoundary)(i(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasters(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,be.s)(this.url,e,t)}async queryObjectIds(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,ge.V)(this.url,e,t)}async queryGPSInfo(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQueryGPSInfo)throw new s.default("imagery-layer:query-gps-info","queryGPSInfo operation is not supported on the input image service");return e=e??{where:"1=1"},(0,pe.queryGPSInfo)(i(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasterCount(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,ye.I)(this.url,e,t)}async queryVisibleRasters(e,t){if(!e)throw new s.default("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:i,returnDomainValues:r,returnTopmostRaster:n,showNoDataRecords:a}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let o=!1,l=null,u=null;const c=ie.F_.servicePixelValue.toLowerCase(),p=this._rasterFunctionNamesIndex;if(null!=e.outFields&&(o=e.outFields.some((e=>!e.toLowerCase().startsWith(c))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().startsWith(c)&&e.length>c.length)).map((e=>{const t=e.slice(c.length+1);return[this._updateRenderingRulesFunctionName(t,p),t]}));l=t.map((e=>new D.default({functionName:e[0]}))),u=t.map((e=>e[1]));const{rasterFunction:i}=this;0===l.length?i?.functionName?(l.push(i),u.push(i.functionName)):l=null:i?.functionName&&!l.some((e=>e.functionName===i.functionName))&&(l.push(i),u.push(i.functionName))}const m=null==e.outSpatialReference||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:d}=this;let h=e.timeExtent||this.timeExtent;if(d){const{isOutside:t,intersection:i}=(0,ae.Rp)(d,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:this.exportImageServiceParameters.mosaicRule?.multidimensionalDefinition});if(t)throw new s.default("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");null!=i?.timeExtent&&(h=i.timeExtent)}const f=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,h);let y=e.geometry;this.version<10.91&&"extent"===y?.type&&(y=S.default.fromExtent(y));const g=this._getQueryParams({geometry:y,timeExtent:h,mosaicRule:f,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:l,pixelSize:i,returnCatalogItems:o,returnGeometry:m,raster:this.raster,maxItemCount:n?1:null});delete g.f;const b=new ve.default(g);try{await this._generateRasterInfo(this.rasterFunction);const i=await(0,pe.identify)(this.url,b,{signal:t?.signal,query:{...this.customParameters}}),n=e.outFields,s=null!=i.value&&i.value.toLowerCase().includes("nodata"),l=o&&!m&&i?.catalogItems?.features.length&&(a||!s),c=this.multidimensionalInfo&&"raster-dataset"===this.sourceType?(0,ae.XU)({rasterInfo:this.rasterInfo,multidimensionalDefinition:f?.multidimensionalDefinition,timeExtent:h,multidimensionalSubset:this.multidimensionalSubset}):null;if(!l)return this._processVisibleRastersResponse(i,{returnDomainValues:r,templateRRFunctionNames:u,showNoDataRecords:a,templateFields:n,effectiveMultidimensionalDefinition:c});const p=this.objectIdField||"ObjectId",d=i.catalogItems?.features??[],y=d.map((e=>e.attributes?.[p])),g=new we.default({objectIds:y,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[p]}),R=await this.queryRasters(g);return R?.features?.length&&R.features.forEach((t=>{d.forEach((i=>{i.attributes[p]===t.attributes[p]&&t.geometry&&(i.geometry=t.geometry.clone(),null!=e.outSpatialReference&&(i.geometry.spatialReference=e.outSpatialReference))}))})),this._processVisibleRastersResponse(i,{returnDomainValues:r,templateRRFunctionNames:u,showNoDataRecords:a,templateFields:n,effectiveMultidimensionalDefinition:c})}catch{throw new s.default("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const r=(0,f.default)(i(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>e.data?.statistics)),n=(0,f.default)(i(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>e.data?.histograms)),a=await Promise.all([r,n]);return a[0]&&a[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:a[0]||null,histograms:a[1]||null}}async createFlowMesh(e,t){const i=this._rasterJobHandler.instance;return i?i.createFlowMesh(e,t):(0,Se.CW)(e.meshType,e.simulationSettings,e.flowData,null!=t.signal?t.signal:(new AbortController).signal)}getMultidimensionalSubsetVariables(e){const t=e??this.serviceRasterInfo.multidimensionalInfo;return(0,ae.z2)(this.multidimensionalSubset,t)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=null!=this.serviceRasterInfo?Promise.resolve(this.serviceRasterInfo):(0,me.Tw)(i(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then((e=>(this._set("serviceRasterInfo",e),this._set("multidimensionalInfo",e.multidimensionalInfo),(0,me.E9)(e,t),e))),n=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:e}):null,a=this._getRasterFunctionInfos();return Promise.all([r,n,a]).then((e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),e[2]&&this._set("rasterFunctionInfos",e[2]),this.internalRenderer&&!this._isSupportedRenderer(this.internalRenderer)&&(this._set("internalRenderer",null),c.A.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("internalRenderer",this._configRenderer(this.renderer)),this.addHandles([(0,g.watch)((()=>this.rasterFunction),(e=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e)}))}))]);const{serviceRasterInfo:t}=this;null!=t.multidimensionalInfo&&this._updateMultidimensionalDefinition(t)}))}_combineMosaicRuleWithTimeExtent(e,t){const i=this.timeInfo,{multidimensionalInfo:r}=this.serviceRasterInfo;if(null==e||null==r||null==t||null==i?.startField)return e;const{startField:n}=i,a=r.variables.some((e=>e.dimensions.some((e=>e.name===n))))?n:"StdTime";if(e=e.clone(),"mosaic-dataset"===this.sourceType)return e.multidimensionalDefinition=e.multidimensionalDefinition?.filter((e=>e.dimensionName!==a)),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const s=e.multidimensionalDefinition.filter((e=>e.dimensionName===a)),o=null!=t.start?t.start.getTime():null,l=null!=t.end?t.end.getTime():null,u=null==o||null==l||o===l,c=u?[o||l]:[[o,l]],p=this.version>=10.8;if(s.length)s.forEach((e=>{e.dimensionName===a&&(p?(e.dimensionName=null,e.isSlice=!1,e.values=[]):(e.isSlice=u,e.values=c))}));else if(!p){const t=e.multidimensionalDefinition.filter((e=>null!=e.variableName&&null==e.dimensionName));t.length?t.forEach((e=>{e.dimensionName=a,e.isSlice=u,e.values=c})):e.multidimensionalDefinition.push(new x.default({variableName:"",dimensionName:a,isSlice:u,values:c}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return null==e?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter((e=>!(!e.variableName&&!e.dimensionName))),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this.sourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQuery)throw new s.default("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=null!=e?(0,R.PZ)(we.default,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new ne.A;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e}),(()=>{})),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,rasterFunction:i}=this;return"unique-value"===e.type&&this._hasRasterFunction(i)&&1===t?.bandCount&&["u8","s8"].includes(t.pixelType)||null!=t&&null!=e&&(0,le.fp)(t).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){let t=this.sourceJSON;if(!t){const{data:r,ssl:n}=await(0,f.default)(i(this.parsedUrl),{query:this._getQueryParams(),signal:e});t=r,this.sourceJSON=t,n&&(this.url=this.url.replace(/^http:/i,"https:"))}if(t.capabilities?.toLowerCase().split(",").map((e=>e.trim())).indexOf("tilesonly")>-1)throw new s.default("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(t,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:e.fields?.length>0}_isMosaicRuleSupported(e){if(!e)return!1;const t=this._isMosaicDataset(e),i=e.currentVersion>=10.71&&e.hasMultidimensions&&!(e.fields?.length>1);return t||i}_isVectorFieldResampleFunction(e){if(null==e)return!1;const{functionName:t,functionArguments:i}=e,r="resample"===t?.toLowerCase(),n=i?.ResampleType||i?.resampleType;return r&&(7===n||10===n)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){const t=this._isPicture(),{rasterInfo:i}=this;if(!t&&!this.pixelFilter||this._isVectorDataSet()){const t=this.mosaicRule?.multidimensionalDefinition?.[0].variableName,r=(0,le.I8)({variableName:t,rasterFunctionName:this.rasterFunction?.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&i.bandCount>=3){const e=r?.bandIds??(0,le.ci)(i);!e||3===i.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}e||(e=r?.renderer??(0,le.PD)(i,{bandIds:this.bandIds,variableName:this.rasterFunction?null:t}));const n=(0,le.$P)(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=n,this.symbolizer.rasterInfo=i):this.symbolizer=new ue.A({rendererJSON:n,rasterInfo:i}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:null!=e.pixelBlock?e.pixelBlock.clone():null}}_getQueryParams(e){null!=e?.renderingRule&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:i}=this;return{raster:t,viewId:i,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e?.query,...this.customParameters}}}_decodePixelBlock(e,t,i){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):(0,se.D)(e,t,i)}async _getRasterFunctionInfos(e){const t=this.sourceJSON.rasterFunctionInfos;if(this.loaded)return t;if(t&&this.version>=10.3){if(1===t.length&&"none"===t[0].name.toLowerCase())return t;const r=await(0,f.default)(i(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e});return r.data?.rasterFunctionInfos}return null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:r,returnImageBitmap:n,signal:a}=e;if(r&&this._canRequestImageElement(t.format)){const r=`${i(this.parsedUrl)}/exportImage`,{data:s}=await(0,f.default)(r,{responseType:n?"blob":"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...e.imageServiceParameters}),signal:a});return s instanceof Blob?{imageBitmap:await(0,X.m)(s,r,a),params:t}:{imageOrCanvasElement:s,params:t}}const o=this._initJobHandler(),l=(0,f.default)(i(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:a}),u=(await Promise.all([l,o]))[0].data,c=t.format||"jpgpng";let p=c;if("bsq"!==p&&"bip"!==p&&(p=(0,se.g)(u)),!p)throw new s.default("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(u)));const m={signal:a},d="gif"===c||"bmp"===c||c.includes("png")&&("png"===p||"jpg"===p)?(0,se.D)(u,{useCanvas:!0,...t},m):this._decodePixelBlock(u,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:c},m);return{pixelData:{pixelBlock:await d,extent:t.extent},params:t}}_generateRasterInfo(e,t){return this.generateRasterInfo(e,t).catch((()=>null))}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this.defaultMosaicRule?.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let t=(0,ae.fy)(e,{multidimensionalSubset:this.multidimensionalSubset});if(null!=t&&t.length>0){this.mosaicRule=this.mosaicRule||new k.default;const e=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&"none"!==this.rasterFunction.functionName?.toLowerCase()&&t.forEach((e=>e.variableName="")),t=t.filter((e=>{let{variableName:t,dimensionName:i}=e;return t&&"*"!==t||i})),!e?.length&&t.length&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){t=t||{};const i=e.value,{templateRRFunctionNames:r,showNoDataRecords:n,returnDomainValues:a,templateFields:s}=t,o=e.processedValues;let l=e.catalogItems?.features,u=e.properties?.Values?.map((e=>e.replaceAll(/ /gi,", ")))||[];const c=this.objectIdField||"ObjectId",p="string"==typeof i&&i.toLowerCase().includes("nodata"),m=[];if(i&&!l&&!p){const e={};e[c]=0,u=[i],l=[new h.default({geometry:this.fullExtent,attributes:e})],this.multidimensionalInfo&&"raster-dataset"===this.sourceType&&(0,ie.eS)(this.rasterFields,e,t.effectiveMultidimensionalDefinition)}if(!l)return[];this._updateResponseFieldNames(l,s),p&&!n&&(l=[]);const{itemPixelValue:d,servicePixelValue:f}=ie.F_,y=this.rasterFields.some((e=>e.name===d));for(let h=0;h<l.length;h++){const e=l[h];if(null!=i){const t=u[h],a=this.rasterFunction&&o&&o.length>0&&r&&r.length>0&&r.includes(this.rasterFunction.functionName)?o[r.indexOf(this.rasterFunction.functionName)]:i;if("nodata"===t.toLowerCase()&&!n)continue;y&&(e.attributes[d]=t),e.attributes[f]=a,this._updateFeatureWithMagDirValues(e,t);const s=this.fields&&this.fields.length>0;let l=this.rasterFunction&&null!=this.serviceRasterInfo.attributeTable?s?t:i:a;this.rasterFunction||(l=s?t:i),this._updateFeatureWithRasterAttributeTableValues(e,l)}if(e.sourceLayer=e.layer=this,a&&this._updateFeatureWithDomainValues(e),r&&o&&r.length===o.length)for(let t=0;t<r.length;t++){const i=`${ie.F_.servicePixelValue}.${r[t]}`;e.attributes[i]=o[t]}m.push(l[h])}return m}_processMultidimensionalIntersection(e,t,i){const{multidimensionalSubset:r}=this;if(!r)return{isOutSide:!1,timeExtent:t,mosaicRule:i=this._combineMosaicRuleWithTimeExtent(i,t)};if(r){const{isOutside:i,intersection:n}=(0,ae.Rp)(r,{geometry:e,timeExtent:t});if(i)return{isOutSide:!0,timeExtent:null,mosaicRule:null};null!=n?.timeExtent&&(t=n.timeExtent)}if(i=this._combineMosaicRuleWithTimeExtent(i,t),i?.multidimensionalDefinition){const{isOutside:e}=(0,ae.Rp)(r,{multidimensionalDefinition:i.multidimensionalDefinition});if(e)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:t,mosaicRule:i}}_updateFeatureWithRasterAttributeTableValues(e,t){const i=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(null==i)return;const{features:r,fields:n}=i,a=n.map((e=>e.name)).find((e=>"value"===e.toLowerCase()));if(!a)return;const s=r.filter((e=>e.attributes[a]===(null!=t?parseInt(t,10):null)));s&&s[0]&&n.forEach((t=>{const i=ie.ER+t.name;e.attributes[i]=s[0].attributes[t.name]}))}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const i=t.split(/,\s*/).map((e=>parseFloat(e))),r=i.map((e=>[e])),n=i.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),a=new te.default({height:1,width:1,pixelType:"f32",pixels:r,statistics:n});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:a,extent:new w.default(0,0,0,0,this.spatialReference)});const s="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[a.pixels[0][0],a.pixels[1][0]]:(0,oe.Lu)([a.pixels[0][0],a.pixels[1][0]]);e.attributes[ie.F_.magnitude]=s[0],e.attributes[ie.F_.direction]=s[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((e=>e.domain&&"coded-value"===e.domain.type));null!=t&&t.forEach((t=>{const i=e.attributes[t.name];if(null!=i){const r=t.domain.codedValues.find((e=>e.code===i));r&&(e.attributes[t.name]=r.name)}}))}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const i=this.fieldsIndex;null!=i&&e.forEach((e=>{if(e?.attributes)for(const r of t){const t=i.get(r)?.name;t&&t!==r&&(e.attributes[r]=e.attributes[t],delete e.attributes[t])}}))}_getRenderingRuleString(e){if(e){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRasterFunction(e){return null!=e?.functionName&&"none"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const i=e.toLowerCase().replaceAll(/ /gi,"_");return t.has(i)?t.get(i):e}_isRFTJson(e){return e?.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType}_applyMosaicAndRenderingRules(e){const{raster:t,mosaicRule:i,rasterFunction:r}=this;r&&null==e.rasterFunction&&(e.rasterFunction=r),i&&null==e.mosaicRule&&(e.mosaicRule=i),t&&null==e.raster&&(e.raster=t)}_applyMosaicRule(e){const{raster:t,mosaicRule:i}=this;i&&null==e.mosaicRule&&(e.mosaicRule=i),t&&null==e.raster&&(e.raster=t)}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map((e=>e.trim())):["image","catalog"],{currentVersion:i,advancedQueryCapabilities:r,maxRecordCount:n}=e,a=t.includes("image"),s="esriImageServiceDataTypeElevation"===e.serviceDataType,o=!(!e.spatialReference&&!e.extent?.spatialReference),l=t.includes("edit"),u=t.includes("mensuration")&&o,c=null==e.mensurationCapabilities?[]:e.mensurationCapabilities.toLowerCase().split(",").map((e=>e.trim())),p=u&&c.includes("basic"),m=this._isMosaicDataset(e)&&t.includes("catalog"),d=t.includes("download"),h=i>=10.7&&s||i>=11.4&&(s||u&&c.includes("3d"));return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:a,supportsExportImage:a,supportsIdentify:a,supportsImageToMap:i>=11.2&&m,supportsImageToMapMultiray:i>=11.2&&m,supportsMapToImage:i>=11.2&&m,supportsFindImages:i>=11.2&&m,supportsGetImageUrl:i>=11.3&&d,supportsMeasure:u,supportsMeasureFromImage:i>=11.2,supportsDownload:d,supportsQuery:m&&e.fields&&e.fields.length>0,supportsGetSamples:i>=10.2&&a,supportsProject:i>=10.3&&a,supportsComputeStatisticsHistograms:i>=10.4&&a,supportsQueryBoundary:i>=10.6&&a,supportsCalculateVolume:h,supportsComputePixelLocation:i>=10.7&&m,supportsComputeAngles:i>=10.91,supportsQueryGPSInfo:i>=11.2&&m,supportsAdd:l,supportsDelete:l,supportsEditing:l,supportsUpdate:l,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryBins:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:n,maxRecordCountFactor:void 0,supportsStatistics:!!r?.supportsStatistics,supportsOrderBy:!!r?.supportsOrderBy,supportsDistinct:!!r?.supportsDistinct,supportsPagination:!!r?.supportsPagination,supportsStandardizedQueriesOnly:!!r?.useStandardizedQueries,supportsPercentileStatistics:!!r?.supportsPercentileStatistics,supportsCentroid:!!r?.supportsReturningGeometryCentroid,supportsCurrentUser:!1,supportsDistance:!!r?.supportsQueryWithDistance,supportsExtent:!!r?.supportsReturningQueryExtent,supportsGeometryProperties:!!r?.supportsReturningGeometryProperties,supportsHavingClause:!!r?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsReturnMesh:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!r?.supportsDefaultSR,supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0,supportsTrueCurve:!1},mensuration:{supportsDistanceAndAngle:p,supportsAreaAndPerimeter:p,supportsPointOrCentroid:p,supportsHeightFromBaseAndTop:u&&c.includes("base-top height"),supportsHeightFromBaseAndTopShadow:u&&c.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:u&&c.includes("top-top shadow height"),supports3D:u&&c.includes("3d")}}}};function i(e){return e?.path??""}return(0,r._)([(0,u.MZ)({clonable:!1})],t.prototype,"_functionRasterInfos",void 0),(0,r._)([(0,u.MZ)({clonable:!1})],t.prototype,"_rasterJobHandler",void 0),(0,r._)([(0,u.MZ)({clonable:!1})],t.prototype,"_cachedRendererJson",void 0),(0,r._)([(0,u.MZ)({readOnly:!0})],t.prototype,"_serviceSupportsMosaicRule",void 0),(0,r._)([(0,v.w)("_serviceSupportsMosaicRule",["currentVersion","fields"])],t.prototype,"readServiceSupportsMosaicRule",null),(0,r._)([(0,u.MZ)({readOnly:!0})],t.prototype,"_rasterFunctionNamesIndex",null),(0,r._)([(0,u.MZ)()],t.prototype,"adjustAspectRatio",void 0),(0,r._)([(0,u.MZ)({type:[R.jz],json:{write:!0}})],t.prototype,"bandIds",void 0),(0,r._)([(0,v.w)("bandIds")],t.prototype,"readBandIds",null),(0,r._)([(0,u.MZ)({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),(0,r._)([(0,v.w)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),(0,r._)([(0,u.MZ)({type:Number})],t.prototype,"compressionQuality",void 0),(0,r._)([(0,m.K)("compressionQuality")],t.prototype,"writeCompressionQuality",null),(0,r._)([(0,u.MZ)({type:Number})],t.prototype,"compressionTolerance",void 0),(0,r._)([(0,m.K)("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),(0,r._)([(0,u.MZ)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,r._)([(0,u.MZ)({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],t.prototype,"defaultMosaicRule",void 0),(0,r._)([(0,v.w)("defaultMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultMosaicRule",null),(0,r._)([(0,u.MZ)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],t.prototype,"definitionExpression",void 0),(0,r._)([(0,u.MZ)({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),(0,r._)([(0,u.MZ)()],t.prototype,"rasterInfo",void 0),(0,r._)([(0,u.MZ)({readOnly:!0,type:[K.default]})],t.prototype,"fields",void 0),(0,r._)([(0,u.MZ)({readOnly:!0})],t.prototype,"fieldsIndex",null),(0,r._)([(0,u.MZ)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff","bip","bsq"],json:{write:!0}})],t.prototype,"format",null),(0,r._)([(0,v.w)("service","format",["serviceDataType"])],t.prototype,"readFormat",null),(0,r._)([(0,u.MZ)({type:w.default})],t.prototype,"fullExtent",void 0),(0,r._)([(0,u.MZ)({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),(0,r._)([(0,u.MZ)({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),(0,r._)([(0,u.MZ)({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),(0,r._)([(0,u.MZ)({type:String,json:{type:$.SZ.jsonValues,read:$.SZ.read,write:$.SZ.write}})],t.prototype,"interpolation",void 0),(0,r._)([(0,u.MZ)()],t.prototype,"minScale",void 0),(0,r._)([(0,v.w)("service","minScale")],t.prototype,"readMinScale",null),(0,r._)([(0,u.MZ)()],t.prototype,"maxScale",void 0),(0,r._)([(0,v.w)("service","maxScale")],t.prototype,"readMaxScale",null),(0,r._)([(0,u.MZ)({type:k.default})],t.prototype,"mosaicRule",null),(0,r._)([(0,v.w)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),(0,r._)([(0,m.K)("mosaicRule")],t.prototype,"writeMosaicRule",null),(0,r._)([(0,u.MZ)()],t.prototype,"multidimensionalInfo",void 0),(0,r._)([(0,u.MZ)({type:ee.default,json:{write:!0}})],t.prototype,"multidimensionalSubset",void 0),(0,r._)([(0,u.MZ)({json:{type:R.jz}})],t.prototype,"noData",void 0),(0,r._)([(0,m.K)("noData")],t.prototype,"writeNoData",null),(0,r._)([(0,u.MZ)({type:String,json:{type:$.hm.jsonValues,read:$.hm.read,write:$.hm.write}})],t.prototype,"noDataInterpretation",void 0),(0,r._)([(0,u.MZ)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),(0,r._)([(0,v.w)("objectIdField")],t.prototype,"readObjectIdField",null),(0,r._)([(0,u.MZ)({readOnly:!0})],t.prototype,"geometryType",void 0),(0,r._)([(0,u.MZ)({})],t.prototype,"typeIdField",void 0),(0,r._)([(0,u.MZ)({})],t.prototype,"types",void 0),(0,r._)([(0,u.MZ)({readOnly:!0})],t.prototype,"parsedUrl",null),(0,r._)([(0,u.MZ)({type:Function})],t.prototype,"pixelFilter",void 0),(0,r._)([(0,u.MZ)()],t.prototype,"raster",void 0),(0,r._)([(0,u.MZ)({readOnly:!0})],t.prototype,"sourceType",void 0),(0,r._)([(0,v.w)("sourceType",["serviceSourceType","fields"])],t.prototype,"readSourceType",null),(0,r._)([(0,u.MZ)()],t.prototype,"viewId",void 0),(0,r._)([(0,u.MZ)()],t.prototype,"renderer",null),(0,r._)([(0,u.MZ)({types:ce.uy,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:ce.Gj,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],t.prototype,"internalRenderer",null),(0,r._)([(0,v.w)("internalRenderer")],t.prototype,"readRenderer",null),(0,r._)([(0,m.K)("internalRenderer")],t.prototype,"writeRenderer",null),(0,r._)([(0,u.MZ)({clonable:!1})],t.prototype,"symbolizer",void 0),(0,r._)([(0,u.MZ)(F.ke)],t.prototype,"opacity",void 0),(0,r._)([(0,u.MZ)({readOnly:!0})],t.prototype,"rasterFields",null),(0,r._)([(0,u.MZ)({constructOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),(0,r._)([(0,u.MZ)({type:D.default,json:{name:"renderingRule"}})],t.prototype,"rasterFunction",null),(0,r._)([(0,v.w)("rasterFunction",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRasterFunction",null),(0,r._)([(0,u.MZ)({readOnly:!0})],t.prototype,"serviceDataType",void 0),(0,r._)([(0,u.MZ)({readOnly:!0,type:I.default})],t.prototype,"spatialReference",void 0),(0,r._)([(0,v.w)("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),(0,r._)([(0,u.MZ)({type:$.e8.apiValues,json:{read:$.e8.read,type:$.e8.jsonValues}})],t.prototype,"pixelType",void 0),(0,r._)([(0,m.K)("pixelType")],t.prototype,"writePixelType",null),(0,r._)([(0,u.MZ)({constructOnly:!0,type:re.default})],t.prototype,"serviceRasterInfo",void 0),(0,r._)([(0,u.MZ)()],t.prototype,"sourceJSON",void 0),(0,r._)([(0,u.MZ)(F.OZ)],t.prototype,"url",void 0),(0,r._)([(0,u.MZ)({readOnly:!0})],t.prototype,"version",void 0),(0,r._)([(0,v.w)("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=(0,r._)([(0,p.$)("esri.layers.mixins.ArcGISImageService")],t),t};var xe=i(9171),Te=i(24203),De=i(53367),Pe=i(8592),Me=i(30528),Ne=i(44909),Ce=i(52954),Oe=i(75215),Ve=i(39936),Ae=i(92963),Ee=i(1802),qe=i(53756);let je=class extends((0,Te.dM)((0,Ve.e)((0,Oe.j)((0,Pe.q)((0,Me.A)((0,Ne.H)(Fe((0,Ce.J)((0,De.d)((0,xe.b)((0,o.P)(a.A.ClonableMixin(d.default))))))))))))){constructor(){super(...arguments),this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=(0,l.debounce)((async(e,t,r)=>{const{save:n,saveAs:a}=await i.e(41799).then(i.bind(i,41799));switch(e){case qe.X.SAVE:return n(this,t);case qe.X.SAVE_AS:return a(this,r,t)}}))}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(l.throwIfAbortError).then((()=>this._fetchService(t)))),Promise.resolve(this)}get legendEnabled(){return!this._isPreviewLayer&&(this._get("legendEnabled")??!0)}set legendEnabled(e){this._set("legendEnabled",e)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(e){this._set("listMode",e)}writeOperationalLayerType(e,t,i){const r="vector-field"===this.renderer?.type;t[i]=r?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){return!(!this.raster||!this.url?.toLowerCase().includes("/rasterrendering/imageserver"))}createPopupTemplate(e){const{rasterFields:t}=this,i=new Set,r=ie.F_.itemPixelValue.toLowerCase(),n="raster-dataset"===this.sourceType,a=ie.Oo.toLowerCase(),s=`${ie.F_.servicePixelValue.toLowerCase()}.`;for(const u of t){const e=u.name.toLowerCase();e===r||e.startsWith(s)||n&&e.startsWith(a)||i.add(u.name)}const o=(0,Ee.createPopupTemplate)({fields:t,title:this.title},{...e,visibleFieldNames:i}),{rasterInfo:l}=this;return o?.fieldInfos&&l&&(0,ie.h4)(o.fieldInfos,l),o}queryFeatures(e,t){return this.queryRasters(e,t).then((e=>{if(e?.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryFeatureCount(e,t){return this.queryRasterCount(e,t)}redraw(){this.emit("redraw")}async save(e){return this._debouncedSaveOperations(qe.X.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(qe.X.SAVE_AS,t,e)}serviceSupportsSpatialReference(e){return(0,Ae.D)(this,e)}write(e,t){if(!this._isPreviewLayer)return super.write(e,t);if(t?.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new s.default("layer:unsupported",`Imagery preview layer (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}};(0,r._)([(0,u.MZ)(F.fV)],je.prototype,"legendEnabled",null),(0,r._)([(0,u.MZ)({type:["show","hide"]})],je.prototype,"listMode",null),(0,r._)([(0,u.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],je.prototype,"isReference",void 0),(0,r._)([(0,u.MZ)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],je.prototype,"operationalLayerType",void 0),(0,r._)([(0,m.K)("web-map","operationalLayerType")],je.prototype,"writeOperationalLayerType",null),(0,r._)([(0,u.MZ)(F.M6)],je.prototype,"popupEnabled",void 0),(0,r._)([(0,u.MZ)({type:n.default,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],je.prototype,"popupTemplate",void 0),(0,r._)([(0,u.MZ)({readOnly:!0})],je.prototype,"defaultPopupTemplate",null),(0,r._)([(0,u.MZ)({readOnly:!0,json:{read:!1}})],je.prototype,"type",void 0),(0,r._)([(0,u.MZ)({readOnly:!0})],je.prototype,"_isPreviewLayer",null),je=(0,r._)([(0,p.$)("esri.layers.ImageryLayer")],je);const Je=je},99197:(e,t,i)=>{i.r(t),i.d(t,{default:()=>m});var r=i(93800),n=i(85715),a=i(19455),s=i(48602),o=i(80556),l=(i(21265),i(14746),i(47332)),u=i(75269),c=i(56908);let p=class extends(n.A.ClonableMixin(a.A)){constructor(e){super(e),this.name=void 0,this.method="none",this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};(0,r._)([(0,s.MZ)({type:String,json:{write:{isRequired:!0}}})],p.prototype,"name",void 0),(0,r._)([(0,s.MZ)({type:["raster-function-template","variable","none"],json:{write:{isRequired:!0}}}),(0,l.e)({rasterFunctionTemplate:"raster-function-template",variable:"variable",none:"none"})],p.prototype,"method",void 0),(0,r._)([(0,s.MZ)({type:String,json:{write:{isRequired:!0}}})],p.prototype,"value",void 0),(0,r._)([(0,s.MZ)({type:[o.jz],json:{write:{isRequired:!0}}})],p.prototype,"bandIds",void 0),(0,r._)([(0,s.MZ)({types:c.uy,json:{write:!0,origins:{"web-scene":{types:c.Gj,write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],p.prototype,"renderer",void 0),p=(0,r._)([(0,u.$)("esri.renderers.support.RasterPresetRenderer")],p);const m=p}}]);