"use strict";(self.webpackChunkever_wading_birds=self.webpackChunkever_wading_birds||[]).push([[12364],{12364:(e,t,s)=>{s.d(t,{uploadAssets:()=>x});var o=s(23060),r=s(21265),n=s(50925),a=s(49959),i=s(26988),l=s(43103),u=s(12130),c=s(93321),p=s(81336),d=s(74217),f=s(47294),m=s(65073),h=s(25009);const g=1e6,w=20*g,y=2e9,b=3;async function A(e,t,s){let{data:r,name:n,description:i}=e,u=null;try{const e=(0,l.join)(t,"uploads"),p=(0,l.join)(e,"info"),{data:d}=await(0,o.default)(p,{query:{f:"json"},responseType:"json"});(0,a.throwIfAborted)(s);const f=(0,m.Wo)(t),A=d.maxUploadFileSize*g,v=f?y:A,P=f?Math.min(w,A):w;if(r.size>v)throw new Error("Data too large");const T=(0,l.join)(e,"register"),{data:x}=await(0,o.default)(T,{query:{f:"json",itemName:(c=n,c.replaceAll("/","_").replaceAll("\\","_")),description:i},responseType:"json",method:"post"});if((0,a.throwIfAborted)(s),!x.success)throw new Error("Registration failed");const{itemID:I}=x.item;u=(0,l.join)(e,I);const j=(0,l.join)(u,"uploadPart"),F=Math.ceil(r.size/P),D=new Array;for(let t=0;t<F;++t)D.push(r.slice(t*P,Math.min((t+1)*P,r.size)));const $=D.slice().reverse(),M=new Array,N=(0,h.XA)(F,s?.onProgress,"uploadItem"),E=async()=>{for(;0!==$.length;){const e=D.length-$.length,t=$.pop(),r=new FormData,n=N.simulate(e,(0,h.V7)(t.size));try{r.append("f","json"),r.append("file",t),r.append("partId",`${e}`);const{data:n}=await(0,o.default)(j,{timeout:0,body:r,responseType:"json",method:"post"});if((0,a.throwIfAborted)(s),!n.success)throw new Error("Part upload failed")}finally{n.remove()}}};for(let t=0;t<b&&0!==$.length;++t)M.push(E());await Promise.all(M);const S=(0,l.join)(u,"commit"),{data:_}=await(0,o.default)(S,{query:{f:"json",parts:D.map(((e,t)=>t)).join(",")},responseType:"json",method:"post"});if((0,a.throwIfAborted)(s),!_.success)throw new Error("Commit failed");return _.item}catch(p){if(null!=u){const e=(0,l.join)(u,"delete");await(0,o.default)(e,{query:{f:"json"},responseType:"json",method:"post"})}throw p}var c}var v=s(26936),P=s(65477),T=s(47423);async function x(e,t,s){const o=e.length;if(!o)return s?.onProgress?.(1),[];const n=(0,h.XA)(o,s?.onProgress,"uploadAssets");return Promise.all(e.map(((e,o)=>async function(e,t,s){let{layer:o,ongoingUploads:n}=t;const i=n.get(e);if(i)return i;if(!function(e){return!!e.infoFor3D&&!!e.url}(o))throw new d.Wt;if(function(e,t){const{parsedUrl:s}=t;return null!=s&&e.metadata.externalSources.some((e=>(0,p.eN)(e,s)))}(e,o))return s?.onProgress?.(1),e;const m=async function(e,t,s){const{metadata:o}=e,{displaySource:n}=o,i=I(n?.source,t,{checkForConversionRequired:(0,r.A)("enable-feature:georeferenced-uploads")}),m=null!=i?async function(e,t,s){return{source:await F(e,t,s),original:!0,unitConversionDisabled:!0}}(i,t,s):o.externalSources.length>0?async function(e,t,s){const o=N(t),{externalSources:n}=e.metadata,a=function(e,t){for(const s of e){const e=I(s.source,t);if(e)return e}return null}(n,t);if(!a)throw new d.xY;const i=(0,h.XA)(f.y.uploadConvertibleSource,s?.onProgress,"uploadConvertibleSource"),u=await F(a,t,{onProgress:i.makeOnProgress("uploadEditSource")});e.addExternalSources([{source:u,original:!0}]);const m=a.reduce(((e,t)=>{let{asset:s}=t;return s instanceof File?e+s.size:e}),0),g=i.simulate("serviceAssetsToGlb",(0,h.sL)(m));try{const{source:n,transform:a,origin:i}=await async function(e,t,s){const o=e.map((e=>{let{assetName:t,parts:s}=e;return{assetName:t,assetHash:s[0].partHash}}));let n;try{const e=(0,l.join)(t.parsedUrl.path,"convert3D"),r=t.capabilities?.operations.supportsAsyncConvert3D;n=(await(r?M:$)(e,{query:{f:"json",assets:JSON.stringify(o),transportType:"esriTransportTypeUrl",targetFormat:s,async:r},responseType:"json",timeout:0})).data}catch(a){throw new d.MT}return function(e,t){const s={source:t.assets.map((t=>{const s=(0,v.R_)(t.contentType,e.infoFor3D.supportedFormats);if(!s)throw new d.H2(s);return new p.Qp(t.assetName,t.contentType,[new p.Bq(t.assetURL,t.assetHash)])})),origin:void 0,transform:void 0};if((0,r.A)("enable-feature:georeferenced-uploads")&&t.transform){if(s.transform=(0,T.f)(t.transform),t.spatialReference){const e=c.default.fromJSON(t.spatialReference);s.origin=(0,T.V)(t.transform,e)}}else s.transform=(0,P.Z)(e.spatialReference);return s}(t,n)}(u,t,o);return e.transform=a,i&&(e.metadata.georeferenced=!0,s?.useAssetOrigin&&(e.vertexSpace.origin=[i.x,i.y,i.z??0],e.spatialReference=i.spatialReference)),{source:n,unitConversionDisabled:!0}}finally{g.remove()}}(e,t,s):async function(e,t,s){const o=(0,h.XA)(f.y.uploadLocalMesh,s?.onProgress,"uploadLocalMesh"),r=async function(e,t,s){const o=N(t),r=await e.load(s),n=await r.toBinaryGLTF({origin:r.origin,signal:s?.signal,ignoreLocalTransform:!0,unitConversionDisabled:!0});return(0,a.throwIfAborted)(s),{blob:new Blob([n],{type:"model/gltf-binary"}),assetName:`${(0,u.yS)()}.glb`,assetType:o}}(e,t,{...s,onProgress:o.makeOnProgress("meshToAssetBlob")});return{source:await D([r],t,{...s,onProgress:o.makeOnProgress("uploadAssetBlobs")}),extent:e.extent.clone(),original:!0}}(e,t,s),g=await m;return(0,a.throwIfAborted)(s),e.addExternalSources([g]),e}(e,o,s);n.set(e,m);try{await m}finally{n.delete(e)}return e}(e,t,{...s,onProgress:n.makeOnProgress(o)}))))}function I(e,t){let{infoFor3D:s}=t,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!e)return null;const{supportedFormats:r,editFormats:n}=s,a=(0,p.WN)(e),i=new Array,l=(0,v.ND)(s),u=(0,v.nr)(s);let c=!1;for(const p of a){const e=j(p,r);if(!e)return null;const{assetType:t}=e;if(o.checkForConversionRequired&&(t===l||t===u))return null;n.includes(t)&&(c=!0),i.push(e)}return c?i:null}function j(e,t){const s=(0,p.fH)(e,t);return s?{asset:e,assetType:s}:null}async function F(e,t,s){return D(e.map((e=>async function(e,t){const{asset:s,assetType:o}=e;if(s instanceof File)return{blob:s,assetName:s.name,assetType:o};const r=await s.toBlob(t);return(0,a.throwIfAborted)(t),{blob:r,assetName:s.assetName,assetType:o}}(e,s))),t,s)}async function D(e,t,s){const r=(0,h.XA)(f.y.uploadAssetBlobs,s?.onProgress,"uploadAssetBlobs"),i=await function(e,t,s){const o=(0,h.XA)(e.length,s?.onProgress,"prepareAssetItems");return Promise.all(e.map((async(e,r)=>{const i=async function(e,t,s){const{blob:o,assetType:r,assetName:i}=e;let u=null;try{const e=await A({data:o,name:i},t.url,s);(0,a.throwIfAborted)(s),u={assetType:r,assetUploadId:e.itemID}}catch(b){(0,a.throwIfAbortError)(b),n.A.getLogger("esri.layers.graphics.sources.support.uploadAssets").warnOnce(`Service ${t.url} does not support the REST Uploads API.`)}if(!u){const e=await(0,l.parseData)(o);if((0,a.throwIfAborted)(s),!e.isBase64)throw new d.$1;u={assetType:r,assetData:e.data}}if(!u)throw new d.WF;return{item:u,assetName:i}}(await e,t,{...s,onProgress:o.makeOnProgress(r)});return(0,a.throwIfAborted)(s),i})))}(e,t,{...s,onProgress:r.makeOnProgress("prepareAssetItems")});(0,a.throwIfAborted)(s);const u=i.map((e=>{let{item:t}=e;return t})),{uploadResults:c}=await async function(e,t,s){const r=(0,h.aG)(s?.onProgress);try{const r=await(0,o.default)((0,l.join)(t.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(e)},method:"post",responseType:"json"});if((0,a.throwIfAborted)(s),r.data.uploadResults.length!==e.length)throw new d.nS(e.length,r.data.uploadResults.length);return r.data}finally{r.remove()}}(u,t,{...s,onProgress:r.makeOnProgress("uploadAssetItems")});return(0,a.throwIfAborted)(s),e.map(((e,s)=>function(e,t,s){const{success:o}=t;if(!o){const{error:s}=t;throw new d.hK(e.assetName,s)}const{assetHash:r}=t,{assetName:n,item:{assetType:a}}=e,{infoFor3D:{supportedFormats:i}}=s,l=(0,v.Fm)(a,i);if(!l)throw new d.H2(a);return new p.Qp(n,l,[new p.Bq(`${s.parsedUrl.path}/assets/${r}`,r)])}(i[s],c[s],t)))}function $(e,t){return(0,o.default)(e,t)}async function M(e,t){const s=(await(0,o.default)(e,t)).data.statusUrl;for(;;){const e=(await(0,o.default)(s,{query:{f:"json"},responseType:"json"})).data;switch(e.status){case"Completed":return(0,o.default)(e.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new Error(e.status);case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new Error}await(0,a.after)(E)}}function N(e){let{infoFor3D:t}=e;const s=(0,v.U9)(t);if(!s)throw new d.uh;return s}const E=(0,i.l5)(1e3)},25009:(e,t,s)=>{s.d(t,{V7:()=>c,XA:()=>i,aG:()=>u,sL:()=>p});var o=s(42198),r=s(21265),n=s(45622),a=s(26988);function i(e){return new l(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>{},arguments.length>2?arguments[2]:void 0)}class l{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>{},s=arguments.length>2?arguments[2]:void 0;if(this.onProgress=t,this.taskName=s,this._progressMap=new Map,this._startTime=void 0,this._timingsMap=new Map,"number"==typeof e){this._weights={};for(let t=0;t<e;t++){const s=t,o=1/e;this._weights[s]=o,this._progressMap.set(s,0)}}else this._weights=e;this.emitProgress()}emitProgress(){let e=0;for(const[t,s]of this._progressMap.entries())e+=s*this._weights[t];if(1===e&&(0,r.A)("enable-feature:esri-3dofl-upload-timings")){const e=Math.round(performance.now()-(this._startTime??0))/1e3;console.log(`${this.taskName} done in ${e} sec`);for(const[t,s]of this._timingsMap){const o=Math.round(s.end-s.start)/1e3,r=Math.round(o/e*100);console.log(this.taskName??"Task",{stepKey:t,stepTime:o,relativeTime:r})}}this.onProgress(e)}setProgress(e,t){if(this._progressMap.set(e,t),(0,r.A)("enable-feature:esri-3dofl-upload-timings")){const s=performance.now();this._startTime??=s;const o=(0,n.tE)(this._timingsMap,e,(()=>({start:s,end:0})));1===t&&(o.end=s)}this.emitProgress()}simulate(e,t){return u((t=>this.setProgress(e,t)),t)}makeOnProgress(e){return t=>this.setProgress(e,t)}}function u(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e=>{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:g;const s=performance.now();e(0);const r=setInterval((()=>{const o=performance.now()-s,r=1-Math.exp(-o/t);e(r)}),h);return(0,o.hA)((()=>{clearInterval(r),e(1)}))}function c(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:d;return(0,a.gr)((0,a.Kp)(e*m/t))}function p(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:f;return(0,a.gr)((0,a.Kp)(e*m/t))}const d=10,f=10,m=8e-6,h=(0,a.l5)(50),g=(0,a.l5)(1e3)},47294:(e,t,s)=>{s.d(t,{y:()=>o});const o={upload:{createFromFiles:.8,loadMesh:.2},uploadAssetBlobs:{prepareAssetItems:.9,uploadAssetItems:.1},uploadConvertibleSource:{uploadEditSource:.5,serviceAssetsToGlb:.5},uploadLocalMesh:{meshToAssetBlob:.5,uploadAssetBlobs:.5}}},47423:(e,t,s)=>{s.d(t,{V:()=>n,f:()=>a});var o=s(75400),r=s(53409);function n(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:i;return new o.default({x:e[s.originX],y:e[s.originY],z:e[s.originZ],spatialReference:t})}function a(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i;return new r.default({translation:[e[t.translationX],-e[t.translationZ],e[t.translationY]],rotationAxis:[e[t.rotationX],-e[t.rotationZ],e[t.rotationY]],rotationAngle:e[t.rotationDeg],scale:[e[t.scaleX],e[t.scaleZ],e[t.scaleY]]})}const i={originX:"originX",originY:"originY",originZ:"originZ",translationX:"translationX",translationY:"translationY",translationZ:"translationZ",scaleX:"scaleX",scaleY:"scaleY",scaleZ:"scaleZ",rotationX:"rotationX",rotationY:"rotationY",rotationZ:"rotationZ",rotationDeg:"rotationDeg"}},65477:(e,t,s)=>{s.d(t,{Z:()=>n});var o=s(84190),r=s(53409);function n(e){const t=1/(0,o.GA)(e,1);return 1!==t?new r.default({scale:[t,t,t]}):void 0}},74217:(e,t,s)=>{s.d(t,{$1:()=>u,H2:()=>f,MT:()=>m,VP:()=>h,WF:()=>c,Wt:()=>a,XQ:()=>g,hK:()=>d,nS:()=>p,uh:()=>i,xY:()=>l});var o=s(74719);const r="upload-assets",n=()=>new Error;class a extends o.default{constructor(){super(`${r}:unsupported`,"Layer does not support asset uploads.",n())}}class i extends o.default{constructor(){super(`${r}:no-glb-support`,"Layer does not support glb.",n())}}class l extends o.default{constructor(){super(`${r}:no-supported-source`,"No supported external source found",n())}}class u extends o.default{constructor(){super(`${r}:not-base-64`,"Expected gltf data in base64 format after conversion.",n())}}class c extends o.default{constructor(){super(`${r}:unable-to-prepare-options`,"Unable to prepare uploadAsset request options.",n())}}class p extends o.default{constructor(e,t){super(`${r}:bad-response`,`Bad response. Uploaded ${e} items and received ${t} results.`,n())}}class d extends o.default{constructor(e,t){super(`${r}-layer:upload-failed`,`Failed to upload mesh file ${e}. Error code: ${t?.code??"-1"}. Error message: ${t?.messages??"unknown"}`,n())}}class f extends o.default{constructor(e){super(`${r}-layer:unsupported-format`,`The service allowed us to upload an asset of FormatID ${e}, but it does not list it in its supported formats.`,n())}}class m extends o.default{constructor(){super(`${r}:convert3D-failed`,"convert3D failed.")}}class h extends o.default{constructor(){super("invalid-input:no-model","No supported model found")}}class g extends o.default{constructor(){super("invalid-input:multiple-models","Multiple supported models found")}}}}]);