"use strict";(self.webpackChunkever_wading_birds=self.webpackChunkever_wading_birds||[]).push([[13040],{13040:(e,t,i)=>{i.r(t),i.d(t,{default:()=>h});var s=i(9950),a=i(12203),n=i(77957),r=(i(36080),i(77969)),o=i(42074),l=i(28429);const c="https://ekimvjwlyruqwmcnphoq.supabase.co",d="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVraW12andseXJ1cXdtY25waG9xIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDI1ODU1MDQsImV4cCI6MjA1ODE2MTUwNH0.Wsi8U7o2rlUxYuo6HCSFoQprkWaRuLzrH3l26hDf_js";const p=(0,i(37774).UU)(c,d);i(99016);var m=i(44414);const g=s.lazy((()=>i.e(99440).then(i.bind(i,99440))));const h=function(){const e={"Boat Launch":"/ever_wading_birds/img/Boat_Launch.svg",Campground:"/ever_wading_birds/img/Campground.svg",Campsite:"/ever_wading_birds/img/Campsite.svg","Canoe / Kayak Access":"/ever_wading_birds/img/Canoe_Kayak_Access.svg","Entrance Station":"/ever_wading_birds/img/Entrance_Station.svg","Food Service":"/ever_wading_birds/img/Food_Service.svg","Parking Lot":"/ever_wading_birds/img/Parking_Lot.svg","Picnic Area":"/ever_wading_birds/img/Picnic_Area.svg","Ranger Station":"/ever_wading_birds/img/Ranger_Station.svg",Restroom:"/ever_wading_birds/img/Restroom.svg",Trailhead:"/ever_wading_birds/img/Trailhead.svg","Visitor Center":"/ever_wading_birds/img/Visitor_Center.svg"},[t,i]=(0,s.useState)([]),[c,d]=(0,s.useState)({}),[h,b]=(0,s.useState)([]),[u,f]=(0,s.useState)(null),[y,x]=(0,s.useState)({species:"",lat:"",lon:"",date:(new Date).toISOString().split("T")[0],time:(new Date).toLocaleTimeString("en-US",{hour12:!1}).slice(0,5)}),[j,v]=(0,s.useState)(!1),[w,_]=(0,s.useState)(null),[S,N]=(0,s.useState)([]),[k,I]=(0,s.useState)(""),[D,F]=(0,s.useState)(!1),[C,E]=(0,s.useState)(!1),[T,z]=(0,s.useState)(!1),[L,B]=(0,s.useState)(""),[O,R]=(0,s.useState)(""),[P,U]=(0,s.useState)(!0),[M,V]=(0,s.useState)(!1),A=(0,s.useRef)(null),J=(0,s.useRef)(null);(0,s.useEffect)((()=>{console.log("Initializing WebMap and MapView...");const t=new n.default({basemap:"gray-vector"}),i=new a.default({container:A.current,map:t,center:[-80.898651,25.286615],zoom:9,ui:{components:["zoom","attribution"]},popup:{dockEnabled:!1,visible:!0,visibleElements:{collapseButton:!1}}});i.popup.dockEnabled=!1,i.popup.dockOptions={buttonEnabled:!1},i.popup.collapseButton=!1,i.popup.headingLevel=3,J.current=i,t.basemap.baseLayers.forEach((e=>{e.popupEnabled=!1})),i.when((()=>{console.log("MapView successfully initialized."),i.ui.move("zoom","top-left");const e=document.createElement("arcgis-locate");e.view=i,e.scale=5e3,i.ui.add(e,"top-left");const t=document.createElement("arcgis-home");t.view=i,i.ui.add(t,"top-left"),i.on("click",(async e=>{const t=(await i.hitTest(e)).results.find((e=>{const t=e.graphic.layer;return t&&t.popupTemplate}));if(t){const s=t.graphic,a=s.attributes||{},n=s.layer.popupTemplate;i.popup.open({location:e.mapPoint,title:a.maplabel||n.title||"No Title",content:n.content||"No Content"})}else{i.popup.close();const{latitude:t,longitude:s}=e.mapPoint;x((e=>({...e,lat:t.toFixed(6),lon:s.toFixed(6)})))}}))})).catch((e=>{console.error("Error initializing MapView:",e)}));(async()=>{const e=async(e,t,i)=>{const{data:s,error:a}=await p.from(e).select("geom_geojson, maplabel");if(a)return console.error(`Error fetching ${t} data:`,a),null;const n=s.map(((e,t)=>({geometry:{type:"polyline",paths:JSON.parse(e.geom_geojson).coordinates},attributes:{objectid:t+1,maplabel:e.maplabel}})));return new r.default({source:n,fields:[{name:"objectid",alias:"ObjectID",type:"oid"},{name:"maplabel",alias:"Name",type:"string"}],objectIdField:"objectid",geometryType:"polyline",spatialReference:{wkid:4326},renderer:{type:"simple",symbol:{type:"simple-line",color:`rgba(${i}, 0.5)`,width:1}},title:t,visible:!0,popupEnabled:!0,popupTemplate:{title:'<span style="font-size: 14px; font-weight: bold; color: #333;">{maplabel}</span>',content:"{maplabel}"},elevationInfo:{mode:"on-the-ground"}})},i=await e("roads","Roads","255, 255, 255"),s=await e("trails","Trails","77, 80, 75");i&&t.add(i),s&&t.add(s),i&&t.layers.reorder(i,0),s&&t.layers.reorder(s,0)})();(async()=>{const{data:s,error:a}=await p.from("pois").select("poitype, geom_geojson, maplabel");if(a)return void console.error("Error fetching POIs:",a);const n={},o=[];s.forEach((i=>{if(!n[i.poitype]){const s=new r.default({source:[],fields:[{name:"objectid",alias:"ObjectID",type:"oid"},{name:"poitype",alias:"POI Type",type:"string"},{name:"maplabel",alias:"Name",type:"string"}],objectIdField:"objectid",geometryType:"point",spatialReference:{wkid:4326},renderer:{type:"simple",symbol:{type:"picture-marker",url:e[i.poitype],width:"24px",height:"24px"}},title:i.poitype,visible:!1,popupEnabled:!0,popupTemplate:{title:'<span style="font-size: 14px; font-weight: bold; color: #333;">{maplabel}</span>',content:"\n                <b>Type:</b> {poitype}<br>\n                <b>Name:</b> {maplabel}\n              "}});n[i.poitype]=s,o.push(s),t.add(s)}const s=JSON.parse(i.geom_geojson);n[i.poitype].source.push({geometry:{type:"point",longitude:s.coordinates[0],latitude:s.coordinates[1]},attributes:{objectid:n[i.poitype].source.length+1,poitype:i.poitype,maplabel:i.maplabel}})})),i.when((()=>{const e=i.map.layers;o.forEach((t=>{e.remove(t),e.add(t)}))})),d(n)})();(async()=>{const{data:e,error:t}=await p.from("birds").select("*");t?console.error("Error fetching birds:",t):b(e)})();return(async()=>{const{data:e,error:i}=await p.from("sightings").select("*");if(i)return console.error("Error fetching sightings:",i),null;const s=e.map(((e,t)=>({geometry:{type:"point",longitude:e.lon,latitude:e.lat},attributes:{sighting_id:e.sighting_id,species:e.species,formatted_date:new Date(e.date).toLocaleDateString("en-US"),time:e.time}})));N(s);const a=new r.default({source:s,fields:[{name:"sighting_id",alias:"Sighting ID",type:"oid"},{name:"species",alias:"Species",type:"string"},{name:"formatted_date",alias:"Date",type:"string"},{name:"time",alias:"Time",type:"string"}],objectIdField:"sighting_id",geometryType:"point",spatialReference:{wkid:4326},renderer:{type:"simple",symbol:{type:"picture-marker",url:"/ever_wading_birds/img/Bird.svg",width:"24px",height:"24px"}},title:"Sightings",visible:!1,popupTemplate:{title:'<span style="font-size: 14px; font-weight: bold; color: #333;">Sighting Details</span>',content:"\n            <b>Species:</b> {species}<br>\n            <b>Date:</b> {formatted_date}<br> \x3c!-- Use the renamed field --\x3e\n            <b>Time:</b> {time}\n          "}});t.add(a),_(a)})(),()=>{console.log("Destroying MapView..."),i&&i.destroy()}}),[]);const q=e=>{const t=J.current;if("sightings"===e){if(w){const e=!D;if(w.visible=e,t){const i=t.map.findLayerById(w.id);i&&(i.visible=e)}F(e)}}else{const i=c[e];if(i){if(i.visible=!i.visible,t){const e=t.map.findLayerById(i.id);e&&(e.visible=i.visible)}d({...c,[e]:i})}}},W=e=>{const{name:t,value:i}=e.target;x({...y,[t]:i})};return(0,m.jsxs)(o.Kd,{basename:"/ever_wading_birds",children:[" ",(0,m.jsx)(s.Suspense,{fallback:(0,m.jsx)("div",{children:"Loading..."}),children:(0,m.jsxs)(l.BV,{children:[(0,m.jsx)(l.qh,{path:"/",element:(0,m.jsxs)("div",{children:[(0,m.jsx)("div",{id:"mapViewDiv",ref:A,style:{height:"100vh",width:"100%"}}),(0,m.jsxs)("div",{className:"form-panel "+(M?"minimized":""),children:[(0,m.jsxs)("div",{className:"form-header d-flex justify-content-between align-items-center",children:[(0,m.jsx)("h3",{className:"text-center",children:"Submit a Bird Sighting"}),(0,m.jsx)("button",{className:"btn btn-sm btn-outline-secondary minimize-button",onClick:()=>V(!M),children:M?"+":"-"})]}),!M&&(0,m.jsx)(m.Fragment,{children:j?(0,m.jsxs)("div",{className:"thank-you-message text-center",children:[(0,m.jsx)("h4",{children:"Thank you for your submission!"}),(0,m.jsx)("button",{className:"btn btn-primary mt-3",onClick:()=>{x({species:"",lat:"",lon:"",date:"",time:""}),f(null),v(!1)},children:"Submit Another Sighting"})]}):(0,m.jsxs)("form",{onSubmit:async e=>{e.preventDefault();const{species:t,lat:i,lon:s,date:a,time:n}=y,o={species:t,lat:parseFloat(i),lon:parseFloat(s),date:a,time:n},{data:l,error:c}=await p.from("sightings").insert([o]).select("sighting_id");if(c)return void console.error("Error submitting sighting:",c);const d=l[0].sighting_id;v(!0);const{data:m,error:g}=await p.from("sightings").select("*");if(g)console.error("Error fetching updated sightings:",g);else{console.log("Updated sightings data:",m),console.log("Sightings data:",m.map((e=>e.date)));const e=m.map(((e,t)=>({geometry:{type:"point",longitude:e.lon,latitude:e.lat},attributes:{sighting_id:e.sighting_id,species:e.species,formatted_date:new Date(e.date).toLocaleDateString("en-US"),time:e.time}})));N(e),console.log("Updated Features:",e);const t=J.current;if(t&&w){const e=t.map.findLayerById(w.id);e&&t.map.remove(e)}const i=new r.default({source:e,fields:[{name:"sighting_id",alias:"Sighting ID",type:"oid"},{name:"species",alias:"Species",type:"string"},{name:"formatted_date",alias:"Date",type:"string"},{name:"time",alias:"Time",type:"string"}],objectIdField:"sighting_id",geometryType:"point",spatialReference:{wkid:4326},renderer:{type:"simple",symbol:{type:"picture-marker",url:"/ever_wading_birds/img/Bird.svg",width:"24px",height:"24px"}},title:"Sightings",visible:D,popupTemplate:{title:'<span style="font-size: 14px; font-weight: bold; color: #333;">Sighting Details</span>',content:e=>{const t=e.graphic.attributes;return console.log("Popup Attributes:",t),`\n              <b>Species:</b> ${t.species}<br>\n              <b>Date:</b> ${t.formatted_date}<br>\n              <b>Time:</b> ${t.time}\n            `}}});t&&t.map.add(i),_(i)}const{data:h,error:b}=await p.rpc("find_nearby_pois",{lat:parseFloat(i),lon:parseFloat(s),radius:250});if(b)console.error("Error finding nearby POIs:",b);else{const e=h.map((e=>({sighting_id:d,objectid:e.objectid}))),{error:t}=await p.from("pois_near_sightings").insert(e);t&&console.error("Error inserting POIs near sighting:",t)}const{data:u,error:f}=await p.rpc("find_nearby_trails",{lat:parseFloat(i),lon:parseFloat(s),radius:250});if(f)console.error("Error finding nearby trails:",f);else{const e=u.map((e=>({sighting_id:d,objectid:e.objectid}))),{error:t}=await p.from("trails_near_sightings").insert(e);t&&console.error("Error inserting trails near sighting:",t)}const{data:x,error:j}=await p.rpc("find_nearby_roads",{lat:parseFloat(i),lon:parseFloat(s),radius:250});if(j)console.error("Error finding nearby roads:",j);else{const e=x.map((e=>({sighting_id:d,objectid:e.objectid}))),{error:t}=await p.from("roads_near_sightings").insert(e);t&&console.error("Error inserting roads near sighting:",t)}},children:[(0,m.jsxs)("div",{className:"mb-3",children:[(0,m.jsx)("label",{htmlFor:"species",className:"form-label",children:"Select Bird Species:"}),(0,m.jsxs)("select",{id:"species",name:"species",className:"form-select",value:y.species,onChange:e=>{const t=h.find((t=>t.species===e.target.value));f(t),x({...y,species:e.target.value})},required:!0,children:[(0,m.jsx)("option",{value:"",children:"-- Select a Species --"}),h.map((e=>(0,m.jsx)("option",{value:e.species,children:e.species},e.species)))]})]}),u&&(0,m.jsxs)("div",{className:"bird-details mb-3",children:[(0,m.jsx)("h4",{children:u.species}),(0,m.jsx)("img",{src:u.photo,alt:u.species,className:"img-fluid bird-image mb-2"}),(0,m.jsxs)("p",{children:[(0,m.jsx)("strong",{children:"Photo Attribution:"})," ",(0,m.jsx)("span",{dangerouslySetInnerHTML:{__html:u.photo_attr}})]}),(0,m.jsx)("p",{children:u.info}),(0,m.jsx)("a",{href:u.info_link,target:"_blank",rel:"noopener noreferrer",children:"Learn More"})]}),(0,m.jsx)("p",{className:"text-muted mb-3",children:"Click anywhere on the map to populate the latitude and longitude fields."}),(0,m.jsxs)("div",{className:"mb-3",children:[(0,m.jsx)("label",{htmlFor:"lat",className:"form-label",children:"Latitude:"}),(0,m.jsx)("input",{type:"number",id:"lat",name:"lat",className:"form-control",value:y.lat,onChange:W,required:!0})]}),(0,m.jsxs)("div",{className:"mb-3",children:[(0,m.jsx)("label",{htmlFor:"lon",className:"form-label",children:"Longitude:"}),(0,m.jsx)("input",{type:"number",id:"lon",name:"lon",className:"form-control",value:y.lon,onChange:W,required:!0})]}),(0,m.jsxs)("div",{className:"mb-3",children:[(0,m.jsx)("label",{htmlFor:"date",className:"form-label",children:"Date:"}),(0,m.jsx)("input",{type:"date",id:"date",name:"date",className:"form-control",value:y.date,onChange:W,required:!0})]}),(0,m.jsxs)("div",{className:"mb-3",children:[(0,m.jsx)("label",{htmlFor:"time",className:"form-label",children:"Time:"}),(0,m.jsx)("input",{type:"time",id:"time",name:"time",className:"form-control",value:y.time,onChange:W,required:!0})]}),(0,m.jsx)("button",{type:"submit",className:"btn btn-primary w-100",children:"Submit Sighting"})]})})]}),(0,m.jsx)("div",{className:"layer-toggles-wrapper "+(C?"minimized":""),style:{position:"absolute",bottom:"10px",left:"10px",zIndex:1e3},children:(0,m.jsxs)("div",{className:"layer-toggles",children:[(0,m.jsxs)("div",{className:"layer-header",children:[(0,m.jsx)("h5",{children:"Points of Interest"}),(0,m.jsx)("button",{className:"btn btn-sm btn-outline-secondary minimize-button",onClick:()=>{E(!C),console.log("isPOILayersMinimized:",!C)},children:C?"+":"-"})]}),!C&&(0,m.jsx)(m.Fragment,{children:Object.keys(c).sort(((e,t)=>e.localeCompare(t))).map((t=>(0,m.jsxs)("div",{className:"form-check d-flex align-items-center",children:[(0,m.jsx)("input",{type:"checkbox",id:t,className:"form-check-input me-2",checked:c[t].visible,onChange:()=>q(t)}),(0,m.jsx)("img",{src:e[t],alt:t,style:{width:"24px",height:"24px",marginRight:"8px"}}),(0,m.jsx)("label",{htmlFor:t,className:"form-check-label",children:t})]},t)))})]})}),(0,m.jsx)("div",{className:"layer-toggles-wrapper "+(T?"minimized":""),style:{position:"absolute",bottom:"10px",left:"50%",transform:"translateX(-50%)",zIndex:1e3},children:(0,m.jsxs)("div",{className:"layer-toggles",children:[(0,m.jsxs)("div",{className:"layer-header",children:[(0,m.jsx)("h5",{children:"Sightings"}),(0,m.jsx)("button",{className:"btn btn-sm btn-outline-secondary minimize-button",onClick:()=>{z(!T),console.log("isSightingsLayersMinimized:",!T)},children:T?"+":"-"})]}),!T&&(0,m.jsxs)(m.Fragment,{children:[(0,m.jsxs)("div",{className:"form-check d-flex align-items-center",children:[(0,m.jsx)("input",{type:"checkbox",id:"sightingsLayerToggle",className:"form-check-input me-2",checked:D,onChange:()=>q("sightings")}),(0,m.jsx)("img",{src:"/ever_wading_birds/img/Bird.svg",alt:"Sightings",style:{width:"24px",height:"24px",marginRight:"8px"}}),(0,m.jsx)("label",{htmlFor:"sightingsLayerToggle",className:"form-check-label",children:"View Sightings"})]}),(0,m.jsxs)("div",{className:"mb-3",children:[(0,m.jsx)("label",{htmlFor:"speciesFilter",className:"form-label",children:"Filter by Species:"}),(0,m.jsxs)("select",{id:"speciesFilter",className:"form-select",value:k,onChange:e=>I(e.target.value),children:[(0,m.jsx)("option",{value:"",children:"-- All Species --"}),h.map((e=>(0,m.jsx)("option",{value:e.species,children:e.species},e.species)))]})]}),(0,m.jsxs)("div",{className:"mb-3",children:[(0,m.jsx)("label",{htmlFor:"startDate",className:"form-label",children:"Start Date:"}),(0,m.jsx)("input",{type:"date",id:"startDate",className:"form-control",value:L,onChange:e=>B(e.target.value)})]}),(0,m.jsxs)("div",{className:"mb-3",children:[(0,m.jsx)("label",{htmlFor:"endDate",className:"form-label",children:"End Date:"}),(0,m.jsx)("input",{type:"date",id:"endDate",className:"form-control",value:O,onChange:e=>R(e.target.value)})]}),(0,m.jsx)("button",{className:"btn btn-primary w-100",onClick:()=>{if(!w||0===S.length)return void console.error("Sightings layer or its features are not initialized.");const e=S.filter((e=>{const{species:t,date:i}=e.attributes;return(!k||t===k)&&(!(L&&new Date(i)<new Date(L))&&!(O&&new Date(i)>new Date(O)))})),t=J.current;if(t&&w){const e=t.map.findLayerById(w.id);e&&t.map.remove(e)}const i=new r.default({source:e,fields:[{name:"sighting_id",alias:"Sighting ID",type:"oid"},{name:"species",alias:"Species",type:"string"},{name:"formatted_date",alias:"Date",type:"string"},{name:"time",alias:"Time",type:"string"}],objectIdField:"sighting_id",geometryType:"point",spatialReference:{wkid:4326},renderer:{type:"simple",symbol:{type:"picture-marker",url:"/ever_wading_birds/img/Bird.svg",width:"24px",height:"24px"}},title:"Sightings",visible:D,popupTemplate:{title:'<span style="font-size: 14px; font-weight: bold; color: #333;">Sighting Details</span>',content:"\n          <b>Species:</b> {species}<br>\n          <b>Date:</b> {expression/formatDate}<br>\n          <b>Time:</b> {time}\n        ",expressionInfos:[{name:"formatDate",title:"Formatted Date",expression:'\n              var dateField = $feature.formatted_date;\n              if (IsEmpty(dateField)) {\n                return "No Date";\n              }\n              return dateField; // Use the preformatted string\n            '}]}});t&&t.map.add(i),_(i)},children:"Apply Filters"})]})]})}),P&&(0,m.jsx)("div",{className:"splash-screen",children:(0,m.jsxs)("div",{className:"splash-content",children:[(0,m.jsx)("h2",{children:"Welcome to the Everglades National Park Wading Bird Sighting App"}),(0,m.jsx)("p",{children:"This app allows you to:"}),(0,m.jsxs)("ul",{children:[(0,m.jsx)("li",{children:"Explore points of interest in the park."}),(0,m.jsx)("li",{children:"Search and filter bird sightings on the map."}),(0,m.jsx)("li",{children:"Submit your own bird sightings using the submission form."}),(0,m.jsx)("li",{children:"Learn about bird species by selecting them on the submission form."})]}),(0,m.jsx)("button",{className:"btn btn-primary",onClick:()=>U(!1),children:"Get Started"})]})})]})}),(0,m.jsx)(l.qh,{path:"/about",element:(0,m.jsx)(g,{})})]})})]})}}}]);