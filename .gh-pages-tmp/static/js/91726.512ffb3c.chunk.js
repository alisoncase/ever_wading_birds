"use strict";(self.webpackChunkever_wading_birds=self.webpackChunkever_wading_birds||[]).push([[91726],{69345:(e,a,n)=>{n.r(a),n.d(a,{createRenderer:()=>x,regenerateRenderer:()=>E});var i=n(2925),o=n(74719),r=n(53957),t=n(45023),l=n(84267),s=n(22420),m=n(72861),c=n(34441),p=n(77225),d=n(70183),u=n(39186),y=n(5926),f=n(40663),g=n(39569),h=n(76118),b=n(43943),w=n(85151),v=n(2938),z=n(77562);async function S(e){if(!(e?.layer&&e.view&&e.fields?.length))throw new o.default("predominance-renderer:missing-parameters","'layer', 'view' and 'fields' parameters are required");if(e.fields.length<2)throw new o.default("predominance-renderer:invalid-parameters","Minimum 2 fields are required");if(e.fields.length>10)throw new o.default("predominance-renderer:invalid-parameters","Maximum 10 fields are supported");e.forBinning&&(0,w.p)(e,"predominance-renderer");const a={...e,layer:e.layer,fields:e.fields};a.symbolType=a.symbolType||"2d",a.defaultSymbolEnabled??=!0,a.includeOpacityVariable=e.includeOpacityVariable||!1,a.includeSizeVariable=e.includeSizeVariable||!1,a.sortBy??="count";const n=e.forBinning?v.Mi:v.J4,i=(0,v.Jg)(a.layer,n,e.forBinning);if(!i)throw new o.default("predominance-renderer:invalid-parameters","'layer' must be one of these types: "+(0,v.Ho)(v.J4).join(", "));const r=null!=a.signal?{signal:a.signal}:null;await i.load(r);const t=i.geometryType,l=a.symbolType.includes("3d");if(a.outlineOptimizationEnabled="polygon"===t&&a.outlineOptimizationEnabled,a.includeSizeVariable||(a.sizeOptimizationEnabled=("point"===t||"multipoint"===t||"polyline"===t)&&a.sizeOptimizationEnabled),"mesh"===t)a.symbolType="3d-volumetric",a.colorMixMode=a.colorMixMode||"replace",a.edgesType=a.edgesType||"none",a.sizeOptimizationEnabled=!1;else{if(l&&("polyline"===t||"polygon"===t))throw new o.default("predominance-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(a.symbolType.includes("3d-volumetric")&&(!a.view||"3d"!==a.view.type))throw new o.default("predominance-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'")}const s=a.fields.map((e=>e.name)),m=(0,g.MH)(i,s,"predominance-renderer:invalid-parameters");if(m)throw m;return{...a,layer:i}}async function T(e){let a=e.predominanceScheme,n=null,i=null;const o=await(0,g.Ib)(e.basemap,e.view);if(n=null!=o.basemapId?o.basemapId:null,i=null!=o.basemapTheme?o.basemapTheme:null,a)return{scheme:(0,z.cloneScheme)(a),basemapId:n,basemapTheme:i};const r=(0,z.getSchemes)({basemapTheme:i,geometryType:e.geometryType,numColors:e.numColors,theme:e.theme,worldScale:e.worldScale,view:e.view});return r&&(a=r.primaryScheme,n=r.basemapId,i=r.basemapTheme),{scheme:a,basemapId:n,basemapTheme:i}}async function C(e,a,n){const i=await(0,r.ud)("esri/smartMapping/t9n/smartMapping");return(0,u.createVisualVariables)({layer:e.layer,basemap:e.basemap,valueExpression:a.valueExpression,sqlExpression:a.statisticsQuery.sqlExpression,sqlWhere:a.statisticsQuery.sqlWhere,sizeScheme:n,sizeOptimizationEnabled:e.sizeOptimizationEnabled,worldScale:!!e.symbolType?.includes("3d-volumetric"),legendOptions:{title:i.sumOfCategories},filter:e.filter,view:e.view,signal:e.signal})}async function V(e,a){const n=await(0,r.ud)("esri/smartMapping/t9n/smartMapping"),i=await(0,g.g2)({layer:e.layer,valueExpression:a.valueExpression,sqlExpression:a.statisticsQuery.sqlExpression,sqlWhere:a.statisticsQuery.sqlWhere,filter:e.filter,view:e.view,signal:e.signal}),{avg:o,stddev:d}=i,u=null==o||null==d,y=1/e.fields.length*100;let f=u?100:o+1.285*d;f>100&&(f=100);const h=(0,s.LI)([y,f],{strictBounds:!0}),b=new m.default({valueExpression:a.valueExpression,stops:[new c.default({value:h[0],opacity:.15}),new c.default({value:h[1],opacity:1})],legendOptions:new p.A({title:n.strengthOfPredominance})}),w=new l.default({type:"opacity",minSliderValue:i.min,maxSliderValue:i.max});return{visualVariable:b,statistics:i,defaultValuesUsed:u,authoringInfo:new t.default({visualVariables:[w]})}}async function x(e){const a=await S(e),n=a.layer,o=(await T({basemap:a.basemap,geometryType:n.geometryType,numColors:a.fields.length,predominanceScheme:a.predominanceScheme,worldScale:!!a.symbolType?.includes("3d-volumetric"),view:a.view})).scheme,l=a.fields.map((e=>e.name)),s=(0,b.getPredominanceExpressions)(n,l),m=async function(e,a,n,o){const l=await(0,r.ud)("esri/smartMapping/t9n/smartMapping"),s=e.layer,{view:m,filter:c,signal:p}=e,[u,f]=await Promise.all([(0,h.default)({layer:s,fields:o,view:m,filter:c,signal:p}),e.outlineOptimizationEnabled?(0,d.A)({layer:s,view:m,filter:c,signal:p}).catch(g.ou):null]);let b=u;u?.predominantCategoryInfos||(b={predominantCategoryInfos:o.map((e=>({value:e,count:0})))});const w=f?.opacity,v=await(0,y.createRenderer)({layer:s,basemap:e.basemap,valueExpression:a.valueExpression,valueExpressionTitle:l.predominantCategory,numTypes:-1,defaultSymbolEnabled:e.defaultSymbolEnabled,sortBy:e.sortBy,typeScheme:n,statistics:{uniqueValueInfos:b.predominantCategoryInfos},legendOptions:e.legendOptions,outlineOptimizationEnabled:!1,sizeOptimizationEnabled:(!e.includeSizeVariable||!e.sizeOptimizationEnabled)&&e.sizeOptimizationEnabled,symbolType:e.symbolType,colorMixMode:e.colorMixMode,edgesType:e.edgesType,filter:e.filter,view:e.view,signal:e.signal}),{renderer:z,basemapId:S,basemapTheme:T,uniqueValueInfos:C,excludedUniqueValueInfos:V}=v,x=z.uniqueValueInfos??[],E={};for(const i of e.fields){const e=s.getField(i.name);E[e.name]=i.label||e&&e.alias||i.name}if(x.forEach(((e,a)=>{const n=E[e.value];e.label=n,C[a].label=n})),e.includeSizeVariable){let a=s.geometryType,o=null;if("polygon"===a){const i=n.sizeScheme,r=i.background;z.backgroundFillSymbol=(0,g.v5)(a,{type:e.symbolType,color:r.color,outline:(0,g.qc)(r,a,w)}),o=i.marker.size,a="point"}else o="polyline"===a?n.width:n.size;const r=(0,i.Iy)(n.colors,x.length);x.forEach(((i,t)=>{const l=(0,g.v5)(a,{type:e.symbolType,color:r[t],size:o,outline:(0,g.qc)(n,a,w),meshInfo:{colorMixMode:e.colorMixMode,edgesType:e.edgesType}});i.symbol=l,C[t].symbol=l.clone()}))}return f?.visualVariables.length&&(z.visualVariables=f.visualVariables.map((e=>e.clone()))),z.authoringInfo=new t.default({type:"predominance",fields:[...o]}),{renderer:z,predominantCategoryInfos:C,excludedCategoryInfos:V,predominanceScheme:n,basemapId:S,basemapTheme:T}}(a,s.predominantCategory,o,l),c=a.includeSizeVariable?C(a,s.size,o.sizeScheme):null,p=a.includeOpacityVariable?V(a,s.opacity):null,[u,f,w]=await Promise.all([m,c,p]),v=[],z=[];if(f&&(Array.prototype.push.apply(v,f.visualVariables.map((e=>e.clone()))),delete f.sizeScheme,u.size=f,Array.prototype.push.apply(z,f.authoringInfo.visualVariables.map((e=>e.clone())))),w&&(v.push(w.visualVariable.clone()),u.opacity=w,Array.prototype.push.apply(z,w.authoringInfo.visualVariables.map((e=>e.clone())))),v.length){const e=u.renderer.visualVariables||[];Array.prototype.push.apply(e,v),u.renderer.visualVariables=e,u.renderer.authoringInfo??=new t.default,u.renderer.authoringInfo.visualVariables=z}return u}async function E(e){const{creatorParameters:a,view:n,signal:i,filter:r,renderer:t}=await async function(e){const a="regenerate-predominance-renderer";await(0,f.AC)(e,a);const n=await(0,f.mE)(e);if("predominance"!==(0,f.UJ)(n))throw new o.default(`${a}:invalid-parameters`,"Renderer is invalid");const{visualVariables:i}=n,{layer:r,forBinning:t,filter:l,view:s,signal:m}=e,c=(0,f.DW)(n),p=(0,f.Rv)(n),d=i?.some(f.OW),u=i?.some((e=>"opacity"===e.type)),y=n.authoringInfo,g=y?.fields?.map((e=>({name:e})));if(!g?.length)throw new o.default(`${a}:invalid-parameters`,"Fields are required");const h=await S({layer:r,fields:g,outlineOptimizationEnabled:c,sizeOptimizationEnabled:p,includeSizeVariable:d,includeOpacityVariable:u,forBinning:t,filter:l,view:s,signal:m});return{...e,creatorParameters:h,renderer:n}}(e),{layer:l,fields:s,outlineOptimizationEnabled:m,includeSizeVariable:c,includeOpacityVariable:p}=a,u=s.map((e=>e.name)),y=(0,b.getPredominanceExpressions)(l,u),h=(await T({geometryType:l.geometryType,numColors:a.fields.length,view:a.view})).scheme,w=h&&"sizeScheme"in h?h.sizeScheme:null,[v,z,x]=await Promise.all([m?(0,d.A)({layer:l,view:n,signal:i,filter:r}).catch(g.ou):null,c?C(a,y.size,w):null,p?V(a,y.opacity):null]);return(0,f.ke)(t,v?.visualVariables,f._i),(0,f.ke)(t,z?.visualVariables,f.Jy),(0,f.ke)(t,x?.visualVariable,f.d8),(0,f.Hj)(t,z?.authoringInfo,"size"),(0,f.Hj)(t,x?.authoringInfo,"opacity"),{renderer:t}}},76118:(e,a,n)=>{n.r(a),n.d(a,{default:()=>l});var i=n(74719),o=n(70934),r=n(85151),t=n(2938);async function l(e){const{layerAdapter:a,...n}=await async function(e){if(!(e&&e.layer&&e.view&&e.fields))throw new i.default("predominant-categories:missing-parameters","'layer', 'view' and 'fields' parameters are required");e.forBinning&&(0,r.p)(e,"predominant-categories");const{layer:a,...n}=e,l=e.forBinning?t.Mi:t.G3,s=(0,t.Jg)(a,l,e.forBinning);if(!s)throw new i.default("predominant-categories:invalid-parameters","'layer' must be one of these types: "+(0,t.Ho)(l).join(", "));const m={layerAdapter:s,...n};await Promise.all([m.view.when(),s.load({signal:m.signal})]);const c=(0,o.MH)(s,m.fields,"predominant-categories:invalid-parameters");if(c)throw c;return m}(e);return a.predominantCategories(n)}},77562:(e,a,n)=>{n.r(a),n.d(a,{cloneScheme:()=>w,getSchemeByName:()=>h,getSchemes:()=>g,getSchemesByTag:()=>b,getThemes:()=>f});var i=n(88102),o=n(62631),r=n(2925),t=n(2020),l=n(43073),s=n(28245),m=n(42648);const c={light:{color:[153,153,153,.25],width:"1px"},dark:{color:[153,153,153,.25],width:"1px"},darker:{color:[26,26,26,.25],width:"1px"}},p="#aaaaaa",d=["tropical-bliss","desert-blooms","under-the-sea","vibrant-rainbow","ocean-bay","prairie-summer","pastel-chalk"],u=["cat-symbols-strong","cat-symbols-autumnal","cat-symbols-bright","cat-symbols-midrange","cat-symbols-subdued","cat-symbols-pastel","cat-symbols-red","cat-symbols-blue","cat-symbols-green","cat-symbols-gray"],y=(0,s.bG)({themeDictionary:{default:{name:"default",label:"Default",description:"Default theme for visualizing features by their predominant category.",schemes:{point:{light:{common:{noDataColor:p,outline:c.light,size:"8px"},primary:"predominant-v1",secondary:["predominant-v2","predominant-v3","predominant-v4","predominant-v5","predominance-race","predominance-money","predominance-race-ethnic","predominance-rainbow","predominance-sequence"].concat(u).concat(d)},dark:{common:{noDataColor:p,outline:c.darker,size:"8px"},primary:"predominant-v2",secondary:["predominant-v1","predominant-v3","predominant-v4","predominant-v5","predominance-race","predominance-money","predominance-race-ethnic","predominance-rainbow","predominance-sequence"].concat(u).concat(d)}},polyline:{light:{common:{noDataColor:p,width:"2px"},primary:"predominant-v1",secondary:["predominant-v2","predominant-v3","predominant-v4","predominant-v5","predominance-race","predominance-money","predominance-race-ethnic","predominance-rainbow","predominance-sequence"].concat(u).concat(d)},dark:{common:{noDataColor:p,width:"2px"},primary:"predominant-v2",secondary:["predominant-v1","predominant-v3","predominant-v4","predominant-v5","predominance-race","predominance-money","predominance-race-ethnic","predominance-rainbow","predominance-sequence"].concat(u).concat(d)}},polygon:{light:{common:{noDataColor:p,outline:c.light,fillOpacity:.8,markerSize:"8px"},primary:"predominant-v1",secondary:["predominant-v2","predominant-v3","predominant-v4","predominant-v5","predominance-race","predominance-money","predominance-race-ethnic","predominance-rainbow","predominance-sequence"].concat(u).concat(d)},dark:{common:{noDataColor:p,outline:c.dark,fillOpacity:.8,markerSize:"8px"},primary:"predominant-v2",secondary:["predominant-v1","predominant-v3","predominant-v4","predominant-v5","predominance-race","predominance-money","predominance-race-ethnic","predominance-rainbow","predominance-sequence"].concat(u).concat(d)}}}}}});function f(e){return(0,s.vt)(y,e)}function g(e){const a=(0,s.Fq)({basemap:e.basemap,geometryType:e.geometryType,basemapTheme:e.basemapTheme,theme:y.get("default")});if(!a)return;const{schemesInfo:n,basemapId:i,basemapTheme:r}=a,l=n.common,m=(0,t.getSchemes)({basemap:e.basemap,geometryType:e.geometryType,worldScale:e.worldScale,view:e.view}),c=m?.primaryScheme;return{primaryScheme:v(e,n.primary,l,c),secondarySchemes:n.secondary.map((a=>v(e,a,l,c))).filter(o.Ru),basemapId:i,basemapTheme:r}}function h(e){return(0,s.Ty)(e.name,g(e))}function b(e){return(0,s.YJ)(e.includedTags,e.excludedTags,g(e))}function w(e){if(!e)return;const a={...e};return a.colors=a.colors.map((e=>new i.default(e))),a.tags=[...a.tags],a.noDataColor&&(a.noDataColor=new i.default(a.noDataColor)),"outline"in a&&a.outline&&(a.outline={color:a.outline.color&&new i.default(a.outline.color),width:a.outline.width}),"sizeScheme"in a&&a.sizeScheme&&(a.sizeScheme=(0,t.cloneScheme)(a.sizeScheme)),a}function v(e,a,n,o){const t=l.A[a];if(!t)return;const{numColors:s}=e,c=s?t[s]??(0,r.Iy)(t.stops,s):t.stops,p="mesh"!==e.geometryType&&e.worldScale?e.view:null;switch(e.geometryType){case"point":case"multipoint":{const e=n;return function(e,a){return{name:e.name,tags:[...e.tags],colors:e.colors.map((e=>new i.default(e))),noDataColor:new i.default(e.noDataColor),outline:{color:new i.default(e.outline.color),width:e.outline.width},size:a?(0,m._J)(e.size,a):e.size,sizeScheme:e.sizeScheme,opacity:e.opacity}}({name:t.name,tags:t.tags,colors:c,noDataColor:e.noDataColor,opacity:1,sizeScheme:o,outline:e.outline,size:e.size},p)}case"polyline":{const e=n;return function(e,a){return{name:e.name,tags:[...e.tags],colors:e.colors.map((e=>new i.default(e))),noDataColor:new i.default(e.noDataColor),width:a?(0,m._J)(e.width,a):e.width,sizeScheme:e.sizeScheme,opacity:e.opacity}}({name:t.name,tags:t.tags,colors:c,noDataColor:e.noDataColor,opacity:1,sizeScheme:o,width:e.width},p)}case"polygon":{const e=n,a=o;return a&&a.marker&&null!=e.markerSize&&(a.marker.size=e.markerSize),function(e,a){const{sizeScheme:n}=e;return n.marker.size=a?(0,m._J)(n.marker.size,a):n.marker.size,{name:e.name,tags:[...e.tags],colors:e.colors.map((e=>new i.default(e))),noDataColor:new i.default(e.noDataColor),outline:{color:new i.default(e.outline.color),width:e.outline.width},sizeScheme:n,opacity:e.opacity}}({name:t.name,tags:t.tags,colors:c,noDataColor:e.noDataColor,opacity:e.fillOpacity,outline:e.outline,sizeScheme:a},p)}case"mesh":{const e=n;return function(e){return{name:e.name,tags:[...e.tags],colors:e.colors.map((e=>new i.default(e))),noDataColor:new i.default(e.noDataColor),opacity:e.opacity}}({name:t.name,tags:t.tags,colors:c,noDataColor:e.noDataColor,opacity:e.fillOpacity})}default:return}}}}]);