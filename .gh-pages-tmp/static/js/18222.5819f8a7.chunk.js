"use strict";(self.webpackChunkever_wading_birds=self.webpackChunkever_wading_birds||[]).push([[18222,51708,87314],{18222:(e,r,t)=>{t.r(r),t.d(r,{default:()=>f});var i=t(93800),s=t(62631),n=t(48602),a=(t(21265),t(50925),t(14800)),o=t(75269),l=t(12560),u=t(54824),c=t(93321),d=t(51708),m=t(87520);let p=class extends m.default{constructor(e){super(e),this.extent=null,this.features=[],this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(e,r){if(!e)return[];const t=r.summary.envelope.spatialReference??r.spatialReference,i=t&&c.default.fromJSON(t);return e.map((e=>{const r=d.default.fromJSON(e);if(null!=r.geometry&&(r.geometry.spatialReference=i),null!=r.events)for(const t of r.events)null!=t.geometry&&(t.geometry.spatialReference=i);return r}))}get mergedGeometry(){return this.features?function(e,r){if(0===e.length)return new u.default({spatialReference:r});const t=[];for(const a of e)for(const e of a.paths)t.push(...e);const i=[];t.forEach(((e,r)=>{0!==r&&e[0]===t[r-1][0]&&e[1]===t[r-1][1]||i.push(e)}));const{hasM:s,hasZ:n}=e[0];return new u.default({hasM:s,hasZ:n,paths:[i],spatialReference:r})}(this.features.map((e=>{let{geometry:r}=e;return r})),this.extent.spatialReference):null}get strings(){return this.features.flatMap((e=>{let{strings:r}=e;return r})).filter(s.Ru)}};(0,i._)([(0,n.MZ)({type:l.default,json:{read:{source:"summary.envelope"}}})],p.prototype,"extent",void 0),(0,i._)([(0,n.MZ)({nonNullable:!0})],p.prototype,"features",void 0),(0,i._)([(0,a.w)("features")],p.prototype,"readFeatures",null),(0,i._)([(0,n.MZ)()],p.prototype,"geometryType",void 0),(0,i._)([(0,n.MZ)({readOnly:!0})],p.prototype,"mergedGeometry",null),(0,i._)([(0,n.MZ)()],p.prototype,"routeId",void 0),(0,i._)([(0,n.MZ)()],p.prototype,"routeName",void 0),(0,i._)([(0,n.MZ)({value:null,readOnly:!0})],p.prototype,"strings",null),(0,i._)([(0,n.MZ)({json:{read:{source:"summary.totalDriveTime"}}})],p.prototype,"totalDriveTime",void 0),(0,i._)([(0,n.MZ)({json:{read:{source:"summary.totalLength"}}})],p.prototype,"totalLength",void 0),(0,i._)([(0,n.MZ)({json:{read:{source:"summary.totalTime"}}})],p.prototype,"totalTime",void 0),p=(0,i._)([(0,o.$)("esri.rest.support.DirectionsFeatureSet")],p);const f=p},51708:(e,r,t)=>{t.r(r),t.d(r,{default:()=>m});var i=t(93800),s=t(79625),n=t(48602),a=(t(21265),t(50925),t(14746),t(14800)),o=t(75269),l=t(54824),u=t(87314),c=t(90465);let d=class extends s.default{constructor(e){super(e),this.events=null,this.geometry=null,this.strings=null}readGeometry(e,r){const t=function(e){if(null==e||""===e)return null;let r=0,t=0,i=0,s=0;const n=[];let a,o,l,u,c,d,m,p,f=0,y=0,h=0;if(c=e.match(/((\+|-)[^+\-|]+|\|)/g),c||(c=[]),0===parseInt(c[f],32)){f=2;const e=parseInt(c[f],32);f++,d=parseInt(c[f],32),f++,1&e&&(y=c.indexOf("|")+1,m=parseInt(c[y],32),y++),2&e&&(h=c.indexOf("|",y)+1,p=parseInt(c[h],32),h++)}else d=parseInt(c[f],32),f++;for(;f<c.length&&"|"!==c[f];){a=parseInt(c[f],32)+r,f++,r=a,o=parseInt(c[f],32)+t,f++,t=o;const e=[a/d,o/d];y&&(u=parseInt(c[y],32)+i,y++,i=u,e.push(u/m)),h&&(l=parseInt(c[h],32)+s,h++,s=l,e.push(l/p)),n.push(e)}return{paths:[n],hasZ:y>0,hasM:h>0}}(r.compressedGeometry);return null!=t?l.default.fromJSON(t):null}};(0,i._)([(0,n.MZ)({type:[u.default]})],d.prototype,"events",void 0),(0,i._)([(0,n.MZ)({type:l.default})],d.prototype,"geometry",void 0),(0,i._)([(0,a.w)("geometry",["compressedGeometry"])],d.prototype,"readGeometry",null),(0,i._)([(0,n.MZ)({type:[c.A]})],d.prototype,"strings",void 0),d=(0,i._)([(0,o.$)("esri.rest.support.DirectionsFeature")],d);const m=d},78307:(e,r,t)=>{t.d(r,{Zn:()=>l,_s:()=>d,aZ:()=>a,lh:()=>s,nA:()=>o,o9:()=>c,p3:()=>n,r9:()=>u});var i=t(93074);function s(e,r){if(null==e)return null;const t={},s=new RegExp(`^${r}`,"i");for(const n of Object.keys(e))if(s.test(n)){const s=n.slice(r.length);t[i.et.fromJSON(s)]=e[n]}return t}function n(e,r,t){if(null!=e){r.attributes||(r.attributes={});for(const s in e){const n=i.et.toJSON(s);r.attributes[`${t}${n}`]=e[s]}}}function a(e){const r={};for(const t of Object.keys(e)){const s=t;r[i.et.fromJSON(s)]=e[t]}return r}function o(e){const r={};for(const t of Object.keys(e)){const s=t;r[i.et.toJSON(s)]=e[t]}return r}function l(e,r){return null==e||null==r?null:Math.round((e-r)/6e4)}function u(e){const r=e.toJSON(),t=r;return t.accumulateAttributeNames&&=r.accumulateAttributeNames?.join(),t.attributeParameterValues&&=JSON.stringify(r.attributeParameterValues),t.barriers&&=JSON.stringify(r.barriers),t.outSR&&=r.outSR?.wkid,t.overrides&&=JSON.stringify(r.overrides),t.polygonBarriers&&=JSON.stringify(r.polygonBarriers),t.polylineBarriers&&=JSON.stringify(r.polylineBarriers),t.restrictionAttributeNames&&=r.restrictionAttributeNames?.join(),t.stops&&=JSON.stringify(r.stops),t.travelMode&&=JSON.stringify(r.travelMode),t}function c(e){const r=e.toJSON(),t=r;return t.accumulateAttributeNames&&=r.accumulateAttributeNames?.join(),t.attributeParameterValues&&=JSON.stringify(r.attributeParameterValues),t.barriers&&=JSON.stringify(r.barriers),t.facilities&&=JSON.stringify(r.facilities),t.incidents&&=JSON.stringify(r.incidents),t.outSR&&=r.outSR?.wkid,t.overrides&&=JSON.stringify(r.overrides),t.polygonBarriers&&=JSON.stringify(r.polygonBarriers),t.polylineBarriers&&=JSON.stringify(r.polylineBarriers),t.restrictionAttributeNames&&=r.restrictionAttributeNames?.join(),t.travelMode&&=JSON.stringify(r.travelMode),t}function d(e){const r=e.toJSON(),t=r;return t.accumulateAttributeNames&&=r.accumulateAttributeNames?.join(),t.attributeParameterValues&&=JSON.stringify(r.attributeParameterValues),t.barriers&&=JSON.stringify(r.barriers),t.defaultBreaks&&=r.defaultBreaks?.join(),t.excludeSourcesFromPolygons&&=r.excludeSourcesFromPolygons?.join(),t.facilities&&=JSON.stringify(r.facilities),t.outSR&&=r.outSR?.wkid,t.overrides&&=JSON.stringify(r.overrides),t.polygonBarriers&&=JSON.stringify(r.polygonBarriers),t.polylineBarriers&&=JSON.stringify(r.polylineBarriers),t.restrictionAttributeNames&&=r.restrictionAttributeNames?.join(),t.travelMode&&=JSON.stringify(r.travelMode),t}},87314:(e,r,t)=>{t.r(r),t.d(r,{default:()=>m});var i=t(93800),s=t(19455),n=t(48602),a=(t(21265),t(50925),t(14746),t(14800)),o=t(75269),l=t(75400),u=t(78307),c=t(90465);let d=class extends s.A{constructor(e){super(e),this.arriveTime=null,this.arriveTimeOffset=null,this.geometry=null,this.strings=null}readArriveTimeOffset(e,r){return(0,u.Zn)(r.ETA,r.arriveTimeUTC)}readGeometry(e,r){return l.default.fromJSON(r.point)}};(0,i._)([(0,n.MZ)({type:Date,json:{read:{source:"arriveTimeUTC"}}})],d.prototype,"arriveTime",void 0),(0,i._)([(0,n.MZ)()],d.prototype,"arriveTimeOffset",void 0),(0,i._)([(0,a.w)("arriveTimeOffset",["arriveTimeUTC","ETA"])],d.prototype,"readArriveTimeOffset",null),(0,i._)([(0,n.MZ)({type:l.default})],d.prototype,"geometry",void 0),(0,i._)([(0,a.w)("geometry",["point"])],d.prototype,"readGeometry",null),(0,i._)([(0,n.MZ)({type:[c.A]})],d.prototype,"strings",void 0),d=(0,i._)([(0,o.$)("esri.rest.support.DirectionsEvent")],d);const m=d},90465:(e,r,t)=>{t.d(r,{A:()=>c});var i=t(93800),s=t(19455),n=t(48602),a=(t(21265),t(50925),t(14746),t(47332)),o=t(75269),l=t(93074);let u=class extends s.A{constructor(e){super(e)}};(0,i._)([(0,n.MZ)({json:{read:{source:"string"}}})],u.prototype,"text",void 0),(0,i._)([(0,a.e)(l.Ec,{name:"stringType"})],u.prototype,"type",void 0),u=(0,i._)([(0,o.$)("esri.rest.support.DirectionsString")],u);const c=u},93074:(e,r,t)=>{t.d(r,{$n:()=>b,$r:()=>N,EM:()=>g,Ec:()=>P,JJ:()=>v,Mm:()=>U,OC:()=>w,Sr:()=>d,UO:()=>o,Vj:()=>J,WU:()=>_,Y8:()=>a,Z7:()=>l,_6:()=>O,_H:()=>f,aJ:()=>c,ag:()=>y,cQ:()=>m,dd:()=>M,dn:()=>u,et:()=>D,fe:()=>T,gD:()=>k,hE:()=>p,hY:()=>n,iM:()=>A,mt:()=>S,ow:()=>h,vS:()=>R});var i=t(42761);const s={esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"},n=(0,i.O)()(s),a=(0,i.O)()({...s,esriIntFeet:"international-feet",esriIntInches:"international-inches",esriIntMiles:"international-miles",esriIntNauticalMiles:"international-nautical-miles",esriIntYards:"international-yards"}),o=(0,i.O)()({esriAcres:"international-acres",esriAcresUS:"us-acres",esriAres:"ares",esriHectares:"hectares",esriSquareCentimeters:"square-centimeters",esriSquareDecimeters:"square-decimeters",esriSquareFeet:"square-international-feet",esriSquareFeetUS:"square-us-feet",esriSquareInches:"square-international-inches",esriSquareInchesUS:"square-us-inches",esriSquareKilometers:"square-kilometers",esriSquareMeters:"square-meters",esriSquareMiles:"square-international-miles",esriSquareMilesUS:"square-us-miles",esriSquareMillimeters:"square-millimeters",esriSquareYards:"square-international-yards",esriSquareYardsUS:"square-us-yards",esriUnknownAreaUnits:"unknown"}),l=(0,i.O)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),u=(0,i.O)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards",esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds",esriNAUKilometersPerHour:"kilometers-per-hour",esriNAUMilesPerHour:"miles-per-hour",esriNAUUnknown:"unknown"}),c=(0,i.O)()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),d=(0,i.O)()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"}),m=(0,i.O)()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"}),p=(0,i.O)()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"}),f=(0,i.O)()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),y=(0,i.O)()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"}),h=(0,i.O)()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"}),v=(0,i.O)()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),g=(0,i.O)()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),N=(0,i.O)()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),S=(0,i.O)()({1:"right",2:"left"},{useNumericKeys:!0}),A=(0,i.O)()({0:"restriction",1:"scaled-cost",2:"added-cost"},{useNumericKeys:!0}),T=(0,i.O)()({0:"permit",1:"restrict"},{useNumericKeys:!0}),O=(0,i.O)()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation",1007:"lane"},{useNumericKeys:!0}),k=(0,i.O)()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0}),b=(0,i.O)()({"NA Campus":"campus","NA Desktop":"desktop","NA Navigation":"navigation"}),M=(0,i.O)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters"},{ignoreUnknown:!1}),U=(0,i.O)()({Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),D=(0,i.O)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters",Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),w=(0,i.O)()({"Any Hazmat Prohibited":"any-hazmat-prohibited","Avoid Carpool Roads":"avoid-carpool-roads","Avoid Express Lanes":"avoid-express-lanes","Avoid Ferries":"avoid-ferries","Avoid Gates":"avoid-gates","Avoid Limited Access Roads":"avoid-limited-access-roads","Avoid Private Roads":"avoid-private-roads","Avoid Roads Unsuitable for Pedestrians":"avoid-roads-unsuitable-for-pedestrians","Avoid Stairways":"avoid-stairways","Avoid Toll Roads":"avoid-toll-roads","Avoid Toll Roads for Trucks":"avoid-toll-roads-for-trucks","Avoid Truck Restricted Roads":"avoid-truck-restricted-roads","Avoid Unpaved Roads":"avoid-unpaved-roads","Axle Count Restriction":"axle-count-restriction","Driving a Bus":"driving-a-bus","Driving a Taxi":"driving-a-taxi","Driving a Truck":"driving-a-truck","Driving an Automobile":"driving-an-automobile","Driving an Emergency Vehicle":"driving-an-emergency-vehicle","Height Restriction":"height-restriction","Kingpin to Rear Axle Length Restriction":"kingpin-to-rear-axle-length-restriction","Length Restriction":"length-restriction","Preferred for Pedestrians":"preferred-for-pedestrians","Riding a Motorcycle":"riding-a-motorcycle","Roads Under Construction Prohibited":"roads-under-construction-prohibited","Semi or Tractor with One or More Trailers Prohibited":"semi-or-tractor-with-one-or-more-trailers-prohibited","Single Axle Vehicles Prohibited":"single-axle-vehicles-prohibited","Tandem Axle Vehicles Prohibited":"tandem-axle-vehicles-prohibited","Through Traffic Prohibited":"through-traffic-prohibited","Truck with Trailers Restriction":"truck-with-trailers-restriction","Use Preferred Hazmat Routes":"use-preferred-hazmat-routes","Use Preferred Truck Routes":"use-preferred-truck-routes",Walking:"walking","Weight Restriction":"weight-restriction"},{ignoreUnknown:!1}),R=(0,i.O)()({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),J=(0,i.O)()({esriGeometryPoint:"point",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"envelope",esriGeometryMultipoint:"multipoint"}),_=(0,i.O)()({esriNAUTCost:"cost",esriNAUTDescriptor:"descriptor",esriNAUTRestriction:"restriction",esriNAUTHierarchy:"hierarchy"}),P=(0,i.O)()({esriDSTAltName:"alt-name",esriDSTArrive:"arrive",esriDSTBranch:"branch",esriDSTCrossStreet:"cross-street",esriDSTCumulativeLength:"cumulative-length",esriDSTDepart:"depart",esriDSTEstimatedArrivalTime:"estimated-arrival-time",esriDSTExit:"exit",esriDSTGeneral:"general",esriDSTLength:"length",esriDSTServiceTime:"service-time",esriDSTStreetName:"street-name",esriDSTSummary:"summary",esriDSTTime:"time",esriDSTTimeWindow:"time-window",esriDSTToward:"toward",esriDSTViolationTime:"violation-time",esriDSTWaitTime:"wait-time"})}}]);