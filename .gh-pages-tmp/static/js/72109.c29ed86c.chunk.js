"use strict";(self.webpackChunkever_wading_birds=self.webpackChunkever_wading_birds||[]).push([[72109],{72109:(e,t,o)=>{o.r(t),o.d(t,{default:()=>h});var r=o(93800),i=o(85715),s=o(19455),n=o(48602),p=(o(21265),o(50925),o(14746),o(47332)),l=o(75269),a=o(15484),y=o(78629),d=o(54723),u=o(47505),m=o(32474);let w=class extends(i.A.ClonableMixin(s.A)){constructor(){super(...arguments),this.geometry=null,this.objectIds=null,this.spatialRelationship="intersects",this.timeExtent=null,this.where=null}writeGeometry(e,t,o){null!=e&&(t.geometryType=(0,y.getJsonType)(e),t[o]=JSON.stringify(e.toJSON()))}};(0,r._)([(0,n.MZ)({types:d.yR,json:{read:y.fromJSON,write:!0}})],w.prototype,"geometry",void 0),(0,r._)([(0,a.K)("geometry")],w.prototype,"writeGeometry",null),(0,r._)([(0,n.MZ)({json:{write:!0}})],w.prototype,"objectIds",void 0),(0,r._)([(0,p.e)(u.x,{ignoreUnknown:!1,name:"spatialRel"})],w.prototype,"spatialRelationship",void 0),(0,r._)([(0,n.MZ)({type:m.default,json:{name:"time",write:!0}})],w.prototype,"timeExtent",void 0),(0,r._)([(0,n.MZ)({type:String,json:{write:!0}})],w.prototype,"where",void 0),w=(0,r._)([(0,l.$)("esri.rest.support.ImageGPSInfoParameters")],w);const h=w}}]);