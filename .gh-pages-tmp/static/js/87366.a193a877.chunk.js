"use strict";(self.webpackChunkever_wading_birds=self.webpackChunkever_wading_birds||[]).push([[33315,39960,42717,51413,87366],{2133:(e,a,t)=>{t.d(a,{Ju:()=>u,K8:()=>d,XH:()=>o,_r:()=>s,bO:()=>i,l:()=>y,nu:()=>f,pJ:()=>l,rc:()=>c});var r=t(39960),n=t(51413);function s(e){const a={id:e.id,name:e.name},t=(0,n.K)(e.type);return"FeatureLayer"!==t&&(a.layerType=t),a}async function i(e,a,t){if(null==e?.layers||null==e?.tables){const r=await t.fetchServiceMetadata(a,{customParameters:l(e)?.customParameters});(e=e||{}).layers=e.layers||r?.layers?.map(s),e.tables=e.tables||r?.tables?.map(s)}return e}function l(e){if(!e)return null;const{layers:a,tables:t}=e;return a?.length?a[0]:t?.length?t[0]:null}function c(e,a){return null==a?null:[...e.layers||[],...e.tables||[]].find((e=>e.id===a))}function u(e,a){return[...e.layers||[],...e.tables||[]].filter((e=>{let{layerType:t}=e;return t?a.includes(t):a.includes("ArcGISFeatureLayer")}))}function o(e){return(e?.layers?.length??0)+(e?.tables?.length??0)}function y(e){switch(e){case"catalog":return["CatalogLayer"];case"feature":return["ArcGISFeatureLayer"];case"oriented-imagery":return["OrientedImageryLayer"];case"subtype-group":return["SubtypeGroupLayer","SubtypeGroupTable"]}return null}function d(e){switch(e){case"CatalogLayer":return"CatalogLayer";case"OrientedImageryLayer":return"OrientedImageryLayer";case"SubtypeGroupLayer":case"SubtypeGroupTable":return"SubtypeGroupLayer"}return"FeatureLayer"}async function f(e,a,t){if(!e?.url)return a??{};if(a??={},!a.layers){const r=await t.fetchServiceMetadata(e.url);a.layers=r.layers?.map(s)}const{serverUrl:n,portalItem:i}=await(0,r.L)(e.url,{sceneLayerItem:e,customParameters:l(a)?.customParameters}).catch((()=>({serverUrl:null,portalItem:null})));if(null==n)return a.tables=[],a;if(!a.tables&&i){const e=await i.fetchData().catch((()=>null));if(e?.tables)a.tables=e.tables.map(s);else{const r=await t.fetchServiceMetadata(n,{customParameters:l(e)?.customParameters}).catch((()=>null));a.tables=r?.tables?.map(s)}}if(a.tables)for(const r of a.tables)r.url=`${n}/${r.id}`;return a}},32750:(e,a,t)=>{t.d(a,{v:()=>n});var r=t(91706);class n{constructor(){this._serviceMetadatas=new Map,this._itemDatas=new Map}async fetchServiceMetadata(e,a){const t=this._serviceMetadatas.get(e);if(t)return t;const n=await(0,r.V)(e,a);return this._serviceMetadatas.set(e,n),n}async fetchItemData(e){const{id:a}=e;if(!a)return null;const{_itemDatas:t}=this;if(t.has(a))return t.get(a);const r=await e.fetchData();return t.set(a,r),r}async fetchCustomParameters(e,a){const t=await this.fetchItemData(e);return t&&"object"==typeof t&&(a?a(t):t.customParameters)||null}}},39960:(e,a,t)=>{t.d(a,{L:()=>o});var r=t(13248),n=t(23060),s=t(74719),i=t(49959),l=t(65073),c=t(78139),u=t(34587);async function o(e,a){const t=(0,l.qg)(e);if(!t)throw new s.default("invalid-url","Invalid scene service url");const o={...a,sceneServerUrl:t.url.path,layerId:t.sublayer??void 0};if(o.sceneLayerItem??=await async function(e){const a=(await y(e)).serviceItemId;if(!a)return null;const t=new u.default({id:a,apiKey:e.apiKey}),s=await async function(e){const a=r.id?.findServerInfo(e.sceneServerUrl);if(a?.owningSystemUrl)return a.owningSystemUrl;const t=e.sceneServerUrl.replace(/(.*\/rest)\/.*/i,"$1")+"/info";try{const a=(await(0,n.default)(t,{query:{f:"json"},responseType:"json",signal:e.signal})).data.owningSystemUrl;if(a)return a}catch(f){(0,i.throwIfAbortError)(f)}return null}(e);null!=s&&(t.portal=new c.default({url:s}));try{return await t.load({signal:e.signal})}catch(m){return(0,i.throwIfAbortError)(m),null}}(o),null==o.sceneLayerItem)return d(o.sceneServerUrl.replace("/SceneServer","/FeatureServer"),o);const f=await async function(e){let{sceneLayerItem:a,signal:t}=e;if(!a)return null;try{const e=(await a.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},{signal:t})).find((e=>"Feature Service"===e.type))||null;if(!e)return null;const r=new u.default({portal:e.portal,id:e.id});return await r.load(),r}catch(r){return(0,i.throwIfAbortError)(r),null}}(o);if(!f?.url)throw new s.default("related-service-not-found","Could not find feature service through portal item relationship");o.featureServiceItem=f;const m=await d(f.url,o);return m.portalItem=f,m}async function y(e){if(e.rootDocument)return e.rootDocument;const a={query:{f:"json",...e.customParameters,token:e.apiKey},responseType:"json",signal:e.signal};try{const t=await(0,n.default)(e.sceneServerUrl,a);e.rootDocument=t.data}catch{e.rootDocument={}}return e.rootDocument}async function d(e,a){const t=(0,l.qg)(e);if(!t)throw new s.default("invalid-feature-service-url","Invalid feature service url");const r=t.url.path,i=a.layerId;if(null==i)return{serverUrl:r};const c=y(a),u=a.featureServiceItem?await a.featureServiceItem.fetchData("json"):null,o=(u?.layers?.[0]||u?.tables?.[0])?.customParameters,d=e=>{const t={query:{f:"json",...o},responseType:"json",authMode:e,signal:a.signal};return(0,n.default)(r,t)},f=d("anonymous").catch((()=>d("no-prompt"))),[m,w]=await Promise.all([f,c]),p=w?.layers,h=m.data&&m.data.layers;if(!Array.isArray(h))throw new Error("expected layers array");if(Array.isArray(p)){for(let n=0;n<Math.min(p.length,h.length);n++)if(p[n].id===i)return{serverUrl:r,layerId:h[n].id}}else if(null!=i&&i<h.length)return{serverUrl:r,layerId:h[i].id};throw new Error("could not find matching associated sublayer")}},51413:(e,a,t)=>{t.d(a,{K:()=>d,Q:()=>s});var r=t(91706);const n=new Set(["Catalog Layer","Feature Layer","Oriented Imagery Layer"]);async function s(e,a){const{loadContext:t,...n}=a||{},s=t?await t.fetchServiceMetadata(e,n):await(0,r.V)(e,n);y(s),c(s);const i={serviceJSON:s};if((s.currentVersion??0)<10.5)return i;const l=`${e}/layers`,u=t?await t.fetchServiceMetadata(l,n):await(0,r.V)(l,n);return y(u),c(u),i.layersJSON={layers:u.layers,tables:u.tables},i}function i(e){const{type:a}=e;return!!a&&n.has(a)}function l(e){return"Table"===e.type}function c(e){e.layers=e.layers?.filter(i),e.tables=e.tables?.filter(l)}function u(e){e.type||="Feature Layer"}function o(e){e.type||="Table"}function y(e){e.layers?.forEach(u),e.tables?.forEach(o)}function d(e){switch(e){case"Feature Layer":case"Table":return"FeatureLayer";case"Oriented Imagery Layer":return"OrientedImageryLayer";case"Catalog Layer":return"CatalogLayer"}return"FeatureLayer"}},87366:(e,a,t)=>{t.d(a,{fromItem:()=>d,n:()=>f});var r=t(74719),n=t(39960),s=t(51413),i=t(32750),l=t(78076),c=t(90596),u=t(34587),o=t(2133),y=t(85866);async function d(e){let{portalItem:a}=e;!a||a instanceof u.default||(a=new u.default(a));const t=await async function(e){await e.load();const a=new i.v;return async function(e){const a=e.className,t=c.S[a];return{constructor:await t(),properties:e.properties}}(await f(e,a))}(a);return new(0,t.constructor)({portalItem:a,...t.properties})}async function f(e,a){switch(e.type){case"3DTiles Service":return e.typeKeywords.includes("3DObject")?{className:"UnsupportedLayer"}:{className:"IntegratedMesh3DTilesLayer"};case"CSV":return{className:"CSVLayer"};case"Feature Collection":return async function(e){await e.load();const a=(0,y.Y)(e,"Map Notes"),t=(0,y.Y)(e,"Markup");if(a||t)return{className:"MapNotesLayer"};if((0,y.Y)(e,"Route Layer"))return{className:"RouteLayer"};const r=await e.fetchData();return 1===(0,o.XH)(r)?{className:"FeatureLayer"}:{className:"GroupLayer"}}(e);case"Feature Service":return async function(e,a){const t=await m(e,a);if("object"==typeof t){const{sourceJSON:e,className:a}=t,r={sourceJSON:e};return null!=t.id&&(r.layerId=t.id),{className:a||"FeatureLayer",properties:r}}return{className:"GroupLayer"}}(e,a);case"Feed":case"Stream Service":return{className:"StreamLayer"};case"GeoJson":return{className:"GeoJSONLayer"};case"Group Layer":return{className:"GroupLayer"};case"Image Service":return async function(e,a){await e.load();const t=e.typeKeywords?.map((e=>e.toLowerCase()))??[];if(t.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(t.includes("tiled imagery"))return{className:"ImageryTileLayer"};const r=await a.fetchItemData(e),n=r?.layerType;if("ArcGISTiledImageServiceLayer"===n)return{className:"ImageryTileLayer"};if("ArcGISImageServiceLayer"===n)return{className:"ImageryLayer"};const s=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)}),i=s.cacheType?.toLowerCase(),l=s.capabilities?.toLowerCase().includes("tilesonly"),c=s.tileInfo?.format?.toLowerCase()??"",u=null==i&&["jpg","jpeg","png","png8","png24","png32","mixed"].includes(c);return"map"===i||u||l?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}(e,a);case"KML":return{className:"KMLLayer"};case"Knowledge Graph Layer":return{className:"KnowledgeGraphLayer"};case"Map Service":return async function(e,a){return await async function(e,a){const{tileInfo:t}=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)});return t}(e,a)?{className:"TileLayer"}:{className:"MapImageLayer"}}(e,a);case"Media Layer":return{className:"MediaLayer"};case"Scene Service":return async function(e,a){const t=await m(e,a,(async()=>{try{if(!e.url)return[];const{serverUrl:t}=await(0,n.L)(e.url,{sceneLayerItem:e}),r=await a.fetchServiceMetadata(t);return r?.tables??[]}catch{return[]}}));if("object"==typeof t){const r={};let n;if(null!=t.id?(r.layerId=t.id,n=`${e.url}/layers/${t.id}`):n=e.url,e.typeKeywords?.length)for(const a of Object.keys(l.XX))if(e.typeKeywords.includes(a))return{className:l.XX[a]};const s=await a.fetchServiceMetadata(n,{customParameters:await a.fetchCustomParameters(e,(e=>(0,o.pJ)(e)?.customParameters))});return{className:l.XX[s?.layerType]||"SceneLayer",properties:r}}if(!1===t){const t=await a.fetchServiceMetadata(e.url);if("Voxel"===t?.layerType)return{className:"VoxelLayer"}}return{className:"GroupLayer"}}(e,a);case"Vector Tile Service":return{className:"VectorTileLayer"};case"WCS":return{className:"WCSLayer"};case"WFS":return{className:"WFSLayer"};case"WMS":return{className:"WMSLayer"};case"WMTS":return{className:"WMTSLayer"};default:throw new r.default("portal:unknown-item-type","Unknown item type '${type}'",{type:e.type})}}async function m(e,a,t){const{url:r,type:n}=e,i="Feature Service"===n;if(!r)return{};if(/\/\d+$/.test(r)){if(i){const t=await a.fetchServiceMetadata(r,{customParameters:await a.fetchCustomParameters(e,(e=>(0,o.pJ)(e)?.customParameters))});return{id:t.id,className:(0,s.K)(t.type),sourceJSON:t}}return{}}await e.load();let l=await a.fetchItemData(e);if(i){const e=await(0,o.bO)(l,r,a),t=w(e);if("object"==typeof t){const a=(0,o.rc)(e,t.id);t.className=(0,o.K8)(a?.layerType)}return t}if("Scene Service"===n&&(l=await(0,o.nu)(e,l,a)),(0,o.XH)(l)>0)return w(l);const c=await a.fetchServiceMetadata(r);return t&&(c.tables=await t()),w(c)}function w(e){return 1===(0,o.XH)(e)&&{id:(0,o.pJ)(e)?.id}}},90596:(e,a,t)=>{t.d(a,{S:()=>r});const r={BingMapsLayer:async()=>(await t.e(64354).then(t.bind(t,64354))).default,BuildingSceneLayer:async()=>(await Promise.all([t.e(86201),t.e(99717),t.e(69270),t.e(17055),t.e(34787),t.e(97684)]).then(t.bind(t,68199))).default,CSVLayer:async()=>(await t.e(76958).then(t.bind(t,76958))).default,CatalogLayer:async()=>(await Promise.all([t.e(81765),t.e(29071),t.e(68584),t.e(85793),t.e(44486),t.e(73254),t.e(86450)]).then(t.bind(t,86450))).default,DimensionLayer:async()=>(await t.e(68151).then(t.bind(t,68151))).default,ElevationLayer:async()=>(await t.e(52622).then(t.bind(t,52622))).default,FeatureLayer:async()=>(await Promise.resolve().then(t.bind(t,77969))).default,GeoJSONLayer:async()=>(await t.e(44317).then(t.bind(t,44317))).default,GeoRSSLayer:async()=>(await t.e(89644).then(t.bind(t,89644))).default,GroupLayer:async()=>(await Promise.all([t.e(63638),t.e(51413)]).then(t.bind(t,63638))).default,ImageryLayer:async()=>(await Promise.all([t.e(29071),t.e(21543),t.e(78496),t.e(31640),t.e(45643),t.e(46768),t.e(95856),t.e(61682),t.e(98701),t.e(68127)]).then(t.bind(t,86482))).default,ImageryTileLayer:async()=>(await Promise.all([t.e(21543),t.e(78496),t.e(31640),t.e(45643),t.e(46768),t.e(90801),t.e(95856),t.e(65231),t.e(33622),t.e(32203),t.e(11493)]).then(t.bind(t,32203))).default,IntegratedMesh3DTilesLayer:async()=>(await t.e(10743).then(t.bind(t,10743))).default,IntegratedMeshLayer:async()=>(await Promise.all([t.e(34787),t.e(93461)]).then(t.bind(t,32993))).default,KMLLayer:async()=>(await t.e(42303).then(t.bind(t,42303))).default,KnowledgeGraphLayer:async()=>(await Promise.all([t.e(81765),t.e(68584),t.e(75106),t.e(60897),t.e(13791),t.e(99055),t.e(59858),t.e(51107),t.e(38394),t.e(91411),t.e(21761),t.e(63337)]).then(t.bind(t,63337))).default,LineOfSightLayer:async()=>(await Promise.all([t.e(86201),t.e(86328),t.e(49715)]).then(t.bind(t,49715))).default,LinkChartLayer:async()=>(await Promise.all([t.e(81765),t.e(68584),t.e(75106),t.e(60897),t.e(13791),t.e(99055),t.e(59858),t.e(51107),t.e(38394),t.e(91411),t.e(21761),t.e(88211)]).then(t.bind(t,88211))).default,MapImageLayer:async()=>(await Promise.all([t.e(81765),t.e(29071),t.e(85793),t.e(3509),t.e(56036)]).then(t.bind(t,56036))).default,MapNotesLayer:async()=>(await t.e(45180).then(t.bind(t,45180))).default,MediaLayer:async()=>(await Promise.all([t.e(45641),t.e(73414)]).then(t.bind(t,65207))).default,OGCFeatureLayer:async()=>(await Promise.all([t.e(81765),t.e(59661),t.e(4052)]).then(t.bind(t,94430))).default,OpenStreetMapLayer:async()=>(await t.e(60678).then(t.bind(t,60678))).default,OrientedImageryLayer:async()=>(await t.e(88455).then(t.bind(t,88455))).default,PointCloudLayer:async()=>(await Promise.all([t.e(34787),t.e(51669)]).then(t.bind(t,88513))).default,RouteLayer:async()=>(await Promise.all([t.e(92744),t.e(6569),t.e(48028)]).then(t.bind(t,48028))).default,SceneLayer:async()=>(await Promise.all([t.e(86201),t.e(99717),t.e(69270),t.e(34787),t.e(14854)]).then(t.bind(t,75918))).default,StreamLayer:async()=>(await t.e(33148).then(t.bind(t,33148))).default,SubtypeGroupLayer:async()=>(await t.e(86366).then(t.bind(t,86366))).default,TileLayer:async()=>(await Promise.all([t.e(81765),t.e(29071),t.e(85793),t.e(3509),t.e(14281)]).then(t.bind(t,14281))).default,UnknownLayer:async()=>(await t.e(57049).then(t.bind(t,57049))).default,UnsupportedLayer:async()=>(await t.e(34202).then(t.bind(t,34202))).default,VectorTileLayer:async()=>(await Promise.all([t.e(22210),t.e(83901)]).then(t.bind(t,78334))).default,VideoLayer:async()=>(await Promise.all([t.e(8582),t.e(25385)]).then(t.bind(t,51817))).default,ViewshedLayer:async()=>(await Promise.all([t.e(86201),t.e(7848)]).then(t.bind(t,11432))).default,VoxelLayer:async()=>(await Promise.all([t.e(34787),t.e(35754)]).then(t.bind(t,22732))).default,WCSLayer:async()=>(await Promise.all([t.e(21543),t.e(78496),t.e(31640),t.e(45643),t.e(46768),t.e(90801),t.e(95856),t.e(65231),t.e(33622),t.e(1072),t.e(32887)]).then(t.bind(t,32887))).default,WFSLayer:async()=>(await Promise.all([t.e(7641),t.e(52147)]).then(t.bind(t,23185))).default,WMSLayer:async()=>(await t.e(62163).then(t.bind(t,62163))).default,WMTSLayer:async()=>(await t.e(56569).then(t.bind(t,56569))).default,WebTileLayer:async()=>(await t.e(39917).then(t.bind(t,39917))).default}},91706:(e,a,t)=>{t.d(a,{V:()=>n});var r=t(23060);async function n(e,a){const{data:t}=await(0,r.default)(e,{responseType:"json",query:{f:"json",...a?.customParameters,token:a?.apiKey}});return t}}}]);