"use strict";(self.webpackChunkever_wading_birds=self.webpackChunkever_wading_birds||[]).push([[48242,65241,98274],{48242:(e,t,i)=>{i.r(t),i.d(t,{default:()=>w});var r,s=i(93800),o=i(85715),n=i(89129),a=i(19455),l=i(48602),u=i(80556),p=(i(21265),i(14746),i(47332)),c=i(14800),d=i(75269),m=i(15484),y=i(93321),h=i(98274),v=i(93074),A=i(65241);let g=r=class extends(o.A.ClonableMixin(a.A)){constructor(e){super(e),this.accumulateAttributes=null,this.apiKey=null,this.attributeParameterValues=null,this.defaultBreaks=null,this.excludeSourcesFromPolygons=null,this.facilities=null,this.geometryPrecision=null,this.geometryPrecisionM=null,this.geometryPrecisionZ=null,this.ignoreInvalidLocations=null,this.impedanceAttribute=null,this.mergeSimilarPolygonRanges=!1,this.outputGeometryPrecision=null,this.outputGeometryPrecisionUnits=null,this.outputLines=null,this.outputPolygons=null,this.outSpatialReference=null,this.overlapLines=!1,this.overlapPolygons=!1,this.overrides=null,this.pointBarriers=null,this.polygonBarriers=null,this.polylineBarriers=null,this.preserveObjectID=null,this.restrictionAttributes=null,this.restrictUTurns=null,this.returnFacilities=!1,this.returnPointBarriers=!1,this.returnPolygonBarriers=!1,this.returnPolylineBarriers=!1,this.splitLinesAtBreaks=!1,this.splitPolygonsAtBreaks=!1,this.timeOfDay=null,this.timeOfDayIsUTC=null,this.travelDirection=null,this.travelMode=null,this.trimOuterPolygon=!1,this.trimPolygonDistance=null,this.trimPolygonDistanceUnits=null,this.useHierarchy=null}static from(e){return(0,u.PZ)(r,e)}readAccumulateAttributes(e){return null==e?null:e.map((e=>v.et.fromJSON(e)))}writeAccumulateAttributes(e,t,i){e?.length&&(t[i]=e.map((e=>v.et.toJSON(e))))}writeFacilities(e,t,i){N(e,t,i)}writePointBarriers(e,t,i){N(e,t,i)}writePolygonBarrier(e,t,i){N(e,t,i)}writePolylineBarrier(e,t,i){N(e,t,i)}readRestrictionAttributes(e){return null==e?null:e.map((e=>v.OC.fromJSON(e)))}writeRestrictionAttributes(e,t,i){e?.length&&(t[i]=e.map((e=>v.OC.toJSON(e))))}readTimeOfDay(e,t){const{timeOfDay:i}=t;return null==i?null:"now"===i?"now":new Date(i)}writeTimeOfDay(e,t){null!=e&&(t.timeOfDay="now"===e?"now":e.getTime())}};(0,s._)([(0,l.MZ)({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],g.prototype,"accumulateAttributes",void 0),(0,s._)([(0,c.w)("accumulateAttributes")],g.prototype,"readAccumulateAttributes",null),(0,s._)([(0,m.K)("accumulateAttributes")],g.prototype,"writeAccumulateAttributes",null),(0,s._)([(0,l.MZ)(h.K)],g.prototype,"apiKey",void 0),(0,s._)([(0,l.MZ)({json:{write:!0}})],g.prototype,"attributeParameterValues",void 0),(0,s._)([(0,l.MZ)({type:[Number],json:{write:!0}})],g.prototype,"defaultBreaks",void 0),(0,s._)([(0,l.MZ)({type:[String],json:{write:!0}})],g.prototype,"excludeSourcesFromPolygons",void 0),(0,s._)([(0,l.MZ)({json:{write:!0}})],g.prototype,"facilities",void 0),(0,s._)([(0,m.K)("facilities")],g.prototype,"writeFacilities",null),(0,s._)([(0,l.MZ)({type:Number,json:{write:!0}})],g.prototype,"geometryPrecision",void 0),(0,s._)([(0,l.MZ)({type:Number,json:{write:!0}})],g.prototype,"geometryPrecisionM",void 0),(0,s._)([(0,l.MZ)({type:Number,json:{write:!0}})],g.prototype,"geometryPrecisionZ",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],g.prototype,"ignoreInvalidLocations",void 0),(0,s._)([(0,p.e)(v.et,{name:"impedanceAttributeName",ignoreUnknown:!1})],g.prototype,"impedanceAttribute",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],g.prototype,"mergeSimilarPolygonRanges",void 0),(0,s._)([(0,l.MZ)({type:Number,json:{write:!0}})],g.prototype,"outputGeometryPrecision",void 0),(0,s._)([(0,p.e)(v.hY)],g.prototype,"outputGeometryPrecisionUnits",void 0),(0,s._)([(0,p.e)(v.Sr)],g.prototype,"outputLines",void 0),(0,s._)([(0,p.e)(v.cQ)],g.prototype,"outputPolygons",void 0),(0,s._)([(0,l.MZ)({type:y.default,json:{name:"outSR",write:!0}})],g.prototype,"outSpatialReference",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],g.prototype,"overlapLines",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],g.prototype,"overlapPolygons",void 0),(0,s._)([(0,l.MZ)({json:{write:!0}})],g.prototype,"overrides",void 0),(0,s._)([(0,l.MZ)({json:{name:"barriers",write:!0}})],g.prototype,"pointBarriers",void 0),(0,s._)([(0,m.K)("pointBarriers")],g.prototype,"writePointBarriers",null),(0,s._)([(0,l.MZ)({json:{write:!0}})],g.prototype,"polygonBarriers",void 0),(0,s._)([(0,m.K)("polygonBarriers")],g.prototype,"writePolygonBarrier",null),(0,s._)([(0,l.MZ)({json:{write:!0}})],g.prototype,"polylineBarriers",void 0),(0,s._)([(0,m.K)("polylineBarriers")],g.prototype,"writePolylineBarrier",null),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],g.prototype,"preserveObjectID",void 0),(0,s._)([(0,l.MZ)({type:[String],json:{name:"restrictionAttributeNames",write:!0}})],g.prototype,"restrictionAttributes",void 0),(0,s._)([(0,c.w)("restrictionAttributes")],g.prototype,"readRestrictionAttributes",null),(0,s._)([(0,m.K)("restrictionAttributes")],g.prototype,"writeRestrictionAttributes",null),(0,s._)([(0,p.e)(v.hE)],g.prototype,"restrictUTurns",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],g.prototype,"returnFacilities",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{name:"returnBarriers",write:!0}})],g.prototype,"returnPointBarriers",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],g.prototype,"returnPolygonBarriers",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],g.prototype,"returnPolylineBarriers",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],g.prototype,"splitLinesAtBreaks",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],g.prototype,"splitPolygonsAtBreaks",void 0),(0,s._)([(0,l.MZ)({json:{write:!0}})],g.prototype,"timeOfDay",void 0),(0,s._)([(0,c.w)("timeOfDay")],g.prototype,"readTimeOfDay",null),(0,s._)([(0,m.K)("timeOfDay")],g.prototype,"writeTimeOfDay",null),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],g.prototype,"timeOfDayIsUTC",void 0),(0,s._)([(0,p.e)(v._H)],g.prototype,"travelDirection",void 0),(0,s._)([(0,l.MZ)({type:A.default,json:{write:!0}})],g.prototype,"travelMode",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],g.prototype,"trimOuterPolygon",void 0),(0,s._)([(0,l.MZ)({type:Number,json:{write:!0}})],g.prototype,"trimPolygonDistance",void 0),(0,s._)([(0,p.e)(v.hY)],g.prototype,"trimPolygonDistanceUnits",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],g.prototype,"useHierarchy",void 0),g=r=(0,s._)([(0,d.$)("esri.rest.support.ServiceAreaParameters")],g);const w=g;function N(e,t,i){null!=e&&(t[i]=n.default.isCollection(e)?{features:e.toArray().map((e=>e.toJSON()))}:e.toJSON())}},65241:(e,t,i)=>{i.r(t),i.d(t,{default:()=>m});var r=i(93800),s=i(85715),o=i(19455),n=i(48602),a=(i(21265),i(50925),i(14746),i(47332)),l=i(14800),u=i(75269),p=i(15484),c=i(93074);let d=class extends(s.A.ClonableMixin(o.A)){constructor(e){super(e),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null}readId(e,t){return t.id??t.itemId??null}readRestrictionAttributes(e,t){const{restrictionAttributeNames:i}=t;return null==i?null:i.map((e=>c.OC.fromJSON(e)))}writeRestrictionAttributes(e,t,i){null!=e&&(t[i]=e.map((e=>c.OC.toJSON(e))))}};(0,r._)([(0,n.MZ)({type:[Object],json:{write:!0}})],d.prototype,"attributeParameterValues",void 0),(0,r._)([(0,n.MZ)({type:String,json:{write:!0}})],d.prototype,"description",void 0),(0,r._)([(0,a.e)(c.dd,{ignoreUnknown:!1})],d.prototype,"distanceAttributeName",void 0),(0,r._)([(0,n.MZ)({type:String,json:{write:!0}})],d.prototype,"id",void 0),(0,r._)([(0,l.w)("id",["id","itemId"])],d.prototype,"readId",null),(0,r._)([(0,a.e)(c.et,{ignoreUnknown:!1})],d.prototype,"impedanceAttributeName",void 0),(0,r._)([(0,n.MZ)({type:String,json:{write:!0}})],d.prototype,"name",void 0),(0,r._)([(0,n.MZ)({type:[String],json:{write:!0}})],d.prototype,"restrictionAttributeNames",void 0),(0,r._)([(0,l.w)("restrictionAttributeNames")],d.prototype,"readRestrictionAttributes",null),(0,r._)([(0,p.K)("restrictionAttributeNames")],d.prototype,"writeRestrictionAttributes",null),(0,r._)([(0,n.MZ)({type:Number,json:{write:{allowNull:!0}}})],d.prototype,"simplificationTolerance",void 0),(0,r._)([(0,a.e)(c.hY)],d.prototype,"simplificationToleranceUnits",void 0),(0,r._)([(0,a.e)(c.Mm,{ignoreUnknown:!1})],d.prototype,"timeAttributeName",void 0),(0,r._)([(0,a.e)(c.ow)],d.prototype,"type",void 0),(0,r._)([(0,n.MZ)({type:Boolean,json:{write:!0}})],d.prototype,"useHierarchy",void 0),(0,r._)([(0,a.e)(c.hE)],d.prototype,"uturnAtJunctions",void 0),d=(0,r._)([(0,u.$)("esri.rest.support.TravelMode")],d);const m=d},93074:(e,t,i)=>{i.d(t,{$n:()=>M,$r:()=>w,EM:()=>g,Ec:()=>R,JJ:()=>A,Mm:()=>k,OC:()=>_,Sr:()=>c,UO:()=>a,Vj:()=>P,WU:()=>B,Y8:()=>n,Z7:()=>l,_6:()=>S,_H:()=>y,aJ:()=>p,ag:()=>h,cQ:()=>d,dd:()=>O,dn:()=>u,et:()=>U,fe:()=>T,gD:()=>b,hE:()=>m,hY:()=>o,iM:()=>f,mt:()=>N,ow:()=>v,vS:()=>D});var r=i(42761);const s={esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"},o=(0,r.O)()(s),n=(0,r.O)()({...s,esriIntFeet:"international-feet",esriIntInches:"international-inches",esriIntMiles:"international-miles",esriIntNauticalMiles:"international-nautical-miles",esriIntYards:"international-yards"}),a=(0,r.O)()({esriAcres:"international-acres",esriAcresUS:"us-acres",esriAres:"ares",esriHectares:"hectares",esriSquareCentimeters:"square-centimeters",esriSquareDecimeters:"square-decimeters",esriSquareFeet:"square-international-feet",esriSquareFeetUS:"square-us-feet",esriSquareInches:"square-international-inches",esriSquareInchesUS:"square-us-inches",esriSquareKilometers:"square-kilometers",esriSquareMeters:"square-meters",esriSquareMiles:"square-international-miles",esriSquareMilesUS:"square-us-miles",esriSquareMillimeters:"square-millimeters",esriSquareYards:"square-international-yards",esriSquareYardsUS:"square-us-yards",esriUnknownAreaUnits:"unknown"}),l=(0,r.O)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),u=(0,r.O)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards",esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds",esriNAUKilometersPerHour:"kilometers-per-hour",esriNAUMilesPerHour:"miles-per-hour",esriNAUUnknown:"unknown"}),p=(0,r.O)()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),c=(0,r.O)()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"}),d=(0,r.O)()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"}),m=(0,r.O)()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"}),y=(0,r.O)()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),h=(0,r.O)()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"}),v=(0,r.O)()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"}),A=(0,r.O)()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),g=(0,r.O)()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),w=(0,r.O)()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),N=(0,r.O)()({1:"right",2:"left"},{useNumericKeys:!0}),f=(0,r.O)()({0:"restriction",1:"scaled-cost",2:"added-cost"},{useNumericKeys:!0}),T=(0,r.O)()({0:"permit",1:"restrict"},{useNumericKeys:!0}),S=(0,r.O)()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation",1007:"lane"},{useNumericKeys:!0}),b=(0,r.O)()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0}),M=(0,r.O)()({"NA Campus":"campus","NA Desktop":"desktop","NA Navigation":"navigation"}),O=(0,r.O)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters"},{ignoreUnknown:!1}),k=(0,r.O)()({Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),U=(0,r.O)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters",Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),_=(0,r.O)()({"Any Hazmat Prohibited":"any-hazmat-prohibited","Avoid Carpool Roads":"avoid-carpool-roads","Avoid Express Lanes":"avoid-express-lanes","Avoid Ferries":"avoid-ferries","Avoid Gates":"avoid-gates","Avoid Limited Access Roads":"avoid-limited-access-roads","Avoid Private Roads":"avoid-private-roads","Avoid Roads Unsuitable for Pedestrians":"avoid-roads-unsuitable-for-pedestrians","Avoid Stairways":"avoid-stairways","Avoid Toll Roads":"avoid-toll-roads","Avoid Toll Roads for Trucks":"avoid-toll-roads-for-trucks","Avoid Truck Restricted Roads":"avoid-truck-restricted-roads","Avoid Unpaved Roads":"avoid-unpaved-roads","Axle Count Restriction":"axle-count-restriction","Driving a Bus":"driving-a-bus","Driving a Taxi":"driving-a-taxi","Driving a Truck":"driving-a-truck","Driving an Automobile":"driving-an-automobile","Driving an Emergency Vehicle":"driving-an-emergency-vehicle","Height Restriction":"height-restriction","Kingpin to Rear Axle Length Restriction":"kingpin-to-rear-axle-length-restriction","Length Restriction":"length-restriction","Preferred for Pedestrians":"preferred-for-pedestrians","Riding a Motorcycle":"riding-a-motorcycle","Roads Under Construction Prohibited":"roads-under-construction-prohibited","Semi or Tractor with One or More Trailers Prohibited":"semi-or-tractor-with-one-or-more-trailers-prohibited","Single Axle Vehicles Prohibited":"single-axle-vehicles-prohibited","Tandem Axle Vehicles Prohibited":"tandem-axle-vehicles-prohibited","Through Traffic Prohibited":"through-traffic-prohibited","Truck with Trailers Restriction":"truck-with-trailers-restriction","Use Preferred Hazmat Routes":"use-preferred-hazmat-routes","Use Preferred Truck Routes":"use-preferred-truck-routes",Walking:"walking","Weight Restriction":"weight-restriction"},{ignoreUnknown:!1}),D=(0,r.O)()({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),P=(0,r.O)()({esriGeometryPoint:"point",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"envelope",esriGeometryMultipoint:"multipoint"}),B=(0,r.O)()({esriNAUTCost:"cost",esriNAUTDescriptor:"descriptor",esriNAUTRestriction:"restriction",esriNAUTHierarchy:"hierarchy"}),R=(0,r.O)()({esriDSTAltName:"alt-name",esriDSTArrive:"arrive",esriDSTBranch:"branch",esriDSTCrossStreet:"cross-street",esriDSTCumulativeLength:"cumulative-length",esriDSTDepart:"depart",esriDSTEstimatedArrivalTime:"estimated-arrival-time",esriDSTExit:"exit",esriDSTGeneral:"general",esriDSTLength:"length",esriDSTServiceTime:"service-time",esriDSTStreetName:"street-name",esriDSTSummary:"summary",esriDSTTime:"time",esriDSTTimeWindow:"time-window",esriDSTToward:"toward",esriDSTViolationTime:"violation-time",esriDSTWaitTime:"wait-time"})},98274:(e,t,i)=>{i.d(t,{K:()=>r});const r={type:String,json:{read:{source:"token"},write:{target:"token"}}}}}]);