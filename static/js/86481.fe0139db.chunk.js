"use strict";(self.webpackChunkever_wading_birds=self.webpackChunkever_wading_birds||[]).push([[65241,86481],{10280:(e,t,i)=>{i.d(t,{A:()=>c});var r=i(93800),s=i(19455),a=i(48602),o=(i(21265),i(50925),i(14746),i(14800)),n=i(75269),l=i(15484),u=i(93074),d=i(65241);let m=class extends s.A{constructor(e){super(e),this.accumulateAttributes=null,this.directionsLanguage=null,this.findBestSequence=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.startTimeIsUTC=null,this.timeWindowsAreUTC=null,this.travelMode=null}readAccumulateAttributes(e){return null==e?null:e.map((e=>u.et.fromJSON(e)))}writeAccumulateAttributes(e,t,i){e?.length&&(t[i]=e.map((e=>u.et.toJSON(e))))}};(0,r._)([(0,a.MZ)({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],m.prototype,"accumulateAttributes",void 0),(0,r._)([(0,o.w)("accumulateAttributes")],m.prototype,"readAccumulateAttributes",null),(0,r._)([(0,l.K)("accumulateAttributes")],m.prototype,"writeAccumulateAttributes",null),(0,r._)([(0,a.MZ)({type:String,json:{write:!0}})],m.prototype,"directionsLanguage",void 0),(0,r._)([(0,a.MZ)({type:Boolean,json:{write:!0}})],m.prototype,"findBestSequence",void 0),(0,r._)([(0,a.MZ)({type:Boolean,json:{write:!0}})],m.prototype,"preserveFirstStop",void 0),(0,r._)([(0,a.MZ)({type:Boolean,json:{write:!0}})],m.prototype,"preserveLastStop",void 0),(0,r._)([(0,a.MZ)({type:Boolean,json:{write:!0}})],m.prototype,"startTimeIsUTC",void 0),(0,r._)([(0,a.MZ)({type:Boolean,json:{write:!0}})],m.prototype,"timeWindowsAreUTC",void 0),(0,r._)([(0,a.MZ)({type:d.default,json:{write:!0}})],m.prototype,"travelMode",void 0),m=(0,r._)([(0,n.$)("esri.rest.support.RouteSettings")],m);const c=m},65241:(e,t,i)=>{i.r(t),i.d(t,{default:()=>p});var r=i(93800),s=i(85715),a=i(19455),o=i(48602),n=(i(21265),i(50925),i(14746),i(47332)),l=i(14800),u=i(75269),d=i(15484),m=i(93074);let c=class extends(s.A.ClonableMixin(a.A)){constructor(e){super(e),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null}readId(e,t){return t.id??t.itemId??null}readRestrictionAttributes(e,t){const{restrictionAttributeNames:i}=t;return null==i?null:i.map((e=>m.OC.fromJSON(e)))}writeRestrictionAttributes(e,t,i){null!=e&&(t[i]=e.map((e=>m.OC.toJSON(e))))}};(0,r._)([(0,o.MZ)({type:[Object],json:{write:!0}})],c.prototype,"attributeParameterValues",void 0),(0,r._)([(0,o.MZ)({type:String,json:{write:!0}})],c.prototype,"description",void 0),(0,r._)([(0,n.e)(m.dd,{ignoreUnknown:!1})],c.prototype,"distanceAttributeName",void 0),(0,r._)([(0,o.MZ)({type:String,json:{write:!0}})],c.prototype,"id",void 0),(0,r._)([(0,l.w)("id",["id","itemId"])],c.prototype,"readId",null),(0,r._)([(0,n.e)(m.et,{ignoreUnknown:!1})],c.prototype,"impedanceAttributeName",void 0),(0,r._)([(0,o.MZ)({type:String,json:{write:!0}})],c.prototype,"name",void 0),(0,r._)([(0,o.MZ)({type:[String],json:{write:!0}})],c.prototype,"restrictionAttributeNames",void 0),(0,r._)([(0,l.w)("restrictionAttributeNames")],c.prototype,"readRestrictionAttributes",null),(0,r._)([(0,d.K)("restrictionAttributeNames")],c.prototype,"writeRestrictionAttributes",null),(0,r._)([(0,o.MZ)({type:Number,json:{write:{allowNull:!0}}})],c.prototype,"simplificationTolerance",void 0),(0,r._)([(0,n.e)(m.hY)],c.prototype,"simplificationToleranceUnits",void 0),(0,r._)([(0,n.e)(m.Mm,{ignoreUnknown:!1})],c.prototype,"timeAttributeName",void 0),(0,r._)([(0,n.e)(m.ow)],c.prototype,"type",void 0),(0,r._)([(0,o.MZ)({type:Boolean,json:{write:!0}})],c.prototype,"useHierarchy",void 0),(0,r._)([(0,n.e)(m.hE)],c.prototype,"uturnAtJunctions",void 0),c=(0,r._)([(0,u.$)("esri.rest.support.TravelMode")],c);const p=c},78307:(e,t,i)=>{i.d(t,{Zn:()=>l,_s:()=>m,aZ:()=>o,lh:()=>s,nA:()=>n,o9:()=>d,p3:()=>a,r9:()=>u});var r=i(93074);function s(e,t){if(null==e)return null;const i={},s=new RegExp(`^${t}`,"i");for(const a of Object.keys(e))if(s.test(a)){const s=a.slice(t.length);i[r.et.fromJSON(s)]=e[a]}return i}function a(e,t,i){if(null!=e){t.attributes||(t.attributes={});for(const s in e){const a=r.et.toJSON(s);t.attributes[`${i}${a}`]=e[s]}}}function o(e){const t={};for(const i of Object.keys(e)){const s=i;t[r.et.fromJSON(s)]=e[i]}return t}function n(e){const t={};for(const i of Object.keys(e)){const s=i;t[r.et.toJSON(s)]=e[i]}return t}function l(e,t){return null==e||null==t?null:Math.round((e-t)/6e4)}function u(e){const t=e.toJSON(),i=t;return i.accumulateAttributeNames&&=t.accumulateAttributeNames?.join(),i.attributeParameterValues&&=JSON.stringify(t.attributeParameterValues),i.barriers&&=JSON.stringify(t.barriers),i.outSR&&=t.outSR?.wkid,i.overrides&&=JSON.stringify(t.overrides),i.polygonBarriers&&=JSON.stringify(t.polygonBarriers),i.polylineBarriers&&=JSON.stringify(t.polylineBarriers),i.restrictionAttributeNames&&=t.restrictionAttributeNames?.join(),i.stops&&=JSON.stringify(t.stops),i.travelMode&&=JSON.stringify(t.travelMode),i}function d(e){const t=e.toJSON(),i=t;return i.accumulateAttributeNames&&=t.accumulateAttributeNames?.join(),i.attributeParameterValues&&=JSON.stringify(t.attributeParameterValues),i.barriers&&=JSON.stringify(t.barriers),i.facilities&&=JSON.stringify(t.facilities),i.incidents&&=JSON.stringify(t.incidents),i.outSR&&=t.outSR?.wkid,i.overrides&&=JSON.stringify(t.overrides),i.polygonBarriers&&=JSON.stringify(t.polygonBarriers),i.polylineBarriers&&=JSON.stringify(t.polylineBarriers),i.restrictionAttributeNames&&=t.restrictionAttributeNames?.join(),i.travelMode&&=JSON.stringify(t.travelMode),i}function m(e){const t=e.toJSON(),i=t;return i.accumulateAttributeNames&&=t.accumulateAttributeNames?.join(),i.attributeParameterValues&&=JSON.stringify(t.attributeParameterValues),i.barriers&&=JSON.stringify(t.barriers),i.defaultBreaks&&=t.defaultBreaks?.join(),i.excludeSourcesFromPolygons&&=t.excludeSourcesFromPolygons?.join(),i.facilities&&=JSON.stringify(t.facilities),i.outSR&&=t.outSR?.wkid,i.overrides&&=JSON.stringify(t.overrides),i.polygonBarriers&&=JSON.stringify(t.polygonBarriers),i.polylineBarriers&&=JSON.stringify(t.polylineBarriers),i.restrictionAttributeNames&&=t.restrictionAttributeNames?.join(),i.travelMode&&=JSON.stringify(t.travelMode),i}},86481:(e,t,i)=>{i.r(t),i.d(t,{default:()=>f});var r,s=i(93800),a=i(79625),o=i(35377),n=i(85715),l=i(19455),u=i(48602),d=(i(21265),i(50925),i(14746),i(14800)),m=i(75269),c=i(54824),p=i(78307),y=i(10280),T=i(38602);let h=r=class extends(n.A.ClonableMixin(l.A)){constructor(e){super(e),this.analysisSettings=null,this.endTime=null,this.endTimeOffset=null,this.firstStopId=null,this.geometry=null,this.lastStopId=null,this.messages=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.startTime=null,this.startTimeOffset=null,this.stopCount=null,this.symbol=null,this.totalCosts=null,this.totalDistance=null,this.totalDuration=null,this.totalLateDuration=null,this.totalViolations=null,this.totalWait=null,this.totalWaitDuration=null,this.type="route-info",this.version="1.0.0"}readEndTime(e,t){return null!=t.attributes.EndTimeUTC?new Date(t.attributes.EndTimeUTC):null}readEndTimeOffset(e,t){return(0,p.Zn)(t.attributes.EndTime,t.attributes.EndTimeUTC)}readStartTime(e,t){return null!=t.attributes.StartTimeUTC?new Date(t.attributes.StartTimeUTC):null}readStartTimeOffset(e,t){return(0,p.Zn)(t.attributes.StartTime,t.attributes.StartTimeUTC)}readTotalCosts(e,t){return(0,p.lh)(t.attributes,"Total_")}readTotalViolations(e,t){return(0,p.lh)(t.attributes,"TotalViolation_")}readTotalWait(e,t){return(0,p.lh)(t.attributes,"TotalWait_")}static fromGraphic(e){return new r({analysisSettings:null!=e.attributes.AnalysisSettings?y.A.fromJSON(JSON.parse(e.attributes.AnalysisSettings)):null,endTime:null!=e.attributes.EndTime?new Date(e.attributes.EndTime):null,endTimeOffset:e.attributes.EndUTCOffset??null,geometry:e.geometry,messages:null!=e.attributes.Messages?JSON.parse(e.attributes.Messages):null,name:e.attributes.RouteName,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,startTime:null!=e.attributes.StartTime?new Date(e.attributes.StartTime):null,startTimeOffset:e.attributes.StartUTCOffset??null,symbol:e.symbol,totalCosts:null!=e.attributes.TotalCosts?(0,p.aZ)(JSON.parse(e.attributes.TotalCosts)):null,totalDistance:e.attributes.TotalMeters??null,totalDuration:e.attributes.TotalMinutes??null,totalLateDuration:e.attributes.TotalLateMinutes??null,totalWaitDuration:e.attributes.TotalWaitMinutes??null,version:e.attributes.Version})}toGraphic(){const e={ObjectID:this.objectId,AnalysisSettings:null!=this.analysisSettings?JSON.stringify(this.analysisSettings.toJSON()):null,EndTime:null!=this.endTime?this.endTime.getTime():null,EndUTCOffset:this.endTimeOffset,Messages:null!=this.messages?JSON.stringify(this.messages):null,RouteName:this.name,StartTime:null!=this.startTime?this.startTime.getTime():null,StartUTCOffset:this.startTimeOffset,TotalCosts:null!=this.totalCosts?JSON.stringify((0,p.nA)(this.totalCosts)):null,TotalLateMinutes:this.totalLateDuration,TotalMeters:this.totalDistance,TotalMinutes:this.totalDuration,TotalWaitMinutes:this.totalWaitDuration,Version:this.version};return new a.default({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};h.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"AnalysisSettings",alias:"Analysis Settings",type:"esriFieldTypeString"},{name:"EndTime",alias:"End Time",type:"esriFieldTypeDate"},{name:"EndUTCOffset",alias:"End Time Offset",type:"esriFieldTypeInteger"},{name:"Messages",alias:"Messages",type:"esriFieldTypeString"},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString"},{name:"StartTime",alias:"Start Time",type:"esriFieldTypeDate"},{name:"StartUTCOffset",alias:"Start Time Offset",type:"esriFieldTypeInteger"},{name:"TotalCosts",alias:"Total Costs",type:"esriFieldTypeString"},{name:"TotalLateMinutes",alias:"Total Late Minutes",type:"esriFieldTypeDouble"},{name:"TotalMeters",alias:"Total Meters",type:"esriFieldTypeDouble"},{name:"TotalMinutes",alias:"Total Minutes",type:"esriFieldTypeDouble"},{name:"TotalWaitMinutes",alias:"Total Wait Minutes",type:"esriFieldTypeDouble"},{name:"Version",alias:"Version",type:"esriFieldTypeString"}],(0,s._)([(0,u.MZ)()],h.prototype,"analysisSettings",void 0),(0,s._)([(0,u.MZ)({type:Date})],h.prototype,"endTime",void 0),(0,s._)([(0,d.w)("endTime",["attributes.EndTimeUTC"])],h.prototype,"readEndTime",null),(0,s._)([(0,u.MZ)()],h.prototype,"endTimeOffset",void 0),(0,s._)([(0,d.w)("endTimeOffset",["attributes.EndTime","attributes.EndTimeUTC"])],h.prototype,"readEndTimeOffset",null),(0,s._)([(0,u.MZ)({json:{read:{source:"attributes.FirstStopID"}}})],h.prototype,"firstStopId",void 0),(0,s._)([(0,u.MZ)({type:c.default})],h.prototype,"geometry",void 0),(0,s._)([(0,u.MZ)({json:{read:{source:"attributes.LastStopID"}}})],h.prototype,"lastStopId",void 0),(0,s._)([(0,u.MZ)()],h.prototype,"messages",void 0),(0,s._)([(0,u.MZ)({json:{read:{source:"attributes.Name"}}})],h.prototype,"name",void 0),(0,s._)([(0,u.MZ)({json:{read:{source:"attributes.ObjectID"}}})],h.prototype,"objectId",void 0),(0,s._)([(0,u.MZ)({type:o.default})],h.prototype,"popupTemplate",void 0),(0,s._)([(0,u.MZ)({type:Date})],h.prototype,"startTime",void 0),(0,s._)([(0,d.w)("startTime",["attributes.StartTimeUTC"])],h.prototype,"readStartTime",null),(0,s._)([(0,u.MZ)()],h.prototype,"startTimeOffset",void 0),(0,s._)([(0,d.w)("startTimeOffset",["attributes.StartTime","attributes.StartTimeUTC"])],h.prototype,"readStartTimeOffset",null),(0,s._)([(0,u.MZ)({json:{read:{source:"attributes.StopCount"}}})],h.prototype,"stopCount",void 0),(0,s._)([(0,u.MZ)({types:T.Es})],h.prototype,"symbol",void 0),(0,s._)([(0,u.MZ)()],h.prototype,"totalCosts",void 0),(0,s._)([(0,d.w)("totalCosts",["attributes"])],h.prototype,"readTotalCosts",null),(0,s._)([(0,u.MZ)()],h.prototype,"totalDistance",void 0),(0,s._)([(0,u.MZ)()],h.prototype,"totalDuration",void 0),(0,s._)([(0,u.MZ)()],h.prototype,"totalLateDuration",void 0),(0,s._)([(0,u.MZ)()],h.prototype,"totalViolations",void 0),(0,s._)([(0,d.w)("totalViolations",["attributes"])],h.prototype,"readTotalViolations",null),(0,s._)([(0,u.MZ)()],h.prototype,"totalWait",void 0),(0,s._)([(0,d.w)("totalWait",["attributes"])],h.prototype,"readTotalWait",null),(0,s._)([(0,u.MZ)()],h.prototype,"totalWaitDuration",void 0),(0,s._)([(0,u.MZ)({readOnly:!0,json:{read:!1}})],h.prototype,"type",void 0),(0,s._)([(0,u.MZ)()],h.prototype,"version",void 0),h=r=(0,s._)([(0,m.$)("esri.rest.support.RouteInfo")],h);const f=h},93074:(e,t,i)=>{i.d(t,{$n:()=>M,$r:()=>v,EM:()=>S,Ec:()=>J,JJ:()=>f,Mm:()=>D,OC:()=>k,Sr:()=>m,UO:()=>n,Vj:()=>C,WU:()=>R,Y8:()=>o,Z7:()=>l,_6:()=>A,_H:()=>y,aJ:()=>d,ag:()=>T,cQ:()=>c,dd:()=>w,dn:()=>u,et:()=>U,fe:()=>N,gD:()=>O,hE:()=>p,hY:()=>a,iM:()=>b,mt:()=>g,ow:()=>h,vS:()=>_});var r=i(42761);const s={esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"},a=(0,r.O)()(s),o=(0,r.O)()({...s,esriIntFeet:"international-feet",esriIntInches:"international-inches",esriIntMiles:"international-miles",esriIntNauticalMiles:"international-nautical-miles",esriIntYards:"international-yards"}),n=(0,r.O)()({esriAcres:"international-acres",esriAcresUS:"us-acres",esriAres:"ares",esriHectares:"hectares",esriSquareCentimeters:"square-centimeters",esriSquareDecimeters:"square-decimeters",esriSquareFeet:"square-international-feet",esriSquareFeetUS:"square-us-feet",esriSquareInches:"square-international-inches",esriSquareInchesUS:"square-us-inches",esriSquareKilometers:"square-kilometers",esriSquareMeters:"square-meters",esriSquareMiles:"square-international-miles",esriSquareMilesUS:"square-us-miles",esriSquareMillimeters:"square-millimeters",esriSquareYards:"square-international-yards",esriSquareYardsUS:"square-us-yards",esriUnknownAreaUnits:"unknown"}),l=(0,r.O)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),u=(0,r.O)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards",esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds",esriNAUKilometersPerHour:"kilometers-per-hour",esriNAUMilesPerHour:"miles-per-hour",esriNAUUnknown:"unknown"}),d=(0,r.O)()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),m=(0,r.O)()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"}),c=(0,r.O)()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"}),p=(0,r.O)()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"}),y=(0,r.O)()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),T=(0,r.O)()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"}),h=(0,r.O)()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"}),f=(0,r.O)()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),S=(0,r.O)()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),v=(0,r.O)()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),g=(0,r.O)()({1:"right",2:"left"},{useNumericKeys:!0}),b=(0,r.O)()({0:"restriction",1:"scaled-cost",2:"added-cost"},{useNumericKeys:!0}),N=(0,r.O)()({0:"permit",1:"restrict"},{useNumericKeys:!0}),A=(0,r.O)()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation",1007:"lane"},{useNumericKeys:!0}),O=(0,r.O)()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0}),M=(0,r.O)()({"NA Campus":"campus","NA Desktop":"desktop","NA Navigation":"navigation"}),w=(0,r.O)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters"},{ignoreUnknown:!1}),D=(0,r.O)()({Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),U=(0,r.O)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters",Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),k=(0,r.O)()({"Any Hazmat Prohibited":"any-hazmat-prohibited","Avoid Carpool Roads":"avoid-carpool-roads","Avoid Express Lanes":"avoid-express-lanes","Avoid Ferries":"avoid-ferries","Avoid Gates":"avoid-gates","Avoid Limited Access Roads":"avoid-limited-access-roads","Avoid Private Roads":"avoid-private-roads","Avoid Roads Unsuitable for Pedestrians":"avoid-roads-unsuitable-for-pedestrians","Avoid Stairways":"avoid-stairways","Avoid Toll Roads":"avoid-toll-roads","Avoid Toll Roads for Trucks":"avoid-toll-roads-for-trucks","Avoid Truck Restricted Roads":"avoid-truck-restricted-roads","Avoid Unpaved Roads":"avoid-unpaved-roads","Axle Count Restriction":"axle-count-restriction","Driving a Bus":"driving-a-bus","Driving a Taxi":"driving-a-taxi","Driving a Truck":"driving-a-truck","Driving an Automobile":"driving-an-automobile","Driving an Emergency Vehicle":"driving-an-emergency-vehicle","Height Restriction":"height-restriction","Kingpin to Rear Axle Length Restriction":"kingpin-to-rear-axle-length-restriction","Length Restriction":"length-restriction","Preferred for Pedestrians":"preferred-for-pedestrians","Riding a Motorcycle":"riding-a-motorcycle","Roads Under Construction Prohibited":"roads-under-construction-prohibited","Semi or Tractor with One or More Trailers Prohibited":"semi-or-tractor-with-one-or-more-trailers-prohibited","Single Axle Vehicles Prohibited":"single-axle-vehicles-prohibited","Tandem Axle Vehicles Prohibited":"tandem-axle-vehicles-prohibited","Through Traffic Prohibited":"through-traffic-prohibited","Truck with Trailers Restriction":"truck-with-trailers-restriction","Use Preferred Hazmat Routes":"use-preferred-hazmat-routes","Use Preferred Truck Routes":"use-preferred-truck-routes",Walking:"walking","Weight Restriction":"weight-restriction"},{ignoreUnknown:!1}),_=(0,r.O)()({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),C=(0,r.O)()({esriGeometryPoint:"point",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"envelope",esriGeometryMultipoint:"multipoint"}),R=(0,r.O)()({esriNAUTCost:"cost",esriNAUTDescriptor:"descriptor",esriNAUTRestriction:"restriction",esriNAUTHierarchy:"hierarchy"}),J=(0,r.O)()({esriDSTAltName:"alt-name",esriDSTArrive:"arrive",esriDSTBranch:"branch",esriDSTCrossStreet:"cross-street",esriDSTCumulativeLength:"cumulative-length",esriDSTDepart:"depart",esriDSTEstimatedArrivalTime:"estimated-arrival-time",esriDSTExit:"exit",esriDSTGeneral:"general",esriDSTLength:"length",esriDSTServiceTime:"service-time",esriDSTStreetName:"street-name",esriDSTSummary:"summary",esriDSTTime:"time",esriDSTTimeWindow:"time-window",esriDSTToward:"toward",esriDSTViolationTime:"violation-time",esriDSTWaitTime:"wait-time"})}}]);