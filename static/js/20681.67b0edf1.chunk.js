"use strict";(self.webpackChunkever_wading_birds=self.webpackChunkever_wading_birds||[]).push([[1888,20681,73848,84766],{1888:(e,t,i)=>{i.r(t),i.d(t,{default:()=>v});var o,n=i(93800),r=i(42761),s=i(19455),a=i(82301),u=i(48602),l=i(32980),p=i(14800),c=i(75269),y=i(15484),d=i(80556),m=i(75400),w=i(73848),h=i(84766);const M=(0,r.O)()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),_=(0,r.O)()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});let f=o=class extends s.A{constructor(e){super(e),this.ascending=!0,this.itemRasterFunction=null,this.lockRasterIds=null,this.method="none",this.multidimensionalDefinition=null,this.objectIds=null,this.operation="first",this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(e,t){return null!=t.ascending?t.ascending:null==t.sortAscending||t.sortAscending}readMethod(e,t){return function(e){let t;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":t="esriMosaicAttribute";break;case"lockraster":t="esriMosaicLockRaster";break;case"center":t="esriMosaicCenter";break;case"northwest":t="esriMosaicNorthwest";break;case"nadir":t="esriMosaicNadir";break;case"viewpoint":t="esriMosaicViewpoint";break;case"seamline":t="esriMosaicSeamline";break;default:t="esriMosaicNone"}return _.fromJSON(t)}(t.mosaicMethod||t.defaultMosaicMethod)}writeMultidimensionalDefinition(e,t,i){null!=e&&(e=e.filter((e=>{let{variableName:t,dimensionName:i}=e;return t&&"*"!==t||i}))).length&&(t[i]=e.map((e=>e.toJSON())))}readOperation(e,t){const i=t.mosaicOperation,o=t.mosaicOperator?.toLowerCase(),n=i||(o?M.toJSON(o):null);return M.fromJSON(n)||"first"}castSortValue(e){return null==e||"string"==typeof e||"number"==typeof e?e:`${e}`}clone(){return new o({ascending:this.ascending,itemRasterFunction:(0,a.clone)(this.itemRasterFunction),lockRasterIds:(0,a.clone)(this.lockRasterIds),method:this.method,multidimensionalDefinition:(0,a.clone)(this.multidimensionalDefinition),objectIds:(0,a.clone)(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:(0,a.clone)(this.viewpoint),where:this.where})}};(0,n._)([(0,u.MZ)({type:Boolean,json:{write:!0}})],f.prototype,"ascending",void 0),(0,n._)([(0,p.w)("ascending",["ascending","sortAscending"])],f.prototype,"readAscending",null),(0,n._)([(0,u.MZ)({type:h.default,json:{name:"itemRenderingRule",write:!0}})],f.prototype,"itemRasterFunction",void 0),(0,n._)([(0,u.MZ)({type:[d.jz],json:{write:{overridePolicy(){return{enabled:"lock-raster"===this.method}}}}})],f.prototype,"lockRasterIds",void 0),(0,n._)([(0,u.MZ)({type:_.apiValues,json:{type:_.jsonValues,write:{target:"mosaicMethod",writer:_.write,isRequired:!0}}})],f.prototype,"method",void 0),(0,n._)([(0,p.w)("method",["mosaicMethod","defaultMosaicMethod"])],f.prototype,"readMethod",null),(0,n._)([(0,u.MZ)({type:[w.default],json:{write:!0}})],f.prototype,"multidimensionalDefinition",void 0),(0,n._)([(0,y.K)("multidimensionalDefinition")],f.prototype,"writeMultidimensionalDefinition",null),(0,n._)([(0,u.MZ)({type:[d.jz],json:{name:"fids",write:!0}})],f.prototype,"objectIds",void 0),(0,n._)([(0,u.MZ)({type:M.apiValues,json:{type:M.jsonValues,read:{reader:M.read},write:{target:"mosaicOperation",writer:M.write}}})],f.prototype,"operation",void 0),(0,n._)([(0,p.w)("operation",["mosaicOperation","mosaicOperator"])],f.prototype,"readOperation",null),(0,n._)([(0,u.MZ)({type:String,json:{write:{overridePolicy(){return{enabled:"attribute"===this.method}}}}})],f.prototype,"sortField",void 0),(0,n._)([(0,u.MZ)({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:"attribute"===this.method,allowNull:!0}}}}})],f.prototype,"sortValue",void 0),(0,n._)([(0,l.w)("sortValue")],f.prototype,"castSortValue",null),(0,n._)([(0,u.MZ)({type:m.default,json:{write:!0}})],f.prototype,"viewpoint",void 0),(0,n._)([(0,u.MZ)({type:String,json:{write:!0}})],f.prototype,"where",void 0),f=o=(0,n._)([(0,c.$)("esri.layers.support.MosaicRule")],f);const v=f},20681:(e,t,i)=>{i.r(t),i.d(t,{default:()=>M});var o,n=i(93800),r=i(19455),s=i(82301),a=i(48602),u=(i(21265),i(50925),i(75269)),l=i(15484),p=i(75400),c=i(78629),y=i(54723),d=i(1888),m=i(84766),w=i(32474);let h=o=class extends r.A{constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,c.getJsonType)(e),t[i]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;t?.mosaicMethod&&(t=d.default.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(e,t,i){null!=e&&(t[i]=JSON.stringify(e.toJSON()))}set rasterFunction(e){let t=e;t?.rasterFunction&&(t=m.default.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}writeRasterFunction(e,t,i){null!=e&&(t[i]=JSON.stringify(e.toJSON())),e.rasterFunctionDefinition&&(t[i]=JSON.stringify(e.rasterFunctionDefinition))}writeRasterFunctions(e,t,i){null!=e&&(t[i]=JSON.stringify(e.map((e=>e.rasterFunctionDefinition||e.toJSON()))))}writePixelSize(e,t,i){null!=e&&(t[i]=JSON.stringify(e))}writeTimeExtent(e,t,i){if(null!=e){const o=null!=e.start?e.start.getTime():null,n=null!=e.end?e.end.getTime():null;t[i]=null!=o?null!=n?`${o},${n}`:`${o}`:null}}clone(){return new o((0,s.clone)({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};(0,n._)([(0,a.MZ)({types:y.yR,json:{write:!0}})],h.prototype,"geometry",void 0),(0,n._)([(0,l.K)("geometry")],h.prototype,"writeGeometry",null),(0,n._)([(0,a.MZ)({type:d.default,json:{write:!0}})],h.prototype,"mosaicRule",null),(0,n._)([(0,l.K)("mosaicRule")],h.prototype,"writeMosaicRule",null),(0,n._)([(0,a.MZ)({type:m.default,json:{write:!0,name:"renderingRule"}})],h.prototype,"rasterFunction",null),(0,n._)([(0,l.K)("rasterFunction")],h.prototype,"writeRasterFunction",null),(0,n._)([(0,a.MZ)({type:[m.default],json:{write:!0,name:"renderingRules"}})],h.prototype,"rasterFunctions",void 0),(0,n._)([(0,l.K)("rasterFunctions")],h.prototype,"writeRasterFunctions",null),(0,n._)([(0,a.MZ)({type:p.default,json:{write:!0}})],h.prototype,"pixelSize",void 0),(0,n._)([(0,l.K)("pixelSize")],h.prototype,"writePixelSize",null),(0,n._)([(0,a.MZ)({type:Boolean,json:{write:!0}})],h.prototype,"returnGeometry",void 0),(0,n._)([(0,a.MZ)({type:Boolean,json:{write:!0}})],h.prototype,"returnCatalogItems",void 0),(0,n._)([(0,a.MZ)({type:Boolean,json:{write:!0}})],h.prototype,"returnPixelValues",void 0),(0,n._)([(0,a.MZ)({type:Number,json:{write:!0}})],h.prototype,"maxItemCount",void 0),(0,n._)([(0,a.MZ)({type:w.default,json:{write:{target:"time"}}})],h.prototype,"timeExtent",void 0),(0,n._)([(0,l.K)("timeExtent")],h.prototype,"writeTimeExtent",null),(0,n._)([(0,a.MZ)({json:{write:!0}})],h.prototype,"raster",void 0),(0,n._)([(0,a.MZ)({json:{write:!0}})],h.prototype,"viewId",void 0),(0,n._)([(0,a.MZ)({type:Boolean,json:{write:!0}})],h.prototype,"processAsMultidimensional",void 0),h=o=(0,n._)([(0,u.$)("esri.rest.support.ImageIdentifyParameters")],h);const M=h},24889:(e,t,i)=>{i.d(t,{SZ:()=>n,e8:()=>s,hm:()=>r});var o=i(42761);const n=(0,o.O)()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),r=(0,o.O)()({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"}),s=(0,o.O)()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"})},73848:(e,t,i)=>{i.r(t),i.d(t,{default:()=>c});var o,n=i(93800),r=i(19455),s=i(82301),a=i(48602),u=i(80556),l=i(75269);let p=o=class extends r.A{constructor(e){super(e),this.variableName=null,this.dimensionName=null,this.values=[],this.isSlice=!1}clone(){return new o({variableName:this.variableName,dimensionName:this.dimensionName,values:(0,s.clone)(this.values),isSlice:this.isSlice})}};(0,n._)([(0,a.MZ)({type:String,json:{write:!0}})],p.prototype,"variableName",void 0),(0,n._)([(0,a.MZ)({type:String,json:{write:!0}})],p.prototype,"dimensionName",void 0),(0,n._)([(0,a.MZ)({type:u.gK.array(u.gK.oneOf([u.gK.native(Number),u.gK.array(u.gK.native(Number))])),json:{write:!0}})],p.prototype,"values",void 0),(0,n._)([(0,a.MZ)({type:Boolean,json:{write:!0}})],p.prototype,"isSlice",void 0),p=o=(0,n._)([(0,l.$)("esri.layers.support.DimensionalDefinition")],p);const c=p},84766:(e,t,i)=>{i.r(t),i.d(t,{default:()=>C});var o=i(93800),n=i(19455),r=i(82301),s=i(48602),a=(i(21265),i(50925),i(47332)),u=i(14800),l=i(75269),p=i(15484),c=i(42761),y=i(80556),d=(i(14746),i(24889));let m=class extends n.A{constructor(){super(...arguments),this.pixelType="unknown"}};(0,o._)([(0,s.MZ)({type:String,json:{write:{isRequired:!0}}})],m.prototype,"name",void 0),(0,o._)([(0,s.MZ)({type:String,json:{write:!0}})],m.prototype,"description",void 0),(0,o._)([(0,s.MZ)({type:y.jz,json:{type:y.jz,write:!0,name:"_object_id"}})],m.prototype,"id",void 0),(0,o._)([(0,s.MZ)({type:String,json:{type:d.e8.jsonValues,read:d.e8.read,write:{writer:d.e8.write,isRequired:!0}}})],m.prototype,"pixelType",void 0),(0,o._)([(0,s.MZ)({type:String,json:{write:{isRequired:!0}}})],m.prototype,"type",void 0),m=(0,o._)([(0,l.$)("esri.layers.support.RasterFunctionInfo")],m);const w=m;let h=class extends n.A{constructor(){super(...arguments),this.isDataset=!1,this.isPublic=!1,this.type="RasterFunctionVariable"}};(0,o._)([(0,s.MZ)({type:String,json:{write:!0}})],h.prototype,"name",void 0),(0,o._)([(0,s.MZ)({type:Number,json:{type:y.jz,write:!0,name:"_object_id"}})],h.prototype,"id",void 0),(0,o._)([(0,s.MZ)({type:Boolean,json:{write:!0}})],h.prototype,"isDataset",void 0),(0,o._)([(0,s.MZ)({type:Boolean,json:{write:!0}})],h.prototype,"isPublic",void 0),(0,o._)([(0,s.MZ)({json:{write:!0}})],h.prototype,"value",void 0),(0,o._)([(0,s.MZ)({type:String,json:{write:!0}})],h.prototype,"type",void 0),h=(0,o._)([(0,l.$)("esri.layers.support.RasterFunctionVariable")],h);const M={key:"type",base:null,typeMap:{RasterFunctionVariable:h}};let _=class extends n.A{};(0,o._)([(0,s.MZ)({types:M,json:{types:M,name:"MatchVariable"}})],_.prototype,"matchVariable",void 0),(0,o._)([(0,s.MZ)({types:M,json:{types:M,name:"UnionDimension"}})],_.prototype,"unionDimension",void 0),(0,o._)([(0,s.MZ)({type:Number,json:{type:y.jz,write:!0,name:"_object_id"}})],_.prototype,"id",void 0),(0,o._)([(0,s.MZ)({type:String,json:{write:!0}})],_.prototype,"type",void 0),_=(0,o._)([(0,l.$)("esri.layers.support.RasterFunctionProperties")],_);const f=_,v=new c.J({0:"mosaic",1:"item",2:"item-group"},{useNumericKeys:!0});let g=class extends n.A{constructor(){super(...arguments),this.description="",this.functionType="mosaic",this.type="RasterFunctionTemplate"}};(0,o._)([(0,s.MZ)({type:[String],json:{write:!0}})],g.prototype,"aliases",void 0),(0,o._)([(0,s.MZ)({type:Object,json:{write:{isRequired:!0}}})],g.prototype,"arguments",void 0),(0,o._)([(0,s.MZ)({type:String,json:{write:{isRequired:!0}}})],g.prototype,"description",void 0),(0,o._)([(0,s.MZ)({type:w,json:{write:{isRequired:!0},name:"function"}})],g.prototype,"functionInfo",void 0),(0,o._)([(0,s.MZ)({type:v.apiValues,json:{type:[0,1,2],read:v.read,write:{writer:v.write,isRequired:!0}}})],g.prototype,"functionType",void 0),(0,o._)([(0,s.MZ)({type:String,json:{write:!0}})],g.prototype,"group",void 0),(0,o._)([(0,s.MZ)({type:String,json:{write:!0}})],g.prototype,"help",void 0),(0,o._)([(0,s.MZ)({type:Number,json:{type:y.jz,write:!0,name:"_object_id"}})],g.prototype,"id",void 0),(0,o._)([(0,s.MZ)({type:String,json:{write:{isRequired:!0}}})],g.prototype,"name",void 0),(0,o._)([(0,s.MZ)({type:String,json:{write:!0,name:"definition"}})],g.prototype,"queryDefinition",void 0),(0,o._)([(0,s.MZ)({type:String,json:{write:!0}})],g.prototype,"tag",void 0),(0,o._)([(0,s.MZ)({type:f,json:{write:!0}})],g.prototype,"properties",void 0),(0,o._)([(0,s.MZ)({type:String,json:{write:!0}})],g.prototype,"thumbnail",void 0),(0,o._)([(0,s.MZ)({type:String,json:{write:!0}})],g.prototype,"thumbnailEx",void 0),(0,o._)([(0,s.MZ)({json:{type:["RasterFunctionTemplate"],write:!0}})],g.prototype,"type",void 0),g=(0,o._)([(0,l.$)("esri.layers.support.RasterFunctionTemplate")],g);const j=g;var S;const N=new Set(["raster","raster2","dem","fillraster"]),F=new Set(["rasters"]),b=e=>e?.rasterFunction?D.fromJSON(e):e,Z=e=>e&&e instanceof D?e.toJSON():e,R=e=>e?.functionName&&!e.declaredClass,A=e=>R(e)?new D(e):e,O=e=>e?j.fromJSON({type:"RasterFunctionTemplate",...e}):void 0,x={types:{key:"type",base:null,typeMap:{RasterFunctionTemplate:j}},json:{write:!0,name:"rasterFunctionDefinition",read:O}};let D=S=class extends n.A{constructor(e){super(e),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.functionDefinition=null}set functionArguments(e){if(e){const t=Object.keys(e);if(t.some((t=>N.has(t.toLowerCase())&&R(e[t])))||t.some((t=>F.has(t.toLowerCase())&&Array.isArray(e[t])&&e[t].some((e=>R(e)))))){e=(0,r.clone)(e);for(const i of t)N.has(i.toLowerCase())?e[i]=A(e[i]):F.has(i.toLowerCase())&&Array.isArray(e[i])&&(e[i]=e[i].map((e=>A(e))))}}this._set("functionArguments",e)}readFunctionArguments(e){return(e=>{if(null==e)return null;e=(0,r.clone)(e);const t={};for(const i of Object.keys(e))N.has(i.toLowerCase())?t[i]=b(e[i]):F.has(i.toLowerCase())&&Array.isArray(e[i])?t[i]=e[i].map(b):t[i]=e[i];return t})(e)}writeFunctionArguments(e,t,i){const o={};for(const n of Object.keys(e))N.has(n.toLowerCase())?o[n]=Z(e[n]):F.has(n.toLowerCase())&&Array.isArray(e[n])?o[n]=e[n].map(Z):o[n]=Z(e[n]);t[i]=o}readFunctionName(e,t){const i=t.rasterFunctionInfos;return t.name||(i?.length&&"None"!==i[0].name?i[0].name:t.rasterFunction||t.rasterFunctionDefinition?.name)}get rasterFunctionDefinition(){return this.functionDefinition?.toJSON()}set rasterFunctionDefinition(e){this.functionDefinition=O(e)}get hasClipFunction(){return this.rasterFunctionDefinition?JSON.stringify(this.rasterFunctionDefinition).includes('"type":"ClipFunction"'):JSON.stringify(this).includes('"rasterFunction":"Clip"')}clone(){return new S({functionName:this.functionName,functionArguments:(0,r.clone)(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,rasterFunctionDefinition:(0,r.clone)(this.rasterFunctionDefinition)})}};(0,o._)([(0,s.MZ)({json:{type:Object,name:"rasterFunctionArguments"}})],D.prototype,"functionArguments",null),(0,o._)([(0,u.w)("functionArguments")],D.prototype,"readFunctionArguments",null),(0,o._)([(0,p.K)("functionArguments")],D.prototype,"writeFunctionArguments",null),(0,o._)([(0,s.MZ)({json:{type:String,write:{target:"rasterFunction"}}})],D.prototype,"functionName",void 0),(0,o._)([(0,u.w)("functionName",["rasterFunction","rasterFunctionInfos","rasterFunctionDefinition"])],D.prototype,"readFunctionName",null),(0,o._)([(0,a.e)({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1,default:"unknown"})],D.prototype,"outputPixelType",void 0),(0,o._)([(0,s.MZ)({type:String,json:{read:!0,write:!0}})],D.prototype,"variableName",void 0),(0,o._)([(0,s.MZ)()],D.prototype,"rasterFunctionDefinition",null),(0,o._)([(0,s.MZ)(x)],D.prototype,"functionDefinition",void 0),(0,o._)([(0,s.MZ)()],D.prototype,"hasClipFunction",null),D=S=(0,o._)([(0,l.$)("esri.layers.support.RasterFunction")],D);const C=D}}]);