"use strict";(self.webpackChunkever_wading_birds=self.webpackChunkever_wading_birds||[]).push([[65231,75258],{9513:(t,e,n)=>{n.d(e,{a:()=>i,y:()=>p});n(21265);var s=n(42761),r=n(61531),o=n(84058);const i=new s.J({1:"min",2:"max",3:"mean",4:"stddev",5:"median",6:"majority",7:"minority"},{useNumericKeys:!0});function a(t,e){const{fillNoDataOnly:n}=e,{band:s,width:r,height:o,mask:i,outBand:a}=t;if(n&&!i)return void a.set(s);const{statisticsType:l,kernelRows:u,kernelCols:c}=e,p="stddev"===l,h=r*o,m=new Float64Array(h),d=new Float64Array(h),f=new Uint32Array(h);for(let _=0;_<o;_++){const t=_*r;let e=0,n=0,o=0;for(let r=0;r<c;r++)i&&!i[t+r]||(e+=s[t+r],p&&(n+=s[t+r]**2),o++);m[t]=e,d[t]=n,f[t]=o;for(let a=1;a<=r-c;a++){const r=t+a-1,l=r+c;i?(i[r]&&(o--,e-=s[r],p&&(n-=s[r]**2)),i[l]&&(o++,e+=s[l],p&&(n+=s[l]**2))):(e-=s[r],e+=s[l],p&&(n-=s[r]**2,n+=s[l]**2)),m[t+a]=e,f[t+a]=o,p&&(d[t+a]=n)}}const g=new Float64Array(h),y=new Float64Array(h),x=new Uint32Array(h),v=u*r;for(let _=0;_<=r-c;_++){let t=0,e=0,n=0;for(let s=0;s<u;s++){const o=s*r+_;t+=m[o],n+=f[o],p&&(e+=d[o])}g[_]=t,y[_]=e,x[_]=n;for(let s=1;s<=o-u;s++){const o=(s-1)*r+_,i=o+v;t-=m[o],t+=m[i],n-=f[o],n+=f[i],p&&(e-=d[o],e+=d[i]),g[s*r+_]=t,y[s*r+_]=e,x[s*r+_]=n}}const w=Math.floor(u/2),b=Math.floor(c/2);for(let _=w;_<o-w;_++){const t=_*r;for(let e=b;e<r-b;e++){const s=(_-w)*r+e-b,o=x[s];if(0===o||n&&(!i||i[t+e]))continue;const l=g[s]/o,u=p?Math.sqrt((y[s]-g[s]*l)/o):l;a[t+e]=u,i&&(i[t+e]=255)}}}function l(t,e){const{fillNoDataOnly:n}=e,{band:s,width:r,height:o,mask:i,outBand:a}=t;if(n&&!i)return void a.set(s);const{kernelRows:l,kernelCols:u,statisticsType:c}=e,p=Math.floor(l/2),h=Math.floor(u/2),m="min"===c,d=a.slice(),f=new Uint32Array(r*o);for(let g=p;g<o-p;g++){const t=g*r;for(let e=h;e<r-h;e++){let n=m?Number.MAX_VALUE:-Number.MAX_VALUE,o=0;for(let a=0;a<l;a++)for(let l=0;l<u;l++){const u=t+e+(a-p)*r+l-h;i&&!i[u]||(n=m?Math.min(n,s[u]):Math.max(n,s[u]),o++)}i?(d[t+e]=0===o?0:n,f[t+e]=o):a[t+e]=0===o?0:n}}if(i)for(let g=p;g<o-p;g++){const t=g*r;for(let e=h;e<r-h;e++)if(f[t+e]){if(n&&i[t+e])continue;a[t+e]=d[t+e],i[t+e]=255}}}function u(t,e){const{fillNoDataOnly:n}=e,{band:s,width:r,height:o,mask:i,outBand:a}=t;if(n&&!i)return void a.set(s);const{kernelRows:l,kernelCols:u}=e,c=Math.floor(l/2),p=Math.floor(u/2),h=a.slice(),m=new Uint32Array(r*o);for(let d=c;d<o-c;d++){const t=d*r;for(let e=p;e<r-p;e++){if(n&&i?.[t+e])continue;const o=[];for(let n=0;n<l;n++)for(let a=0;a<u;a++){const l=t+e+(n-c)*r+a-p;i&&!i[l]||o.push(s[l])}o.length&&(o.sort(((t,e)=>t-e)),i?(h[t+e]=o[Math.floor((o.length-1)/2)],m[t+e]=o.length):a[t+e]=o[Math.floor((o.length-1)/2)])}}if(i)for(let d=c;d<o-c;d++){const t=d*r;for(let e=p;e<r-p;e++)if(m[t+e]){if(n&&i[t+e])continue;a[t+e]=h[t+e],i[t+e]=255}}}function c(t,e){const{fillNoDataOnly:n}=e,{band:s,width:r,height:o,mask:i,outBand:a}=t;if(n&&!i)return void a.set(s);const{kernelRows:l,kernelCols:u}=e,c=Math.floor(l/2),p=Math.floor(u/2),h="majority"===e.statisticsType,m=l*u,d=a.slice(),f=new Uint32Array(r*o);for(let g=c;g<o-c;g++){const t=g*r;for(let e=p;e<r-p;e++){if(n&&i?.[t+e])continue;const o=new Map;for(let n=0;n<l;n++)for(let a=0;a<u;a++){const l=t+e+(n-c)*r+a-p;if(i&&!i[l])continue;const u=s[l];o.set(u,o.has(u)?o.get(u)+1:1)}if(0===o.size)continue;let g=0,y=0,x=h?0:m+1;for(const t of o.keys())y=o.get(t),h===y>x&&(x=y,g=t);i?(d[t+e]=g,f[t+e]=o.size):a[t+e]=g}}if(i)for(let g=c;g<o-c;g++){const t=g*r;for(let e=p;e<r-p;e++)if(f[t+e]){if(n&&i[t+e])continue;a[t+e]=d[t+e],i[t+e]=255}}}function p(t,e){const{mask:n}=t,{fillNoDataOnly:s}=e;if(s&&!n)return t;const{pixels:i,width:p,height:h,bandMasks:m,pixelType:d}=t,f=i.length,g=p*h,y=[],{kernelRows:x,kernelCols:v,statisticsType:w,mirrorEdges:b}=e;if(s&&!n)return t;const _=e.outputPixelType??d,A=[];for(let P=0;P<f;P++){const t=i[P],d=r.default.createEmptyBand(_,g);s&&d.set(t);const f=m?.[P]??n,T=f?.slice()??null,M={band:t,width:p,height:h,mask:T,outBand:d};switch(w){case"min":case"max":l(M,e);break;case"mean":case"stddev":a(M,e);break;case"median":u(M,e);break;case"majority":case"minority":c(M,e)}b&&!s&&(0,o.e)(d,p,h,x,v),y.push(d),T&&A.push(T)}let T=A[0]??n;A.length!==f&&(A.length=0),f>1&&m?.length&&(T=r.default.combineBandMasks(m));const M=new r.default({pixelType:_,width:p,height:h,pixels:y,bandMasks:m&&A.length?A:null,mask:T});return M.updateStatistics(),M}},61345:(t,e,n)=>{n.d(e,{UY:()=>i,_z:()=>l,z5:()=>a});n(21265);var s=n(42761),r=n(61531),o=n(82518);const i=new s.J({0:"difference",1:"relative-difference",2:"categorical",3:"euclidean-distance",4:"angle-difference",5:"band-with-most-change"},{useNumericKeys:!0}),a=new s.J({0:"all",1:"changed",2:"unchanged"},{useNumericKeys:!0});function l(t,e,n,s){const[i,a]=t,l=(0,o.zw)(n)&&!(0,o.zw)(i.pixelType)&&!(0,o.zw)(a.pixelType),u=[i.mask,a.mask].filter((t=>t)),c=r.default.combineBandMasks(u),p=t.map((t=>t.pixels[0])),{width:h,height:m}=i,d=r.default.createEmptyBand(n,h*m);switch(e){case"difference":case"relative-difference":!function(t){const{bands:[e,n],mask:s,isRelative:r,isRoundingNeeded:o,outBand:i}=t,a=e.length;for(let l=0;l<a;l++)if(!s||s[l]){let t=e[l]-n[l];if(r){const s=Math.max(Math.abs(e[l])-Math.abs(n[l]));t=s>0?t/s:0}i[l]=o?Math.round(t):t}}({bands:p,mask:c,outBand:d,isRoundingNeeded:l,isRelative:"relative-difference"===e});break;case"categorical":!function(t){const{bands:[e,n],categoryIndexLookups:[s,r],classNames:[o,i],mask:a,keepMethod:l,outBand:u}=t,c=e.length,p=o.length,h=i.length,m=p*h,d=m+1,f=m+2;for(let g=0;g<c;g++)if(!a||a[g]){const t=e[g],a=n[g],c=s[t],p=r[a],y=o[c],x=i[p];u[g]=null==c||null==p?m:"changed"===l&&y===x?d:"unchanged"===l&&y!==x?f:c*h+p}}({bands:p,mask:c,outBand:d,...s});break;case"euclidean-distance":!function(t){const{pixels:[e,n],mask:s,outBand:r}=t,o=e[0].length,i=e.length;for(let a=0;a<o;a++)if(!s||s[a]){let t=0;for(let s=0;s<i;s++){const r=e[s][a]-n[s][a];t+=r*r}r[a]=Math.sqrt(t)}}({pixels:t.map((t=>t.pixels)),mask:c,outBand:d});break;case"angle-difference":!function(t){const{pixels:[e,n],mask:s,outBand:r}=t,o=e[0].length,i=e.length;for(let a=0;a<o;a++)if(!s||s[a]){let t=0,s=0,o=0;for(let r=0;r<i;r++){const i=e[r][a],l=n[r][a];t+=i*l,s+=i*i,o+=l*l}const l=Math.sqrt(s*o);r[a]=l?Math.acos(t/l):1.5707963267948966}}({pixels:t.map((t=>t.pixels)),mask:c,outBand:d});break;case"band-with-most-change":!function(t){const{pixels:[e,n],mask:s,outBand:r}=t,o=e[0].length,i=e.length;for(let a=0;a<o;a++)if(!s||s[a]){let t=0,s=0;for(let r=0;r<i;r++){const o=Math.abs(e[r][a]-n[r][a]);o>t&&(t=o,s=r)}r[a]=s}}({pixels:t.map((t=>t.pixels)),mask:c,outBand:d})}const f=new r.default({width:h,height:m,pixels:[d],pixelType:n,mask:c});return f.updateStatistics(),f}},65231:(t,e,n)=>{n.d(e,{vt:()=>Cs,UD:()=>Bs});var s=n(2925),r=n(74719),o=n(82301),i=n(93800),a=n(48602),l=(n(21265),n(50925),n(14746),n(75269)),u=n(82518),c=n(19455);let p=class extends c.A{constructor(){super(...arguments),this.raster=void 0}};(0,i._)([(0,a.MZ)({json:{write:!0}})],p.prototype,"raster",void 0),p=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.BaseFunctionArguments")],p);const h=p;var m;let d=m=class extends h{constructor(){super(...arguments),this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new m({raster:this.raster,raster2:this.raster2,operation:this.operation})}};(0,i._)([(0,a.MZ)({json:{write:!0}})],d.prototype,"operation",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],d.prototype,"raster2",void 0),(0,i._)([(0,a.MZ)({readOnly:!0})],d.prototype,"rasters",null),d=m=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.ArithmeticFunctionArguments")],d);const f=d;var g=n(32980),y=n(61531),x=n(4463);const v=new Set(["slope","aspect","curvature","hillshade","shadedrelief","statistics"]);let w=class extends c.A{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.rawSourceRasterInfos=null,this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){const t=this.getWebGLProcessorDefinition();if(!t)return null;const e=[t],{parameters:n}=t;let s=n.rasters||n.raster&&[n.raster];for(;s?.length;){e.unshift(...s);const t=[];for(let e=0;e<s.length;e++){const{parameters:n}=s[e],r=n.rasters||n.raster&&[n.raster];r?.length&&t.push(...r)}s=t}for(let a=e.length-1;a>=0;a--)e[a].isNoopProcess&&e.splice(a,1);let r=!1;for(let a=0;a<e.length;a++){const t=e[a];t.id=e.length-a-1;const{rasters:n}=t.parameters;r=r||null!=n&&n.length>1}const o=e.some((t=>{let{name:e}=t;return v.has(e.toLowerCase())})),{rawSourceRasterInfos:i}=this;return{functions:e,hasBranches:r,hasFocalFunction:o,isSourceSingleBand:1===i?.[0]?.bandCount}}bind(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;this.id=n+1;const s=this._getRasterValues();let r=!0;for(let o=0;o<s.length;o++){const n=s[o];if(null!=n&&this._isRasterFunctionValue(n)){const s=n.bind(t,e,this.id+o);if(!s.success)return this._bindingResult=s,s;r=r&&s.supportsGPU}}return!this.rasterInfo||e?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.success&&this._patchRasterInfo(),this._bindingResult.supportsGPU=r&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const e=this._getRasterValues(),n=0===e.length?t.pixelBlocks??t.primaryPixelBlocks:e.map((e=>this._readRasterValue(e,t)));return this._processPixels({...t,pixelBlocks:n})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let e;if(t.length>1){const e=t.map((t=>t.processInputBandIds()[0]));this.rawInputBandIds=e,this.isInputBandIdsSwizzled=this.rawInputBandIds.some(((t,e)=>t!==e));const n=t.filter((t=>"ExtractBand"===t.functionName));return n.length&&n.forEach(((t,e)=>{t.isInputBandIdsSwizzled=!0,t.swizzledBandSelection=[e,e,e]})),this.rawInputBandIds}const n=t[0];if(n){if(e=n.processInputBandIds(),n.isInputBandIdsSwizzled)return this.rawInputBandIds=e,e}else{e=[];const{bandCount:t}=this.sourceRasterInfos[0];for(let n=0;n<t;n++)e.push(n)}const s=this._getInputBandIds(e);return this.isInputBandIdsSwizzled=s.some(((t,e)=>t!==e)),this.rawInputBandIds=s,this.rawInputBandIds}getPrimaryRasters(){const t=[],e=[];return this._getPrimaryRasters(this,t,e),{rasters:t,rasterIds:e}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:e,rasters:n}=this.functionArguments;return n&&Array.isArray(n)&&n.length?(t.rasters=n.map((t=>this._isRasterFunctionValue(t)?t.getWebGLProcessorDefinition():"number"==typeof t?{name:"Constant",parameters:{value:t},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:t},pixelType:"f32",id:-1,isNoopProcess:!1})),t.rasters.some((t=>null!=t))||(t.rasters=null)):this._isRasterFunctionValue(e)&&(t.raster=e.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}getClippingGeometries(){const t=[];"Clip"===this.functionName&&t.push(this.functionArguments);const{raster:e,rasters:n}=this.functionArguments;if(n&&Array.isArray(n)&&n.length)n.forEach((e=>{if(this._isRasterFunctionValue(e)){const n=e.getClippingGeometries();t.push(...n)}}));else if(this._isRasterFunctionValue(e)){const n=e.getClippingGeometries();t.push(...n)}return t}_getOutputPixelType(t){return"unknown"===this.outputPixelType?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_removeStatsHistColormapVAT(t){t.statistics=null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.multidimensionalInfo?.variables.forEach((t=>{t.statistics=void 0,t.histograms=void 0}))}_getRasterValues(){const{rasterArgumentNames:t}=this;return"rasters"===t[0]?this.functionArguments.rasters??[]:t.flatMap((t=>this.functionArguments[t]))}_getSourceRasterInfos(t){const e=this._getRasterValues(),{rasterInfos:n,rasterIds:s}=t;if(0===e.length)return n;const r=e.map((t=>t&&"object"==typeof t&&"bind"in t&&t.rasterInfo?t.rasterInfo:"string"==typeof t&&s.includes(t)?n[s.indexOf(t)]:"number"!=typeof t?n[0]:void 0)),o=r.find((t=>t))??n[0];return r.forEach(((t,e)=>{void 0===t&&(r[e]=o)})),r}_getPrimaryRasterId(t){return t?.rasterId}_getPrimaryRasters(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];for(let s=0;s<t.sourceRasters.length;s++){const r=t.sourceRasters[s];if("number"!=typeof r)if("bind"in r)this._getPrimaryRasters(r,e,n);else{const t=r,s=this._getPrimaryRasterId(t);if(null==s)continue;n.includes(s)||(this.mainPrimaryRasterId===s?(e.unshift(t),n.unshift(s)):(e.push(t),n.push(s)))}}}_isRasterFunctionValue(t){return null!=t&&"object"==typeof t&&"getWebGLProcessorDefinition"in t}_readRasterValue(t,e){const{primaryPixelBlocks:n}=e;if(null==t||"$$"===t){const t=n[0];return null==t?null:t.clone()}if("string"==typeof t){const s=e.primaryRasterIds.indexOf(t);return-1===s?null:n[s]}if("number"==typeof t){const e=n[0];if(null==e)return null;const{width:s,height:r,pixelType:o}=e,i=new Float32Array(s*r);i.fill(t);const a=this.sourceRasterInfos[0].bandCount,l=new Array(a).fill(i);return new y.default({width:s,height:r,pixelType:o,pixels:l})}return t.process(e)}_patchRasterInfo(){const{rasterInfo:t}=this;if(!t?.keyProperties)return;const{bandCount:e,keyProperties:n,statistics:s,histograms:r}=t,o=n.BandProperties;o&&o.length!==e&&(t.keyProperties={...n,BandProperties:void 0}),s&&s.length!==e&&(t.statistics=s.length>e?s.slice(0,e):null),r&&r.length!==e&&(t.histograms=r.length>e?r.slice(0,e):null),n.BAND_COUNT&&Number(n.BAND_COUNT)!==e&&(t.keyProperties={...n,BAND_COUNT:"string"==typeof n.BAND_COUNT?String(e):e})}};(0,i._)([(0,a.MZ)({json:{write:!0}})],w.prototype,"functionName",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],w.prototype,"functionArguments",void 0),(0,i._)([(0,a.MZ)()],w.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}}),(0,g.w)((t=>t?.toLowerCase()))],w.prototype,"outputPixelType",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],w.prototype,"mainPrimaryRasterId",void 0),(0,i._)([(0,a.MZ)()],w.prototype,"sourceRasters",void 0),(0,i._)([(0,a.MZ)({type:[x.default],json:{write:!0}})],w.prototype,"sourceRasterInfos",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],w.prototype,"rasterInfo",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],w.prototype,"readingBufferSize",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],w.prototype,"id",void 0),(0,i._)([(0,a.MZ)()],w.prototype,"isNoopProcess",void 0),(0,i._)([(0,a.MZ)()],w.prototype,"supportsGPU",null),(0,i._)([(0,a.MZ)()],w.prototype,"rawInputBandIds",void 0),(0,i._)([(0,a.MZ)()],w.prototype,"rawSourceRasterInfos",void 0),(0,i._)([(0,a.MZ)()],w.prototype,"isInputBandIdsSwizzled",void 0),(0,i._)([(0,a.MZ)()],w.prototype,"swizzledBandSelection",void 0),(0,i._)([(0,a.MZ)()],w.prototype,"isBranch",void 0),(0,i._)([(0,a.MZ)({readOnly:!0})],w.prototype,"flatWebGLFunctionChain",null),(0,i._)([(0,a.MZ)()],w.prototype,"_bindingResult",void 0),w=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.BaseRasterFunction")],w);const b=w;var _=n(75258);const A=new Map([[_.localTrigonometricOperation.acos,{domain:[0,Math.PI],isInteger:!1}],[_.localTrigonometricOperation.asin,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[_.localTrigonometricOperation.atan,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[_.localTrigonometricOperation.cos,{domain:[-1,1],isInteger:!1}],[_.localTrigonometricOperation.sin,{domain:[-1,1],isInteger:!1}],[_.localLogicalOperation.booleanAnd,{domain:[0,1],isInteger:!0}],[_.localLogicalOperation.booleanNot,{domain:[0,1],isInteger:!0}],[_.localLogicalOperation.booleanOr,{domain:[0,1],isInteger:!0}],[_.localLogicalOperation.booleanXOr,{domain:[0,1],isInteger:!0}],[_.localLogicalOperation.equalTo,{domain:[0,1],isInteger:!0}],[_.localLogicalOperation.notEqual,{domain:[0,1],isInteger:!0}],[_.localLogicalOperation.greaterThan,{domain:[0,1],isInteger:!0}],[_.localLogicalOperation.greaterThanEqual,{domain:[0,1],isInteger:!0}],[_.localLogicalOperation.lessThan,{domain:[0,1],isInteger:!0}],[_.localLogicalOperation.lessThanEqual,{domain:[0,1],isInteger:!0}],[_.localLogicalOperation.isNull,{domain:[0,1],isInteger:!0}]]);function T(t){return A.get(t)}const M=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function P(t,e,n){const[s,r]=t,o=s.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]+r[a]);return i}function N(t,e,n){const[s]=t,r=s.length,o=y.default.createEmptyBand("f32",r);return o.set(s),o}function F(t,e,n){const[s]=t,r=s.length,o=y.default.createEmptyBand(n,r);for(let i=0;i<r;i++)e&&!e[i]||(o[i]=s[i]*s[i]);return o}function k(t,e,n){const[s,r]=t,o=s.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]-r[a]);return i}function R(t,e,n){const[s,r]=t,o=s.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]*r[a]);return i}function I(t,e,n){const[s]=t,r=s.length,o=y.default.createEmptyBand(n,r);for(let i=0;i<r;i++)e&&!e[i]||(o[i]=Math.sign(s[i])*Math.floor(Math.abs(s[i])));return o}function B(t,e,n){const[s,r]=t,o=s.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]/r[a]);return i}function C(t,e,n){return B(t,e,"f32")}function S(t,e,n){const[s,r]=t,o=s.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=Math.floor(s[a]/r[a]));return i}function D(t,e,n,s){const r=t[0],o=r.length,i=y.default.createEmptyBand(n,o);if(s===_.localTrigonometricOperation.atanh){for(let t=0;t<o;t++)if(e[t]){const n=r[t];Math.abs(n)>=1?e[t]=0:i[t]=Math.atanh(n)}return i}const a=s===_.localTrigonometricOperation.asin?Math.asin:Math.acos;for(let l=0;l<o;l++)if(e[l]){const t=r[l];Math.abs(t)>1?e[l]=0:i[l]=a(t)}return i}function j(t,e,n,s){const[r]=t,o=r.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s(r[a]));return i}function Z(t,e,n,s){const[r,o]=t,i=r.length,a=y.default.createEmptyBand(n,i);for(let l=0;l<i;l++)e&&!e[l]||(a[l]=s(r[l],o[l]));return a}function G(t,e,n){const[s,r]=t,o=s.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]&r[a]);return i}function O(t,e,n){const[s,r]=t,o=s.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]<<r[a]);return i}function z(t,e,n){const[s]=t,r=s.length,o=y.default.createEmptyBand(n,r);for(let i=0;i<r;i++)e&&!e[i]||(o[i]=~s[i]);return o}function E(t,e,n){const[s,r]=t,o=s.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]|r[a]);return i}function L(t,e,n){const[s,r]=t,o=s.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]>>r[a]);return i}function V(t,e,n){const[s,r]=t,o=s.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]^r[a]);return i}function U(t,e,n){const[s,r]=t,o=s.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]&&r[a]?1:0);return i}function W(t,e,n){const[s]=t,r=s.length,o=y.default.createEmptyBand(n,r);for(let i=0;i<r;i++)e&&!e[i]||(o[i]=s[i]?0:1);return o}function $(t,e,n){const[s,r]=t,o=s.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]||r[a]?1:0);return i}function K(t,e,n){const[s,r]=t,o=s.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=(s[a]?1:0)^(r[a]?1:0));return i}function H(t,e,n){const[s,r]=t,o=s.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]===r[a]?1:0);return i}function q(t,e,n,s){const[r]=t,o=r.length,i=y.default.createEmptyBand(n,o),a=s===Math.E;for(let l=0;l<o;l++)e&&!e[l]||(i[l]=a?Math.exp(r[l]):s**r[l]);return i}function J(t,e,n){return q(t,e,n,10)}function Y(t,e,n){return q(t,e,n,2)}function X(t,e,n){return q(t,e,n,Math.E)}function Q(t,e,n,s){const[r]=t,o=r.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(r[a]<=0?e[a]=0:i[a]=s(r[a]));return i}function tt(t,e,n){return Q(t,e,n,Math.log10)}function et(t,e,n){return Q(t,e,n,Math.log2)}function nt(t,e,n){return Q(t,e,n,Math.log)}function st(t,e,n){const[s,r]=t,o=s.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]>r[a]?1:0);return i}function rt(t,e,n){const[s,r]=t,o=s.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]>=r[a]?1:0);return i}function ot(t,e,n){const[s,r]=t,o=s.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]<r[a]?1:0);return i}function it(t,e,n){const[s,r]=t,o=s.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]<=r[a]?1:0);return i}function at(t,e,n){const[s]=t,r=s.length,o=y.default.createEmptyBand(n,r);if(!e)return o;for(let i=0;i<r;i++)o[i]=e[i]?0:1;return o}function lt(t,e,n){const[s,r]=t,o=s.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]%r[a]);return i}function ut(t,e,n){const[s]=t,r=s.length,o=y.default.createEmptyBand(n,r);for(let i=0;i<r;i++)e&&!e[i]||(o[i]=-s[i]);return o}function ct(t,e,n){const[s,r]=t,o=s.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]===r[a]?0:1);return i}function pt(t,e,n){const[s,r]=t,o=s.length,i=y.default.createEmptyBand(n,o),a=new Uint8Array(o);for(let l=0;l<o;l++)null!=e&&!e[l]||0!==s[l]||(i[l]=r[l],a[l]=255);return{band:i,mask:a}}function ht(t,e,n){const[s,r,o]=t,i=s.length,a=y.default.createEmptyBand(n,i);for(let l=0;l<i;l++)e&&!e[l]||(a[l]=s[l]?r[l]:o[l]);return a}function mt(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,o=r.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)if(!e||e[a]){let e=r[a];for(let n=1;n<s;n++){const s=t[n][a];e<s&&(e=s)}i[a]=e}return i}function dt(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,o=r.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)if(!e||e[a]){let e=r[a];for(let n=1;n<s;n++){const s=t[n][a];e>s&&(e=s)}i[a]=e}return i}function ft(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,o=r.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)if(!e||e[a]){let e=r[a],n=e;for(let r=1;r<s;r++){const s=t[r][a];n<s?n=s:e>s&&(e=s)}i[a]=n-e}return i}function gt(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,o=r.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)if(!e||e[a]){let e=0;for(let n=0;n<s;n++)e+=t[n][a];i[a]=e/s}return i}function yt(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,o=r.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)if(!e||e[a])for(let e=0;e<s;e++){const n=t[e];i[a]+=n[a]}return i}function xt(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,o=r.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)if(!e||e[a]){const e=new Float32Array(s);let n=0;for(let o=0;o<s;o++){const s=t[o];n+=s[a],e[o]=s[a]}n/=s;let r=0;for(let t=0;t<s;t++)r+=(e[t]-n)**2;i[a]=Math.sqrt(r/s)}return i}function vt(t,e,n){const s=t.length;if(s<2)return t[0];const r=Math.floor(s/2),[o]=t,i=o.length,a=y.default.createEmptyBand(n,i),l=new Float32Array(s),u=s%2==1;for(let c=0;c<i;c++)if(!e||e[c]){for(let e=0;e<s;e++)l[e]=t[e][c];l.sort(),a[c]=u?l[r]:(l[r]+l[r-1])/2}return a}function wt(t,e,n){const[s,r]=t;if(null==r)return s;const o=s.length,i=y.default.createEmptyBand(n,o);for(let a=0;a<o;a++)e&&!e[a]||(i[a]=s[a]<r[a]?s[a]:r[a]);return i}function bt(t,e,n){const s=t.length;if(s<=2)return wt(t,e,n);const r=t[0].length,o=y.default.createEmptyBand(n,r),i=new Map;for(let a=0;a<r;a++)if(!e||e[a]){i.clear();for(let o=0;o<s;o++){const e=t[o][a];i.set(e,i.has(e)?i.get(e)+1:1)}let e=0,n=0;const r=[];for(const t of i.keys())e=i.get(t),e>n?(n=e,r.length=0,r.push(t)):e===n&&r.push(t);r.length>1&&r.sort(((t,e)=>t-e)),o[a]=r[0]}return o}function _t(t,e,n){const s=t.length;if(s<=2)return wt(t,e,n);const r=t[0].length,o=y.default.createEmptyBand(n,r),i=new Map;for(let a=0;a<r;a++)if(!e||e[a]){i.clear();for(let o=0;o<s;o++){const e=t[o][a];i.set(e,i.has(e)?i.get(e)+1:1)}let e=0,n=t.length;const r=[];for(const t of i.keys())e=i.get(t),e<n?(n=e,r.length=0,r.push(t)):e===n&&r.push(t);r.length>1&&r.sort(((t,e)=>t-e)),o[a]=r[0]}return o}function At(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,o=r.length,i=y.default.createEmptyBand(n,o),a=new Set;for(let l=0;l<o;l++)if(!e||e[l]){let e;a.clear();for(let n=0;n<s;n++)e=t[n][l],a.add(e);i[l]=a.size}return i}const Tt=new Map,Mt=new Map,Pt=new Map,Nt=new Map;function Ft(){Tt.size||(Tt.set(4,Math.sqrt),Tt.set(6,Math.acos),Tt.set(7,Math.asin),Tt.set(8,Math.atan),Tt.set(9,Math.atanh),Tt.set(10,Math.abs),Tt.set(21,Math.cos),Tt.set(22,Math.cosh),Tt.set(48,Math.floor),Tt.set(49,Math.ceil),Tt.set(51,Math.sin),Tt.set(52,Math.sinh),Tt.set(56,Math.tan),Tt.set(57,Math.tanh),Tt.set(59,Math.acosh),Tt.set(60,Math.asinh),Tt.set(65,Math.floor),Mt.set(5,Math.pow),Mt.set(61,Math.atan2),Pt.set(1,P),Pt.set(2,k),Pt.set(3,R),Pt.set(11,G),Pt.set(12,O),Pt.set(13,z),Pt.set(14,E),Pt.set(15,L),Pt.set(16,V),Pt.set(17,U),Pt.set(18,W),Pt.set(19,$),Pt.set(20,K),Pt.set(23,B),Pt.set(24,H),Pt.set(25,X),Pt.set(26,J),Pt.set(27,Y),Pt.set(28,st),Pt.set(29,rt),Pt.set(30,I),Pt.set(31,at),Pt.set(32,N),Pt.set(33,ot),Pt.set(34,it),Pt.set(35,nt),Pt.set(36,tt),Pt.set(37,et),Pt.set(44,lt),Pt.set(45,ut),Pt.set(46,ct),Pt.set(53,F),Pt.set(64,C),Pt.set(65,S),Pt.set(76,ht),Pt.set(78,ht),Nt.set(38,bt),Nt.set(39,mt),Nt.set(40,gt),Nt.set(41,vt),Nt.set(42,dt),Nt.set(43,_t),Nt.set(47,ft),Nt.set(54,xt),Nt.set(55,yt),Nt.set(58,At),Nt.set(66,bt),Nt.set(67,mt),Nt.set(68,gt),Nt.set(69,vt),Nt.set(70,dt),Nt.set(71,_t),Nt.set(72,ft),Nt.set(73,xt),Nt.set(74,yt),Nt.set(75,At))}function kt(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Ft();let s=function(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=t.map((t=>t.mask)),s=n.filter((t=>null!=t)),r=t[0].pixels[0].length;if(0===s.length||e&&s.length!==n.length)return new Uint8Array(r).fill(255);const o=s[0],i=new Uint8Array(o);if(1===s.length)return i;if(!e){for(let t=1;t<s.length;t++){const e=s[t];for(let t=0;t<i.length;t++)i[t]&&(i[t]=e[t]?255:0)}return i}for(let a=1;a<s.length;a++){const t=s[a];for(let e=0;e<i.length;e++)0===i[e]&&(i[e]=t[e]?255:0)}return i}(t,e>=66&&e<=75);const{outputPixelType:r="f32"}=n,o=!Nt.has(e)||n.processAsMultiband,i=o?t[0].pixels.length:1,a=[];for(let c=0;c<i;c++){const n=Nt.has(e)&&!o?t.flatMap((t=>t.pixels)):t.map((t=>t.pixels[c]));let i,l=!0;if(e===_.localConditionalOperation.setNull){const t=pt(n,s,r);i=t.band,s=t.mask,l=!1}else Pt.has(e)?i=Pt.get(e)(n,s,"f64"):Tt.has(e)?i=e===_.localTrigonometricOperation.asin||e===_.localTrigonometricOperation.acos||e===_.localTrigonometricOperation.atanh?D(n,s,"f64",e):j(n,s,"f64",Tt.get(e)):Mt.has(e)?i=Z(n,s,"f64",Mt.get(e)):Nt.has(e)?i=Nt.get(e)(n,s,"f64"):(i=n[0],l=!1);if(l&&e!==_.localLogicalOperation.isNull&&!A.has(e)){const t=y.default.createEmptyBand(r,i.length);s||(s=new Uint8Array(i.length).fill(255)),(0,u.$p)(i,s),(0,u.yM)(i,s,r,t),i=t}a.push(i)}const l=t[0];return new y.default({width:l.width,height:l.height,pixelType:r,mask:e===_.localLogicalOperation.isNull?null:s,pixels:a})}let Rt=class extends b{constructor(){super(...arguments),this.functionName="Arithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{operation:t}=this.functionArguments;if(t<1||t>6)return{success:!1,supportsGPU:!1,error:"unsupported operation"};const e=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:e.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return null==e?.[0]||null==e?.[1]?null:function(t,e,n){return kt(t,e=[null,1,2,3,23,5,44][e]??1,{outputPixelType:n})}(e,this.functionArguments.operation,this.outputPixelType)}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=["","plus","minus","times","divide","power","mod"][t],n=this.outputPixelType??"f32";let[s,r]=(0,u.hP)(n);const o=(0,u.zw)(n);return o&&(s-=1e-4,r+=1e-4),{imageCount:2,operationName:e,domainRange:[s,r],isOutputRounded:o}}};(0,i._)([(0,a.MZ)({json:{write:!0,name:"rasterFunction"}})],Rt.prototype,"functionName",void 0),(0,i._)([(0,a.MZ)({type:f,json:{write:!0,name:"rasterFunctionArguments"}})],Rt.prototype,"functionArguments",void 0),(0,i._)([(0,a.MZ)()],Rt.prototype,"rasterArgumentNames",void 0),Rt=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.ArithmeticFunction")],Rt);const It=Rt;var Bt;let Ct=Bt=class extends h{clone(){return new Bt({raster:this.raster})}};Ct=Bt=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.AspectFunctionArguments")],Ct);const St=Ct;var Dt=n(82417);let jt=class extends b{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.isGCS=t.spatialReference?.isGeographic??!1,this.outputPixelType=this._getOutputPixelType("f32");const e=t.clone();return e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),e.statistics=[{min:-1,max:360,avg:180,stddev:30}],e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{extent:n,primaryPixelSizes:s}=t,r=s?.[0],o=r??(n?{x:n.width/e.width,y:n.height/e.height}:{x:1,y:1});return(0,Dt.di)(e,{resolution:o})}};(0,i._)([(0,a.MZ)({json:{write:!0,name:"rasterFunction"}})],jt.prototype,"functionName",void 0),(0,i._)([(0,a.MZ)({type:St,json:{write:!0,name:"rasterFunctionArguments"}})],jt.prototype,"functionArguments",void 0),(0,i._)([(0,a.MZ)()],jt.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],jt.prototype,"isGCS",void 0),jt=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.AspectFunction")],jt);const Zt=jt;var Gt=n(47332),Ot=n(42761);const zt=new Set(["+","-","*","/","(",")"]);function Et(t,e){return t.toLowerCase().startsWith("b")?e[parseInt(t.slice(1),10)-1]:parseFloat(t)}function Lt(t,e,n,s){if("number"==typeof n&&"number"==typeof s)return n+s;let r,o,i;"number"==typeof n?(i=s,r=i.length,o=new Float32Array(r),o.fill(n)):(r=n.length,o=n,s.constructor===Number?(i=new Float32Array(r),i.fill(s)):i=s);const a=new Float32Array(r);switch(e){case"+":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=o[e]+i[e]);break;case"-":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=o[e]-i[e]);break;case"*":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=o[e]*i[e]);break;case"/":for(let e=0;e<r;e++)(null==t||t[e])&&i[e]&&(a[e]=o[e]/i[e]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return a}function Vt(t,e){t.splice(e,1);let n=0,s=0;do{n=0,s=0;for(let e=0;e<t.length;e++)if("("===t[e])n=e;else if(")"===t[e]){s=e;break}s===n+1&&t.splice(n,2)}while(s===n+1);return t}function Ut(t){if(1===t.length)return{opIndex:0,numIndex:0};let e=0,n=0;for(let i=0;i<t.length;i++)if("("===t[i])e=i;else if(")"===t[i]){n=i;break}const s=0===n?t:t.slice(e+1,n);let r=-1;for(let i=0;i<s.length;i++)if("*"===s[i]||"/"===s[i]){r=i;break}if(r>-1)n>0&&(r+=e+1);else{for(let t=0;t<s.length;t++)if("+"===s[t]||"-"===s[t]){r=t;break}n>0&&(r+=e+1)}let o=0;for(let i=0;i<r;i++)"("===t[i]&&o++;return{opIndex:r,numIndex:r-o}}function Wt(t,e,n){let s,{ops:r,nums:o}=function(t,e){(t=t.replaceAll(" ","")).startsWith("-")&&(t="0"+t),t.startsWith("+")&&(t=t.slice(1));const n=t.split(""),s=[],r=[];let o="";for(let i=0;i<n.length;i++){const t=n[i];zt.has(t)?(o.length&&r.push(Et(o,e)),s.push(t),o=""):o=o.concat(t)}return o.length&&r.push(Et(o,e)),{ops:s,nums:r}}(n,e);if(0===r.length){const t=1===o.length?o[0]:e[0];if(t instanceof Float32Array)return[t];const n=new Float32Array(e[0].length);return"number"==typeof t?n.fill(t):n.set(t),[n]}for(;r.length>0;){const{numIndex:e,opIndex:n}=Ut(r);if(s=Lt(t,r[n],o[e],o[e+1]),1===r.length)break;r=Vt(r,n),o.splice(e,2,s)}return[s]}var $t=n(50396);const Kt=new Ot.J({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function Ht(t,e){if(!(0,$t.AB)(t))return t;const{equation:n,method:s}=e,r=e.bandIndexes.map((t=>t-1)),{pixels:o,mask:i}=t;let a;switch(s){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":a=Jt(i,o[r[0]],o[r[1]]);break;case"ndwi":a=Jt(i,o[r[1]],o[r[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":a=function(t,e,n){const s=n.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(null==t||t[o]){const t=e[o],s=n[o];s&&(r[o]=t/s)}return[r]}(i,o[r[0]],o[r[1]]);break;case"ci-g":case"ci-re":a=function(t,e,n){const s=e.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(null==t||t[o]){const t=e[o],s=n[o];s&&(r[o]=t/s-1)}return[r]}(i,o[r[0]],o[r[1]]);break;case"savi":a=function(t,e,n,s){const r=n.length,o=new Float32Array(r);for(let i=0;i<r;i++)if(null==t||t[i]){const t=n[i],r=e[i],a=r+t+s;a&&(o[i]=(r-t)/a*(1+s))}return[o]}(i,o[r[0]],o[r[1]],r[2]+1);break;case"tsavi":a=function(t,e,n,s,r,o){const i=n.length,a=new Float32Array(i),l=-r*s+o*(1+s*s);for(let u=0;u<i;u++)if(null==t||t[u]){const t=n[u],o=e[u],i=r*o+t+l;i&&(a[u]=s*(o-s*t-r)/i)}return[a]}(i,o[r[0]],o[r[1]],r[2]+1,r[3]+1,r[4]+1);break;case"msavi":a=function(t,e,n){const s=n.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(null==t||t[o]){const t=n[o],s=e[o],i=2*s+1;r[o]=.5*(i-Math.sqrt(i*i-8*(s-t)))}return[r]}(i,o[r[0]],o[r[1]]);break;case"gemi":a=function(t,e,n){const s=n.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(null==t||t[o]){const t=n[o],s=e[o];if(1!==t&&s+t+.5!==0){const e=(2*(s*s-t*t)+1.5*s+.5*t)/(s+t+.5);r[o]=e*(1-.25*e)-(t-.125)/(1-t)}}return[r]}(i,o[r[0]],o[r[1]]);break;case"pvi":a=function(t,e,n,s,r){const o=n.length,i=new Float32Array(o),a=1/Math.sqrt(1+s*s);for(let l=0;l<o;l++)if(null==t||t[l]){const t=n[l],o=e[l];i[l]=(o-s*t-r)*a}return[i]}(i,o[r[0]],o[r[1]],r[2]+1,r[3]+1);break;case"gvitm":a=function(t,e){const[n,s,r,o,i,a]=e,l=n.length,u=new Float32Array(l);for(let c=0;c<l;c++)(null==t||t[c])&&(u[c]=-.2848*n[c]-.2435*s[c]-.5436*r[c]+.7243*o[c]+.084*i[c]-.18*a[c]);return[u]}(i,[o[r[0]],o[r[1]],o[r[2]],o[r[3]],o[r[4]],o[r[5]]]);break;case"sultan":a=function(t,e){const[n,s,r,o,i]=e,a=n.length,l=new Float32Array(a),u=new Float32Array(a),c=new Float32Array(a);for(let p=0;p<a;p++)(null==t||t[p])&&(l[p]=i[p]?o[p]/i[p]*100:0,u[p]=n[p]?o[p]/n[p]*100:0,c[p]=r[p]?s[p]/r[p]*(o[p]/r[p])*100:0);return[l,u,c]}(i,[o[r[0]],o[r[1]],o[r[2]],o[r[3]],o[r[4]]]);break;case"vari":a=function(t,e){const[n,s,r]=e,o=n.length,i=new Float32Array(o);for(let a=0;a<o;a++)if(null==t||t[a])for(a=0;a<o;a++){const t=n[a],e=s[a],o=e+t-r[a];o&&(i[a]=(e-t)/o)}return[i]}(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"mtvi2":a=function(t,e){const[n,s,r]=e,o=n.length,i=new Float32Array(o);for(let a=0;a<o;a++)if(null==t||t[a])for(a=0;a<o;a++){const t=n[a],e=s[a],o=r[a],l=Math.sqrt((2*t+1)**2-(6*t-5*Math.sqrt(e))-.5);if(l){const n=1.5*(1.2*(t-o)-2.5*(e-o));i[a]=n/l}}return[i]}(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"rtvi-core":a=function(t,e){const[n,s,r]=e,o=n.length,i=new Float32Array(o);for(let a=0;a<o;a++)if(null==t||t[a])for(a=0;a<o;a++){const t=n[a],e=s[a],o=r[a];i[a]=100*(t-e)-10*(t-o)}return[i]}(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"evi":a=function(t,e){const[n,s,r]=e,o=n.length,i=new Float32Array(o);for(let a=0;a<o;a++)if(null==t||t[a])for(a=0;a<o;a++){const t=n[a],e=s[a],o=t+6*e-7.5*r[a]+1;o&&(i[a]=2.5*(t-e)/o)}return[i]}(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"wndwi":a=function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.5;const[s,r,o]=e,i=r.length,a=new Float32Array(i);for(let l=0;l<i;l++)if(null==t||t[l])for(l=0;l<i;l++){const t=s[l],e=r[l],i=o[l],u=t+n*e+(1-n)*i;u&&(a[l]=(t-n*e-(1-n)*i)/u)}return[a]}(i,[o[r[0]],o[r[1]],o[r[2]]],r[3]?r[3]+1:.5);break;case"bai":a=function(t,e,n){const s=n.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(null==t||t[o])for(o=0;o<s;o++){const t=(.1-e[o])**2+(.06-n[o])**2;t&&(r[o]=1/t)}return[r]}(i,o[r[0]],o[r[1]]);break;case"custom":a=Wt(i,o,n);break;default:return t}const{outputPixelType:l="f32"}=e,c=null!=l&&(0,u.zw)(l);let p;i?(p=new Uint8Array(t.width*t.height),p.set(i)):c&&(p=new Uint8Array(t.width*t.height).fill(255)),c&&(a=a.map((t=>{const e=y.default.createEmptyBand(l,t.length);return(0,u.yM)(t,p,l,e),e})));const h=new y.default({width:t.width,height:t.height,pixelType:l,pixels:a,mask:p});return h.updateStatistics(),h}function qt(t){const e=new Float32Array(9);return e[3*t[0]]=1,e[3*t[1]+1]=1,e[3*t[2]+2]=1,e}function Jt(t,e,n){const s=n.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(null==t||t[o]){const t=e[o],s=n[o],i=t+s;i&&(r[o]=(t-s)/i)}return[r]}var Yt;let Xt=Yt=class extends h{constructor(){super(...arguments),this.method="custom"}clone(){return new Yt({method:this.method,bandIndexes:this.bandIndexes,raster:(0,o.clone)(this.raster)})}};(0,i._)([(0,a.MZ)({json:{type:String,write:!0}})],Xt.prototype,"bandIndexes",void 0),(0,i._)([(0,Gt.e)(Kt)],Xt.prototype,"method",void 0),Xt=Yt=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],Xt);const Qt=Xt,te=new Set(["vari","mtvi2","rtvi-core","evi"]);let ee=class extends b{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0];if(t.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const e=t.clone();return e.pixelType=this.outputPixelType,e.bandCount="sultan"===this.functionArguments.method?3:1,this._removeStatsHistColormapVAT(e),e.keyProperties={...e.keyProperties,BandProperties:void 0},this.rasterInfo=e,{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{method:n,bandIndexes:s}=this.functionArguments,r=s.split(" ").map((t=>parseFloat(t)));return Ht(e,{method:n,bandIndexes:r,equation:s,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=this.functionArguments.bandIndexes.split(" ").map((t=>parseFloat(t)-1));2===t.length&&t.push(0);const e=this.isInputBandIdsSwizzled?[0,1,2]:t;let n,s;const r=new Float32Array(3),{method:o}=this.functionArguments;switch(o){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":n=qt([e[0],e[1],0]),s="ndxi";break;case"ndwi":n=qt([e[1],e[0],0]),s="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":n=qt([e[0],e[1],0]),s="sr";break;case"ci-g":case"ci-re":n=qt([e[0],e[1],0]),s="ci";break;case"savi":n=qt([e[0],e[1],0]),s="savi",r[0]=t[2]+1;break;case"tsavi":n=qt([e[0],e[1],0]),s="tsavi",r[0]=t[2]+1,r[1]=t[3]+1,r[2]=t[4]+1;break;case"msavi":n=qt([e[0],e[1],0]),s="msavi";break;case"gemi":n=qt([e[0],e[1],0]),s="gemi";break;case"pvi":n=qt([e[0],e[1],0]),s="tsavi",r[0]=t[2]+1,r[1]=t[3]+1;break;case"vari":n=qt([e[0],e[1],e[2]]),s="vari";break;case"mtvi2":n=qt([e[0],e[1],e[2]]),s="mtvi";break;case"rtvi-core":n=qt([e[0],e[1],e[2]]),s="rtvicore";break;case"evi":n=qt([e[0],e[1],e[2]]),s="evi";break;case"wndwi":n=qt([e[0],e[1],0]),s="wndwi",r[0]=t[3]?t[3]+1:.5;break;case"bai":n=qt([e[1],e[0],0]),s="bai";break;default:n=qt([0,1,2]),s="custom"}return{bandIndexMat3:n,indexType:s,adjustments:r,isOutputRounded:(0,u.zw)(this.outputPixelType)}}_getInputBandIds(t){if("custom"===this.functionArguments.method)return t;const e=this.functionArguments.bandIndexes.split(" ").map((t=>parseFloat(t)-1)),n=t.length,s=e.map((t=>t>=n?n-1:t)),r=te.has(this.functionArguments.method)?3:2,o=s.slice(0,r).map((e=>t[e]));return 2===o.length&&o.push(0),o}};(0,i._)([(0,a.MZ)({json:{write:!0,name:"rasterFunction"}})],ee.prototype,"functionName",void 0),(0,i._)([(0,a.MZ)({type:Qt,json:{write:!0,name:"rasterFunctionArguments"}})],ee.prototype,"functionArguments",void 0),(0,i._)([(0,a.MZ)()],ee.prototype,"rasterArgumentNames",void 0),ee=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.BandArithmeticFunction")],ee);const ne=ee;var se,re=n(78629),oe=n(54723);const ie=new Ot.J({1:"outside",2:"inside"},{useNumericKeys:!0});let ae=se=class extends h{constructor(){super(...arguments),this.clippingType="outside"}clone(){return new se({clippingGeometry:this.clippingGeometry.clone(),clippingType:this.clippingType})}};(0,i._)([(0,a.MZ)({types:oe.yR,json:{read:re.fromJSON,write:!0}})],ae.prototype,"clippingGeometry",void 0),(0,i._)([(0,a.MZ)({json:{read:ie.read,write:ie.write}})],ae.prototype,"clippingType",void 0),ae=se=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.ClipFunctionArguments")],ae);const le=ae;var ue=n(67726),ce=n(90801);let pe=class extends b{constructor(){super(...arguments),this.functionName="Clip",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(t.pixelType),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{functionArguments:e}=this,{clippingGeometry:n,clippingType:s}=e;if(!n)return{success:!1,supportsGPU:!1,error:"missing clipping geometry"};if("outside"===s)try{const{spatialReference:e}=t,s="extent"===n.type?(0,ce._l)(n,e):(0,ce.uk)(n,e).extent;s&&(0,ue.Sd)(t,s)}catch{}return{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}_getWebGLParameters(){const{clippingGeometry:t,clippingType:e}=this.functionArguments;return{clippingGeometry:t.toJSON(),clippingType:e}}};(0,i._)([(0,a.MZ)({json:{write:!0,name:"rasterFunction"}})],pe.prototype,"functionName",void 0),(0,i._)([(0,a.MZ)({type:le,json:{write:!0,name:"rasterFunctionArguments"}})],pe.prototype,"functionArguments",void 0),(0,i._)([(0,a.MZ)()],pe.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.MZ)()],pe.prototype,"isNoopProcess",void 0),pe=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.ClipFunction")],pe);const he=pe;var me,de=n(14800),fe=n(78496),ge=n(93898);let ye=me=class extends h{castColormapName(t){if(!t)return null;const e=t.toLowerCase();return fe.L7.includes(e)?e:null}readColorRamp(t){return(0,ge.r)(t)}readColorRampName(t,e){if(!t)return null;const n=fe.kH.jsonValues.find((e=>e.toLowerCase()===t.toLowerCase()));return n?fe.kH.fromJSON(n):null}clone(){return new me({colormap:(0,o.clone)(this.colormap),colormapName:this.colormapName,colorRamp:this.colorRamp?.clone(),colorRampName:this.colorRampName})}};(0,i._)([(0,a.MZ)({type:[[Number]],json:{write:!0}})],ye.prototype,"colormap",void 0),(0,i._)([(0,a.MZ)({type:String,json:{write:!0}})],ye.prototype,"colormapName",void 0),(0,i._)([(0,g.w)("colormapName")],ye.prototype,"castColormapName",null),(0,i._)([(0,a.MZ)({types:ge.g,json:{write:!0}})],ye.prototype,"colorRamp",void 0),(0,i._)([(0,de.w)("colorRamp")],ye.prototype,"readColorRamp",null),(0,i._)([(0,a.MZ)({type:fe.kH.apiValues,json:{type:fe.kH.jsonValues,write:fe.kH.write}})],ye.prototype,"colorRampName",void 0),(0,i._)([(0,de.w)("colorRampName")],ye.prototype,"readColorRampName",null),ye=me=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],ye);const xe=ye,ve=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],we=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function be(t,e){const n=[],s=[];for(let o=0;o<t.length-1;o++)n.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:t[o].slice(1),toColor:t[o+1].slice(1)}),s.push(t[o+1][0]-t[o][0]);const r=t[t.length-1][0];return(0,fe.iv)({type:"multipart",colorRamps:n},{numColors:r,weights:e=e??s})}function _e(t){let e;switch(t){case"elevation":e=be([[0,0,191,191],[51,0,0,255],[102,255,0,255],[153,255,0,127],[204,191,63,127],[256,20,20,20]]);break;case"gray":e=(0,fe.iv)({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]});break;case"hillshade":e=be([[0,38,41,54],[69,79,82,90],[131,156,156,156],[256,253,253,241]],[.268,.238,.495]);break;case"ndvi":e=ve;break;case"ndvi2":e=function(){const t=be([[0,255,255,255],[70,0,255,0],[80,205,173,193],[100,150,150,150],[110,120,51,100],[130,120,100,200],[140,28,3,144],[160,6,0,55],[180,10,25,30],[201,6,7,27]]);for(let e=t.length;e<256;e++)t.push([6,27,7]);return t}();break;case"ndvi3":e=we;break;case"random":e=function(){const t=[];for(let e=0;e<256;e++){const e=[];for(let t=0;t<3;t++)e.push(Math.round(255*Math.random()));t.push(e)}return t}()}return e?(e=e.map(((t,e)=>[e,...t])),e):null}let Ae=class extends b{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:e,colormapName:n,colorRamp:s,colorRampName:r}=this.functionArguments;if(!e?.length)if(s)this.colorRamp=s,e=(0,fe.R8)(s,{interpolateAlpha:!0});else if(r){const t=(0,fe.M5)(r);t&&(e=(0,fe.R8)(t),this.colorRamp=(0,ge.r)(t))}else n&&(e=_e(n));if(!e?.length)return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};const o=this._getOutputPixelType(t.pixelType);this.outputPixelType=o.startsWith("f")?"s32":o;const i=t.clone();return i.pixelType=this.outputPixelType,i.colormap=e,i.bandCount=1,this.rasterInfo=i,{success:!0,supportsGPU:!0}}_processPixels(t){let e=t.pixelBlocks?.[0];return!e||(0,u.zw)(e.pixelType)||(e=e.clone(),e.clamp(this.outputPixelType)),e}};(0,i._)([(0,a.MZ)({json:{write:!0,name:"rasterFunction"}})],Ae.prototype,"functionName",void 0),(0,i._)([(0,a.MZ)({type:xe,json:{write:!0,name:"rasterFunctionArguments"}})],Ae.prototype,"functionArguments",void 0),(0,i._)([(0,a.MZ)()],Ae.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.MZ)()],Ae.prototype,"isNoopProcess",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],Ae.prototype,"indexedColormap",void 0),(0,i._)([(0,a.MZ)()],Ae.prototype,"colorRamp",void 0),Ae=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.ColormapFunction")],Ae);const Te=Ae;var Me,Pe=n(64884);let Ne=Me=class extends h{clone(){return new Me({raster:this.raster})}};Ne=Me=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.ColormapToRGBFunctionArguments")],Ne);const Fe=Ne;var ke=n(81759);let Re=class extends b{constructor(){super(...arguments),this.functionName="ColormapToRGB",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||!t.colormap?.length)return{success:!1,supportsGPU:!1,error:"colormap-to-rgb-function: source data must be single band with a colormap"};const e=t.clone();e.pixelType=this.outputPixelType=this._getOutputPixelType("u8"),this._removeStatsHistColormapVAT(e),e.bandCount=3,e.statistics=[{min:0,max:255,avg:100,stddev:20},{min:0,max:255,avg:100,stddev:20},{min:0,max:255,avg:100,stddev:20}],this.rasterInfo=e;const n=[...t.colormap].sort(((t,e)=>t[0]-e[0])),{indexedColormap:s,offset:r}=(0,$t.zg)({colormap:n});return s?(this.lookup={indexedColormap:s,offset:r},{success:!0,supportsGPU:(0,ke.WN)(s)}):{success:!1,supportsGPU:!1,error:"colormap-to-rgb-function: the colormap is not supported"}}_processPixels(t){let e=t.pixelBlocks?.[0];if(!e||!this.lookup)return e;e=e.clone();const n=e.pixels[0],s=e.mask??new Uint8Array(n.length).fill(255),r=new Uint8Array(n.length),o=new Uint8Array(n.length),i=new Uint8Array(n.length),{indexedColormap:a,offset:l}=this.lookup,u=a.length;for(let c=0;c<n.length;c++)if(s[c]){let t=4*(n[c]-l);t<0||t>u-4?s[c]=0:(r[c]=a[t++],o[c]=a[t++],i[c]=a[t++])}return e.pixels=[r,o,i],e.statistics=[new Pe.z(0,255),new Pe.z(0,255),new Pe.z(0,255)],e.pixelType=this.outputPixelType,e}_getWebGLParameters(){return this.lookup}};(0,i._)([(0,a.MZ)({json:{write:!0,name:"rasterFunction"}})],Re.prototype,"functionName",void 0),(0,i._)([(0,a.MZ)({type:Fe,json:{write:!0,name:"rasterFunctionArguments"}})],Re.prototype,"functionArguments",void 0),(0,i._)([(0,a.MZ)()],Re.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],Re.prototype,"lookup",void 0),Re=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.ColormapToRGBFunction")],Re);const Ie=Re;var Be,Ce=n(15484);let Se=Be=class extends h{constructor(){super(...arguments),this.rasters=[]}writeRasters(t,e){e.rasters=t.map((t=>"number"==typeof t||"string"==typeof t?t:t.toJSON()))}clone(){return new Be({rasters:(0,o.clone)(this.rasters)})}};(0,i._)([(0,a.MZ)({json:{write:!0}})],Se.prototype,"rasters",void 0),(0,i._)([(0,Ce.K)("rasters")],Se.prototype,"writeRasters",null),Se=Be=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],Se);const De=Se;let je=class extends b{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const n=e.clone();if(n.attributeTable=null,n.colormap=null,n.pixelType=this.outputPixelType,n.bandCount=t.map((t=>{let{bandCount:e}=t;return e})).reduce(((t,e)=>t+e)),t.every((t=>{let{statistics:e}=t;return null!=e&&e.length}))){const e=[];t.forEach((t=>{let{statistics:n}=t;return null!=n&&e.push(...n)})),n.statistics=e}if(t.every((t=>{let{histograms:e}=t;return null!=e&&e.length}))){const e=[];t.forEach((t=>{let{histograms:n}=t;return null!=n&&e.push(...n)})),n.histograms=e}n.multidimensionalInfo&&n.multidimensionalInfo.variables.forEach((e=>{const n=t.map((t=>t.multidimensionalInfo?.variables.find((t=>{let{name:n}=t;return n===e.name})))),s=n.map((t=>t?.statistics?.length?t.statistics:null)),r=n.map((t=>t?.histograms?.length?t.histograms:null));e.statistics=s.every((t=>null!=t))?s.flat():null,e.histograms=r.every((t=>null!=t))?r.flat():null})),n.bandCount>1&&(n.colormap=null,n.attributeTable=null);const s=t.every((t=>t.keyProperties.BandProperties?.length))?t.flatMap((t=>t.keyProperties.BandProperties)):void 0;return n.keyProperties={...n.keyProperties,BandProperties:s},this.rasterInfo=n,{success:!0,supportsGPU:n.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;if(!e)return null;const n=e?.[0];return null==n?null:(0,$t.Wy)(e)}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};(0,i._)([(0,a.MZ)({json:{write:!0,name:"rasterFunction"}})],je.prototype,"functionName",void 0),(0,i._)([(0,a.MZ)({type:De,json:{write:!0,name:"rasterFunctionArguments"}})],je.prototype,"functionArguments",void 0),(0,i._)([(0,a.MZ)()],je.prototype,"rasterArgumentNames",void 0),je=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.CompositeBandFunction")],je);const Ze=je;var Ge,Oe=n(50616),ze=n(61345);let Ee=Ge=class extends h{constructor(){super(...arguments),this.method="difference",this.keepMethod="all",this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new Ge({raster:this.raster,raster2:this.raster2,method:this.method,keepMethod:this.keepMethod})}};(0,i._)([(0,Gt.e)(ze.UY)],Ee.prototype,"method",void 0),(0,i._)([(0,Gt.e)(ze.z5)],Ee.prototype,"keepMethod",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],Ee.prototype,"raster2",void 0),(0,i._)([(0,a.MZ)({readOnly:!0})],Ee.prototype,"rasters",null),Ee=Ge=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.ComputeChangeFunctionArguments")],Ee);const Le=Ee;let Ve=class extends b{constructor(){super(...arguments),this.functionName="ComputeChange",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{method:t}=this.functionArguments,e=this.sourceRasterInfos[0].clone();if(this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),"categorical"===t){const t=this.sourceRasterInfos.map((t=>t.attributeTable)),n=this._getFieldNames(t,"value"),s=t.map((t=>this._getClassFieldName(t)));if(null==n[0]||null==n[1]||null==s[0]||null==s[1])return{success:!1,supportsGPU:!1,error:"both inputs must have proper attribute table with value and class fields"};this._updateAttributeTable(e,n,s)}return e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:"difference"===t||"relative-difference"===t}}_processPixels(t){const{pixelBlocks:e}=t;if(null==e?.[0]||null==e?.[1])return null;const{method:n}=this.functionArguments;return(0,ze._z)(e,n,this.outputPixelType,this._categoryConfig)}_getWebGLParameters(){const t=this.outputPixelType??"f32";let[e,n]=(0,u.hP)(t);const s=(0,u.zw)(t);return s&&(e-=1e-4,n+=1e-4),{method:this.functionArguments.method,domainRange:[e,n],isOutputRounded:s}}_updateAttributeTable(t,e,n){const s=this.sourceRasterInfos.map((t=>t.attributeTable)),r=s.map(((t,n)=>t.features.map((t=>t.attributes[e[n]])))),o=s.map(((t,e)=>t.features.map((t=>t.attributes[n[e]])))),i=r.map((t=>{const e=[];return t.forEach(((t,n)=>e[t]=n)),e})),{keepMethod:a}=this.functionArguments;this._categoryConfig={categoryIndexLookups:i,classNames:o,keepMethod:a};const l=s[0].clone();l.fields=[new Oe.default({name:"OID",type:"oid"}),new Oe.default({name:"Value",type:"integer"}),new Oe.default({name:"ClassName",type:"string"}),new Oe.default({name:"Class_From",type:"string"}),new Oe.default({name:"Class_To",type:"string"})];const u=this._getFieldNames(s,"red"),c=this._getFieldNames(s,"green"),p=this._getFieldNames(s,"blue"),h=[],m=2===u.length&&2===c.length&&2===p.length;m&&(h.push(...s.map(((t,e)=>t.features.map((t=>[t.attributes[u[e]],t.attributes[c[e]],t.attributes[p[e]]]))))),l.fields.push(new Oe.default({name:"Red",type:"integer"}),new Oe.default({name:"Green",type:"integer"}),new Oe.default({name:"Blue",type:"integer"})));const d=l.features[0].clone();d.geometry=null;const f=[],[g,y]=r.map((t=>t.length));let x=1;for(let v=0;v<g;v++){const t=o[0][v];for(let e=0;e<y;e++){const n=o[1][e];if("changed"===a&&t===n||"unchanged"===a&&t!==n)continue;const s=d.clone();s.attributes={OID:x++,Value:v*y+e,ClassName:t===n?t:`${t} -> ${n}`,Class_From:t,Class_To:n},m&&(s.attributes.Red=h[0][v][0]+h[1][e][0]>>1,s.attributes.Green=h[0][v][1]+h[1][e][1]>>1,s.attributes.Blue=h[0][v][2]+h[1][e][2]>>1),f.push(s)}}if("changed"===a){const t=d.clone();t.attributes={OID:x++,Value:g*y+1,ClassName:"No Change",Class_From:"Same",Class_To:"Same"},f.push(t)}else if("unchanged"===a){const t=d.clone();t.attributes={OID:x++,Value:g*y+2,ClassName:"Changed",Class_From:"Any",Class_To:"Any"},f.push(t)}l.features=f,t.attributeTable=l}_getFieldNames(t,e){return t.map((t=>{let{fields:n}=t;return n.find((t=>t.name.toLowerCase()===e))?.name})).filter((t=>t))}_getClassFieldName(t){const e=t.fields.find((t=>"string"===t.type&&t.name.toLowerCase().startsWith("class")))??t.fields.find((t=>"string"===t.type&&t.name.toLowerCase().includes("class")||t.name.toLowerCase().includes("type")||t.name.toLowerCase().includes("name")))??t.fields.find((t=>"string"===t.type));return e?.name}};(0,i._)([(0,a.MZ)({json:{write:!0,name:"rasterFunction"}})],Ve.prototype,"functionName",void 0),(0,i._)([(0,a.MZ)({type:Le,json:{write:!0,name:"rasterFunctionArguments"}})],Ve.prototype,"functionArguments",void 0),(0,i._)([(0,a.MZ)()],Ve.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],Ve.prototype,"_categoryConfig",void 0),Ve=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.ComputeChangeFunction")],Ve);const Ue=Ve;var We;let $e=We=class extends h{constructor(){super(...arguments),this.contrastOffset=0,this.brightnessOffset=0}clone(){return new We({contrastOffset:this.contrastOffset,brightnessOffset:this.brightnessOffset,raster:this.raster})}};(0,i._)([(0,a.MZ)({json:{write:!0}})],$e.prototype,"contrastOffset",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],$e.prototype,"brightnessOffset",void 0),$e=We=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.ContrastBrightnessFunctionArguments")],$e);const Ke=$e;var He=n(47659);let qe=class extends b{constructor(){super(...arguments),this.functionName="ContrastBrightness",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];if("u8"!==e.pixelType)return{success:!1,supportsGPU:!1,error:"Only unsigned 8 bit raster is supported by ContrastBrightness function."};this.outputPixelType=this._getOutputPixelType("u8");const n=e.clone();this._removeStatsHistColormapVAT(n),this.rasterInfo=n;const{contrastOffset:s,brightnessOffset:r}=this.functionArguments;return this.lookup=(0,He.zj)(s,r),{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];return null==e?null:(0,$t.eH)(e,{lut:e.pixels.map((()=>this.lookup)),offset:0,outputPixelType:"u8"})}_getWebGLParameters(){const{contrastOffset:t,brightnessOffset:e}=this.functionArguments;return{contrastOffset:t,brightnessOffset:e}}};(0,i._)([(0,a.MZ)({json:{write:!0,name:"rasterFunction"}})],qe.prototype,"functionName",void 0),(0,i._)([(0,a.MZ)({type:Ke,json:{write:!0,name:"rasterFunctionArguments"}})],qe.prototype,"functionArguments",void 0),(0,i._)([(0,a.MZ)()],qe.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],qe.prototype,"lookup",void 0),qe=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.ContrastBrightnessFunction")],qe);const Je=qe;var Ye=n(84058);const Xe=new Map;function Qe(t,e,n,s,r,o,i){const a=new Float32Array(e*n),l=o.length,u=i?0:s,c=i?s:0,p=i?1:e;for(let h=u;h<n-u;h++){const n=h*e;for(let i=c;i<e-c;i++){if(r&&!r[n+i])continue;let e=0;for(let r=0;r<l;r++)e+=t[n+i+(r-s)*p]*o[r];a[n+i]=e}}return a}function tn(t,e,n,s,r,o,i){const a=new Float32Array(e*n),l=Math.floor(s/2),u=Math.floor(r/2);for(let c=l;c<n-l;c++){const n=c*e;for(let c=u;c<e-u;c++){if(o&&!o[n+c])continue;let p=0;for(let o=0;o<s;o++)for(let s=0;s<r;s++)p+=t[n+c+(o-l)*e+s-u]*i[o*r+s];a[n+c]=p}}return a}function en(t,e){const n=function(t){const e=Math.sqrt(t.length),n=t.slice(0,e),s=[1];for(let r=1;r<e;r++){let n=null;for(let s=0;s<e;s++){const o=t[s+r*e],i=t[s];if(null==n)if(0===i){if(o)return{separable:!1,row:null,col:null}}else n=o/i;else if(o/i!==n)return{separable:!1,row:null,col:null}}if(null==n)return{separable:!1,row:null,col:null};s.push(n)}return{separable:!0,row:n,col:s}}(e.kernel),s=!1!==e.mirrorEdges,r=n.separable?function(t,e,n){let s=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const{pixels:r,width:o,height:i,pixelType:a,mask:l}=t,u=r.length,c=[],p=e.length,h=n.length,m=Math.floor(p/2),d=Math.floor(h/2);for(let f=0;f<u;f++){let t=Qe(r[f],o,i,m,l,e,!0);t=Qe(t,o,i,d,l,n,!1),s&&(0,Ye.e)(t,o,i,p,h),c.push(t)}return new y.default({width:o,height:i,pixelType:a,pixels:c,mask:l})}(t,n.row,n.col,s):function(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const{pixels:s,width:r,height:o,pixelType:i,mask:a}=t,l=s.length,u=[],{kernel:c,rows:p,cols:h}=e;for(let m=0;m<l;m++){const t=tn(s[m],r,o,p,h,a,c);n&&(0,Ye.e)(t,r,o,p,h),u.push(t)}return new y.default({width:r,height:o,pixelType:i,pixels:u,mask:a})}(t,e,s),{outputPixelType:o}=e;return o&&r.clamp(o),r}var nn;Xe.set(_.convolutionKernel.none,[0,0,0,0,1,0,0,0,0]),Xe.set(_.convolutionKernel.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),Xe.set(_.convolutionKernel.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),Xe.set(_.convolutionKernel.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),Xe.set(_.convolutionKernel.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),Xe.set(_.convolutionKernel.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),Xe.set(_.convolutionKernel.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),Xe.set(_.convolutionKernel.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),Xe.set(_.convolutionKernel.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),Xe.set(_.convolutionKernel.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),Xe.set(_.convolutionKernel.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),Xe.set(_.convolutionKernel.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),Xe.set(_.convolutionKernel.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),Xe.set(_.convolutionKernel.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),Xe.set(_.convolutionKernel.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),Xe.set(_.convolutionKernel.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),Xe.set(_.convolutionKernel.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),Xe.set(_.convolutionKernel.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),Xe.set(_.convolutionKernel.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),Xe.set(_.convolutionKernel.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),Xe.set(_.convolutionKernel.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),Xe.set(_.convolutionKernel.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),Xe.set(_.convolutionKernel.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);let sn=nn=class extends h{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(t){this._set("convolutionType",t);const e=Xe.get(t);if(!e||t===_.convolutionKernel.userDefined||t===_.convolutionKernel.none)return;const n=Math.sqrt(e.length);this._set("kernel",e),this._set("cols",n),this._set("rows",n)}clone(){return new nn({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:(0,o.clone)(this.raster)})}};(0,i._)([(0,a.MZ)({json:{type:Number,write:!0}})],sn.prototype,"rows",void 0),(0,i._)([(0,a.MZ)({json:{type:Number,write:!0}})],sn.prototype,"cols",void 0),(0,i._)([(0,a.MZ)({json:{name:"type",type:Number,write:!0}})],sn.prototype,"convolutionType",null),(0,i._)([(0,a.MZ)({json:{type:[Number],write:!0}})],sn.prototype,"kernel",void 0),sn=nn=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],sn);const rn=sn;let on=class extends b{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}get _normalizedKernel(){const{kernel:t,convolutionType:e}=this.functionArguments,n=t.reduce(((t,e)=>t+e));return-1===e||0===n||1===n?t:t.map((t=>t/n))}_bindSourceRasters(){const{convolutionType:t,rows:e,cols:n,kernel:s}=this.functionArguments;if(!Object.values(_.convolutionKernel).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==_.convolutionKernel.none&&e*n!==s.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const r=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(r.pixelType);const o=r.clone();o.pixelType=this.outputPixelType;const i=[_.convolutionKernel.none,_.convolutionKernel.sharpen,_.convolutionKernel.sharpen2,_.convolutionKernel.sharpening3x3,_.convolutionKernel.sharpening5x5];return(-1===t||"u8"!==this.outputPixelType&&!i.includes(t))&&(o.statistics=null,o.histograms=null),o.colormap=null,o.attributeTable=null,this.rasterInfo=o,{success:!0,supportsGPU:s.length<=25}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e||this.functionArguments.convolutionType===_.convolutionKernel.none)return e;const{rows:n,cols:s}=this.functionArguments,{_normalizedKernel:r}=this;return en(e,{kernel:r,rows:n,cols:s,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=new Float32Array(25);return t.set(this._normalizedKernel),{kernelRows:this.functionArguments.rows,kernelCols:this.functionArguments.cols,kernel:t,clampRange:(0,u.hP)(this.outputPixelType)}}};(0,i._)([(0,a.MZ)({json:{write:!0,name:"rasterFunction"}})],on.prototype,"functionName",void 0),(0,i._)([(0,a.MZ)({type:rn,json:{write:!0,name:"rasterFunctionArguments"}})],on.prototype,"functionArguments",void 0),(0,i._)([(0,a.MZ)()],on.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.MZ)()],on.prototype,"_normalizedKernel",null),on=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.ConvolutionFunction")],on);const an=on;var ln;const un=new Ot.J({0:"standard",1:"planform",2:"profile"},{useNumericKeys:!0});let cn=ln=class extends h{constructor(){super(...arguments),this.curvatureType="standard",this.zFactor=1}readCurvatureType(t,e){return un.fromJSON(e.type??e.curvatureType??0)}clone(){return new ln({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};(0,i._)([(0,a.MZ)({json:{write:{target:"type"}}}),(0,Gt.e)(un)],cn.prototype,"curvatureType",void 0),(0,i._)([(0,de.w)("curvatureType",["type","curvatureType"])],cn.prototype,"readCurvatureType",null),(0,i._)([(0,a.MZ)({type:Number,json:{write:!0}})],cn.prototype,"zFactor",void 0),cn=ln=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.CurvatureFunctionArguments")],cn);const pn=cn;let hn=class extends b{constructor(){super(...arguments),this.functionName="Curvature",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.bandCount=1,this._removeStatsHistColormapVAT(t),this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{zFactor:n,curvatureType:s}=this.functionArguments,{extent:r,primaryPixelSizes:o}=t,i=o?.[0],a=i??(r?{x:r.width/e.width,y:r.height/e.height}:{x:1,y:1}),l=this.isGCS&&n>=1?n*Dt.rk:n;return(0,Dt.E0)(e,{zFactor:l,curvatureType:s,resolution:a})}_getWebGLParameters(){const{zFactor:t,curvatureType:e}=this.functionArguments;return{curvatureType:e,zFactor:this.isGCS&&t>=1?t*Dt.rk:t}}};(0,i._)([(0,a.MZ)({json:{write:!0,name:"rasterFunction"}})],hn.prototype,"functionName",void 0),(0,i._)([(0,a.MZ)({type:pn,json:{write:!0,name:"rasterFunctionArguments"}})],hn.prototype,"functionArguments",void 0),(0,i._)([(0,a.MZ)()],hn.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],hn.prototype,"isGCS",void 0),hn=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.CurvatureFunction")],hn);const mn=hn;var dn;let fn=dn=class extends h{constructor(){super(...arguments),this.bandIds=[],this.bandNames=[],this.bandWavelengths=[],this.missingBandAction=$t.Wb.bestMatch}clone(){return new dn({bandIds:this.bandIds?.slice(),bandNames:this.bandNames?.slice(),bandWavelengths:this.bandWavelengths?.slice(),missingBandAction:this.missingBandAction,method:this.method,wavelengthMatchTolerance:this.wavelengthMatchTolerance})}};(0,i._)([(0,a.MZ)({json:{write:!0}})],fn.prototype,"bandIds",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],fn.prototype,"bandNames",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],fn.prototype,"bandWavelengths",void 0),(0,i._)([(0,Gt.e)({0:"name",1:"wavelength",2:"id"})],fn.prototype,"method",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],fn.prototype,"missingBandAction",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],fn.prototype,"wavelengthMatchTolerance",void 0),fn=dn=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],fn);const gn=fn;let yn=class extends b{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{functionArguments:t,sourceRasterInfos:e}=this,n=e[0],{method:s,bandNames:r,bandWavelengths:o,bandIds:i,missingBandAction:a}=t,l=r?.length&&("name"===s||"id"!==s&&!i?.length),u=o?.length&&("wavelength"===s||"id"!==s&&!i?.length),c=a===$t.Wb.fail,p=l?function(t,e){const n=t.bandInfos.map((t=>{let{name:e}=t;return e.toLowerCase()})),s=[];for(let r=0;r<e.length;r++){const t=e[r].toLowerCase();let o=n.indexOf(t);if(-1===o&&"nearinfrared"===t&&(o=n.findIndex((t=>t.startsWith("nearinfrared_1"))),-1===o&&(o=n.findIndex((t=>t.startsWith("nearinfrared"))))),-1===o)return null;s.push(o)}return s}(n,r):u?function(t,e,n,s){let{wavelengthMatchTolerance:r}=n;const{bandInfos:o}=t,i=[];for(let l=0;l<o.length;l++){const{minWavelength:t,maxWavelength:e}=o[l];if(!t||!e)return null;i.push({minWavelength:t,maxWavelength:e})}const a=[];for(let l=0;l<e.length;l++){const t=e[l];let n=!1,o=-1,u=Number.MAX_VALUE;for(let e=0;e<i.length;e++){const s=i[e],r=t>=s.minWavelength&&t<=s.maxWavelength,a=Math.abs(t-(s.minWavelength+s.maxWavelength)/2);r?a<u&&(n=!0,o=e,u=a):!n&&a<u&&(o=e,u=a)}if(!n&&r&&u<r&&(n=!0),!n&&s)return null;a.push(o)}return a}(n,o,this.functionArguments,c):function(t,e,n){const{bandCount:s}=t;return!e?.length||n&&e.some((t=>t<0||t>=s))?null:e}(n,i,c);if(null==p)return{success:!1,supportsGPU:!1,error:`extract-band-function: Invalid ${l?"band names":u?"band wavelengths":"band ids"} for the imagery data source`};this.functionArguments.bandIds=p,this.functionArguments.method="id",this.outputPixelType=this._getOutputPixelType("f32");const h=n.clone();h.pixelType=this.outputPixelType,h.bandCount=p.length;const{statistics:m,histograms:d}=h;null!=m&&m.length&&(h.statistics=p.map((t=>m[t]||m[m.length-1]))),null!=d&&d.length&&(h.histograms=p.map((t=>d[t]||d[d.length-1]))),h.multidimensionalInfo&&h.multidimensionalInfo.variables.forEach((t=>{const{statistics:e,histograms:n}=t;null!=e&&e.length&&(t.statistics=p.map((t=>e[t]||e[e.length-1]))),null!=n&&n.length&&(t.histograms=p.map((t=>n[t]||n[n.length-1])))}));let f=h.keyProperties?.BandProperties;return f?.length&&(f=p.map((t=>t>=f.length?f[f.length-1]:f[t])),h.keyProperties={...h.keyProperties,BandProperties:f}),this.rasterInfo=h,{success:!0,supportsGPU:h.bandCount<=3}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const n=e.pixels.length,s=this.functionArguments.bandIds.map((t=>t>=n?n-1:t));return e.extractBands(s)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],0===t.length?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let e=0;e<3;e++)t[e]=Math.min(t[e],2)}return{bandIndexMat3:qt(t)}}_getInputBandIds(t){const e=t.length;return this.functionArguments.bandIds.map((t=>t>=e?e-1:t)).map((e=>t[e]))}};(0,i._)([(0,a.MZ)({json:{write:!0,name:"rasterFunction"}})],yn.prototype,"functionName",void 0),(0,i._)([(0,a.MZ)({type:gn,json:{write:!0,name:"rasterFunctionArguments"}})],yn.prototype,"functionArguments",void 0),(0,i._)([(0,a.MZ)()],yn.prototype,"rasterArgumentNames",void 0),yn=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.ExtractBandFunction")],yn);const xn=yn;var vn;let wn=vn=class extends h{clone(){return new vn({conversionParameters:[...this.conversionParameters],raster:this.raster})}};(0,i._)([(0,a.MZ)({type:[Number],json:{write:!0}})],wn.prototype,"conversionParameters",void 0),wn=vn=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.GrayscaleFunctionArguments")],wn);const bn=wn;let _n=class extends b{constructor(){super(...arguments),this.functionName="Grayscale",this.functionArguments=null,this.rasterArgumentNames=["raster"]}get _normalizedWeights(){const{conversionParameters:t}=this.functionArguments,e=t.reduce(((t,e)=>t+e));return t.map((t=>t/e))}_bindSourceRasters(){const{conversionParameters:t}=this.functionArguments;if(!t?.length)return{success:!1,supportsGPU:!1,error:"missing valid conversion parameters."};const e=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType;const n=3===t.length||3===e.bandCount&&t.length>3;return e.bandCount=1,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:n}}_processPixels(t){const e=t.pixelBlocks?.[0];return null==e?null:function(t,e,n){const{pixels:s,width:r,height:o,mask:i,bandMasks:a}=t,l=r*o,c=a?.length?y.default.combineBandMasks(a):i,p=Math.min(e.length,s.length),h=n.startsWith("f"),m=!h&&n!==t.pixelType,[d,f]=(0,u.hP)(n),g=y.default.createEmptyBand(n,l);for(let u=0;u<o;u++){let t=u*r;for(let n=0;n<r;n++,t++)if(!c||c[t]){let n=0;for(let r=0;r<p;r++)n+=e[r]*s[r][t];h||(n=Math.round(n),m&&(n=n>f?f:n<d?d:n)),g[t]=n}}const x=new y.default({width:r,height:o,pixels:[g],pixelType:n,mask:c});return x.updateStatistics(),x}(e,this._normalizedWeights,this.outputPixelType)}_getWebGLParameters(){return{weights:this._normalizedWeights}}};(0,i._)([(0,a.MZ)({json:{write:!0,name:"rasterFunction"}})],_n.prototype,"functionName",void 0),(0,i._)([(0,a.MZ)({type:bn,json:{write:!0,name:"rasterFunctionArguments"}})],_n.prototype,"functionArguments",void 0),(0,i._)([(0,a.MZ)()],_n.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.MZ)()],_n.prototype,"_normalizedWeights",null),_n=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.GrayscaleFunction")],_n);const An=_n;var Tn;const Mn=new Ot.J({0:"traditional",1:"multi-directional"},{useNumericKeys:!0}),Pn=new Ot.J({1:"degree",2:"percent-rise",3:"scaled"},{useNumericKeys:!0});let Nn=Tn=class extends h{constructor(){super(...arguments),this.altitude=45,this.azimuth=315,this.hillshadeType="traditional",this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.slopeType="degree",this.zFactor=1,this.removeEdgeEffect=!1}clone(){return new Tn({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};(0,i._)([(0,a.MZ)({type:Number,json:{write:!0}})],Nn.prototype,"altitude",void 0),(0,i._)([(0,a.MZ)({type:Number,json:{write:!0}})],Nn.prototype,"azimuth",void 0),(0,i._)([(0,a.MZ)(),(0,Gt.e)(Mn)],Nn.prototype,"hillshadeType",void 0),(0,i._)([(0,a.MZ)({type:Number,json:{write:!0,name:"psPower"}})],Nn.prototype,"pixelSizePower",void 0),(0,i._)([(0,a.MZ)({type:Number,json:{write:!0,name:"psZFactor"}})],Nn.prototype,"pixelSizeFactor",void 0),(0,i._)([(0,a.MZ)(),(0,Gt.e)(Pn)],Nn.prototype,"slopeType",void 0),(0,i._)([(0,a.MZ)({type:Number,json:{write:!0}})],Nn.prototype,"zFactor",void 0),(0,i._)([(0,a.MZ)({type:Boolean,json:{write:!0}})],Nn.prototype,"removeEdgeEffect",void 0),Nn=Tn=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.HillshadeFunctionArguments")],Nn);const Fn=Nn;let kn=class extends b{constructor(){super(...arguments),this.functionName="Hillshade",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"hillshade-function: source data must be single band"};this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone();return this._removeStatsHistColormapVAT(e),e.pixelType=this.outputPixelType,e.bandCount=1,e.statistics=[{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=e,this.isGCS=e.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(!e)return null;const{extent:n,primaryPixelSizes:s}=t,r=s?.[0],o=r??(n?{x:n.width/e.width,y:n.height/e.height}:{x:1,y:1}),i=(0,Dt.PP)(this.functionArguments,o,this.isGCS),a=(0,Dt.fw)(e,i);return a.pixelType=this.outputPixelType,a}_getWebGLParameters(){const t=(0,Dt.PP)(this.functionArguments,{x:1,y:1},this.isGCS),e=(0,Dt.ng)(t),{slopeType:n,zFactor:s,pixelSizeFactor:r,pixelSizePower:o}=this.functionArguments,i="scaled"===n,a=(0,u.zw)(this.outputPixelType);return{...e,zFactor:s,gcsFactor:this.isGCS?Dt.rk:1,pixelSizeFactor:i?r:0,pixelSizePower:i?o:0,isOutputRounded:a}}};(0,i._)([(0,a.MZ)({json:{write:!0,name:"rasterFunction"}})],kn.prototype,"functionName",void 0),(0,i._)([(0,a.MZ)({type:Fn,json:{write:!0,name:"rasterFunctionArguments"}})],kn.prototype,"functionArguments",void 0),(0,i._)([(0,a.MZ)()],kn.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],kn.prototype,"isGCS",void 0),kn=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.HillshadeFunction")],kn);const Rn=kn;var In;let Bn=In=class extends h{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(t,e){e.rasters=t.map((t=>"number"==typeof t||"string"==typeof t?t:t.toJSON()))}clone(){return new In({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:(0,o.clone)(this.rasters)})}};(0,i._)([(0,a.MZ)({json:{write:!0}})],Bn.prototype,"operation",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],Bn.prototype,"rasters",void 0),(0,i._)([(0,Ce.K)("rasters")],Bn.prototype,"writeRasters",null),(0,i._)([(0,a.MZ)({json:{write:!0}})],Bn.prototype,"processAsMultiband",void 0),Bn=In=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.LocalFunctionArguments")],Bn);const Cn=Bn;let Sn=class extends b{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:n}=e,{processAsMultiband:s}=this.functionArguments;if(t.some((t=>t.bandCount!==n)))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:r,rasters:o}=this.functionArguments,i=M[r];if(!(999===i||o.length===i||o.length<=1&&1===i))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${i}`};const a=e.clone();return a.bandCount=999!==i||s?n:1,this._removeStatsHistColormapVAT(a),this._updateStatistics(a),this._updatePixelType(a),this.rasterInfo=a,{success:!0,supportsGPU:1===a.bandCount&&i<=3}}_processPixels(t){const{pixelBlocks:e}=t;return null==e||e.some((t=>null==t))?null:kt(e,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=M[t],n=Object.keys(_.localOperators).find((e=>_.localOperators[e]===t))?.toLowerCase()??"undefined",s=this.outputPixelType??"f32";let[r,o]=(0,u.hP)(s);const i=(0,u.zw)(s);return i&&(r-=1e-4,o+=1e-4),{imageCount:e,operationName:n,domainRange:[r,o],isOutputRounded:i}}_updateStatistics(t){const e=this.sourceRasterInfos[0],{operation:n}=this.functionArguments,s=T(n)?.domain;if(s){t.statistics=[];for(let e=0;e<t.bandCount;e++)t.statistics[e]={min:s[0],max:s[1],avg:(s[0]+s[1])/2,stddev:(s[0]+s[1])/10}}else 45===n&&e.statistics?.length&&(t.statistics=e.statistics.map((t=>({min:-t.max,max:-t.min,avg:null!=t.avg?-t.avg:void 0,stddev:null!=t.stddev?-t.stddev:void 0}))))}_updatePixelType(t){const{statistics:e,pixelType:n}=this.sourceRasterInfos[0],{operation:s}=this.functionArguments,{domain:r,isInteger:o}=T(s)??{domain:null,isInteger:!1};let i="f32";if(r&&o)i=(0,u.X1)(r[0],r[1]);else if(30===s){const t=e?.[0];i=t?(0,u.X1)(t.min,t.max):(0,u.zw)(n)?n:"s32"}else if(45===s&&(0,u.zw)(n)){const t=e?.map((t=>{let{max:e}=t;return-e})),s=e?.map((t=>{let{min:e}=t;return-e})),r=t?.length?Math.min(...t):null,o=s?.length?Math.min(...s):null;i=null!=r&&null!=o?(0,u.X1)(r,o):n.startsWith("s")?n.replace("s","u"):"u1"===n||"u2"===n||"u4"===n?"s8":"u8"===n?"s16":"s32"}t.pixelType=this.outputPixelType=this._getOutputPixelType(i)}};(0,i._)([(0,a.MZ)({json:{write:!0,name:"rasterFunction"}})],Sn.prototype,"functionName",void 0),(0,i._)([(0,a.MZ)({type:Cn,json:{write:!0,name:"rasterFunctionArguments"}})],Sn.prototype,"functionArguments",void 0),(0,i._)([(0,a.MZ)()],Sn.prototype,"rasterArgumentNames",void 0),Sn=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.LocalFunction")],Sn);const Dn=Sn;var jn,Zn=n(64682);let Gn=jn=class extends h{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=$t.IB.matchAny}get normalizedNoDataValues(){const{noDataValues:t}=this;if(!t?.length)return null;let e=!1;const n=t.map((t=>{if("number"==typeof t)return e=!0,[t];if("string"==typeof t){const n=t.trim().split(" ").filter((t=>""!==t.trim())).map((t=>Number(t)));return e=e||n.length>0,0===n.length?null:n}return null}));return e?n:null}clone(){return new jn({includedRanges:this.includedRanges?.slice()??[],noDataValues:this.noDataValues?.slice()??[],noDataInterpretation:this.noDataInterpretation})}};(0,i._)([(0,a.MZ)({json:{write:!0}})],Gn.prototype,"includedRanges",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],Gn.prototype,"noDataValues",void 0),(0,i._)([(0,a.MZ)()],Gn.prototype,"normalizedNoDataValues",null),(0,i._)([(0,a.MZ)({json:{write:!0}})],Gn.prototype,"noDataInterpretation",void 0),Gn=jn=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.MaskFunctionArguments")],Gn);const On=Gn;let zn=class extends b{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:n,normalizedNoDataValues:s}=this.functionArguments;if(!n?.length&&!s?.length)return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let r=[];for(let i=0;i<t.bandCount;i++){const t=(0,$t.Wt)(e,n?.slice(2*i,2*i+2),s?.[i]);if(null==t){r=null;break}r.push(t)}this.lookups=r;const o=null!=s&&s.every((t=>t?.length===s[0]?.length));return{success:!0,supportsGPU:(!n||n.length<=2*$t.et)&&(!s||o&&s[0].length<=$t.et)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{outputPixelType:n,lookups:s}=this,{includedRanges:r,noDataInterpretation:o,normalizedNoDataValues:i}=this.functionArguments,a=o===$t.IB.matchAll;return(0,$t.dK)(e,{includedRanges:r,noDataValues:i,outputPixelType:n,matchAll:a,lookups:s})}_getWebGLParameters(){const{includedRanges:t,normalizedNoDataValues:e}=this.functionArguments,n=new Float32Array($t.et);n.fill(Zn.pq),e?.[0]?.length&&n.set(e[0]);const s=new Float32Array($t.et);for(let r=0;r<s.length;r+=2)s[r]=t?.[r]??-Zn.pq,s[r+1]=t?.[r+1]??Zn.pq;return t?.length&&s.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:n,includedRanges:s}}};(0,i._)([(0,a.MZ)({json:{write:!0,name:"rasterFunction"}})],zn.prototype,"functionName",void 0),(0,i._)([(0,a.MZ)({type:On,json:{write:!0,name:"rasterFunctionArguments"}})],zn.prototype,"functionArguments",void 0),(0,i._)([(0,a.MZ)()],zn.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],zn.prototype,"lookups",void 0),zn=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.MaskFunction")],zn);const En=zn;var Ln;let Vn=Ln=class extends h{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:t,infraredBandID:e,scientificOutput:n}=this;return new Ln({visibleBandID:t,infraredBandID:e,scientificOutput:n})}};(0,i._)([(0,a.MZ)({json:{write:!0}})],Vn.prototype,"visibleBandID",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],Vn.prototype,"infraredBandID",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],Vn.prototype,"scientificOutput",void 0),Vn=Ln=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],Vn);const Un=Vn;let Wn=class extends b{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t,visibleBandID:e,infraredBandID:n}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const s=this.sourceRasterInfos[0],r=Math.max(e,n);if(s.bandCount<2||r>=s.bandCount)return{success:!1,supportsGPU:!1,error:"ndvi-function: source raster has insufficient amount of raster bands"};if(e<0||n<0)return{success:!1,supportsGPU:!1,error:"ndvi-function: invalid visible or infrared band id"};const o=s.clone();o.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(o),o.bandCount=1,o.keyProperties={...o.keyProperties,BandProperties:void 0};const[i,a,l,u]=t?[-1,1,0,.1]:[0,200,100,10];return o.statistics=[{min:i,max:a,avg:l,stddev:u}],this.rasterInfo=o,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{visibleBandID:n,infraredBandID:s,scientificOutput:r}=this.functionArguments;return function(t,e,n,s){const{mask:r,pixels:o,width:i,height:a}=t,l=o[n],u=o[e],c=u.length,p=s?new Uint8Array(c):new Float32Array(c),h=s?100:1,m=s?100.5:0;for(let f=0;f<c;f++)if(null==r||r[f]){const t=l[f],e=u[f],n=t+e;n&&(p[f]=(t-e)/n*h+m)}const d=new y.default({width:i,height:a,mask:r,pixelType:s?"u8":"f32",pixels:[p]});return d.updateStatistics(),d}(e,n,s,!r)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:e,scientificOutput:n}=this.functionArguments;return{bandIndexMat3:qt(this.isInputBandIdsSwizzled?[0,1,2]:[e,t,0]),scaled:!n}}_getInputBandIds(t){const{visibleBandID:e,infraredBandID:n}=this.functionArguments;return[n,e,0].map((e=>t[e]))}};(0,i._)([(0,a.MZ)({json:{write:!0,name:"rasterFunction"}})],Wn.prototype,"functionName",void 0),(0,i._)([(0,a.MZ)({type:Un,json:{write:!0,name:"rasterFunctionArguments"}})],Wn.prototype,"functionArguments",void 0),(0,i._)([(0,a.MZ)()],Wn.prototype,"rasterArgumentNames",void 0),Wn=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.NDVIFunction")],Wn);const $n=Wn;var Kn;let Hn=Kn=class extends h{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new Kn({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};(0,i._)([(0,a.MZ)({json:{write:!0}})],Hn.prototype,"inputRanges",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],Hn.prototype,"outputValues",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],Hn.prototype,"noDataRanges",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],Hn.prototype,"allowUnmatched",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],Hn.prototype,"isLastInputRangeInclusive",void 0),Hn=Kn=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.RemapFunctionArguments")],Hn);const qn=Hn;let Jn=class extends b{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,t.bandCount=1;const{statistics:n}=t;this._removeStatsHistColormapVAT(t);const{allowUnmatched:s,outputValues:r,inputRanges:o,noDataRanges:i,isLastInputRangeInclusive:a}=this.functionArguments;if(null!=n&&n.length&&r?.length)if(s){const e=Math.min.apply(null,[...r,n[0].min]),s=Math.max.apply(null,[...r,n[0].max]);t.statistics=[{...n[0],min:e,max:s}]}else{let e=r[0],s=e;for(let t=0;t<r.length;t++)e=e>r[t]?r[t]:e,s=s>r[t]?s:r[t];t.statistics=[{...n[0],min:e,max:s}]}return this.rasterInfo=t,this.lookup=s?null:(0,$t.XU)({srcPixelType:e,inputRanges:o,outputValues:r,noDataRanges:i,allowUnmatched:s,isLastInputRangeInclusive:a,outputPixelType:this.outputPixelType}),{success:!0,supportsGPU:(!r||r.length<=$t.et)&&(!i||i.length<=$t.et)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{lookup:n,outputPixelType:s}=this;if(n){const t=(0,$t.eH)(e,{lut:[n.lut],offset:n.offset,outputPixelType:s});return null!=t&&n.mask&&(t.mask=(0,$t.UK)(e.pixels[0],e.mask,n.mask,n.offset,"u8")),t}const{inputRanges:r,outputValues:o,noDataRanges:i,allowUnmatched:a,isLastInputRangeInclusive:l}=this.functionArguments;return(0,$t.Ew)(e,{inputRanges:r,outputValues:o,noDataRanges:i,outputPixelType:s,allowUnmatched:a,isLastInputRangeInclusive:l})}_getWebGLParameters(){const{allowUnmatched:t,noDataRanges:e,isLastInputRangeInclusive:n}=this.functionArguments,s=new Float32Array(3*$t.et),r=1e-5,o=this.functionArguments.inputRanges??[],i=this.functionArguments.outputValues??[],a=i.length;for(let u=0;u<$t.et;u++)s[3*u]=o[2*u]??Zn.pq-1,s[3*u+1]=o[2*u+1]??Zn.pq,s[3*u+2]=i[u]??0,u<a&&(u>0&&(s[3*u]-=r),(u<a-1||!n)&&(s[3*u+1]-=r));const l=new Float32Array(2*$t.et);return l.fill(Zn.pq),e?.length&&l.set(e),{allowUnmatched:t,rangeMaps:s,noDataRanges:l,clampRange:(0,u.hP)(this.outputPixelType)}}};(0,i._)([(0,a.MZ)({json:{write:!0,name:"rasterFunction"}})],Jn.prototype,"functionName",void 0),(0,i._)([(0,a.MZ)({type:qn,json:{write:!0,name:"rasterFunctionArguments"}})],Jn.prototype,"functionArguments",void 0),(0,i._)([(0,a.MZ)()],Jn.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],Jn.prototype,"lookup",void 0),Jn=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.RemapFunction")],Jn);const Yn=Jn;var Xn;let Qn=Xn=class extends Fn{readColorRamp(t){if("string"==typeof t){const e=fe.kH.jsonValues.find((e=>e.toLowerCase()===t.toLowerCase()));return e?(0,fe.M5)(fe.kH.fromJSON(e)):null}return"toJSON"in t?t.toJSON():t}clone(){return new Xn({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,colorRamp:this.colorRamp,colormap:this.colormap,raster:this.raster})}};(0,i._)([(0,a.MZ)({json:{write:!0}})],Qn.prototype,"colorRamp",void 0),(0,i._)([(0,de.w)("colorRamp")],Qn.prototype,"readColorRamp",null),(0,i._)([(0,a.MZ)({type:[[Number]],json:{write:!0}})],Qn.prototype,"colormap",void 0),Qn=Xn=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.ShadedReliefFunctionArguments")],Qn);const ts=Qn;let es=class extends b{constructor(){super(...arguments),this.functionName="ShadedRelief",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: source data must be single band"};let{colorRamp:e,colormap:n}=this.functionArguments;if(!e&&!n?.length)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a color ramp argument must be specified"};this.outputPixelType=this._getOutputPixelType("u8");const s=t.clone();this._removeStatsHistColormapVAT(s),s.pixelType=this.outputPixelType,s.bandCount=3,s.statistics=[{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=s,this.isGCS=s.spatialReference?.isGeographic??!1,n?.length||(n=(0,fe.R8)(e,{interpolateAlpha:!0}));const{indexedColormap:r,offset:o}=(0,$t.zg)({colormap:n});if(!r?.length)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a valid colorramp is required"};const i=(0,fe.S2)(r);return this.lookup={indexedColormap:r,offset:o,hsvMap:i},{success:!0,supportsGPU:(0,ke.WN)(r)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(!e||!this.lookup)return null;let n=t.primaryPixelSizes?.[0];if(null==n){const{extent:s}=t;n=s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1}}const s=(0,Dt.PP)(this.functionArguments,n,this.isGCS),r=(0,Dt.fw)(e,s),o=this.sourceRasterInfos[0].statistics?.[0]??{min:0,max:8e3};return(0,Dt.SC)(r,e,this.lookup.hsvMap,o),r.pixelType=this.outputPixelType,r}_getWebGLParameters(){const t=(0,Dt.PP)(this.functionArguments,{x:1,y:1},this.isGCS),e=(0,Dt.ng)(t),{slopeType:n,zFactor:s,pixelSizeFactor:r,pixelSizePower:o}=this.functionArguments,i="scaled"===n,{indexedColormap:a,offset:l}=this.lookup,c=this.sourceRasterInfos[0].statistics?.[0],p=(0,u.zw)(this.outputPixelType);return{...e,indexedColormap:a,offset:l,zFactor:s,gcsFactor:this.isGCS?Dt.rk:1,pixelSizeFactor:i?r:0,pixelSizePower:i?o:0,minValue:c?.min??0,maxValue:c?.max??8e3,isOutputRounded:p}}};(0,i._)([(0,a.MZ)({json:{write:!0,name:"rasterFunction"}})],es.prototype,"functionName",void 0),(0,i._)([(0,a.MZ)({type:ts,json:{write:!0,name:"rasterFunctionArguments"}})],es.prototype,"functionArguments",void 0),(0,i._)([(0,a.MZ)()],es.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],es.prototype,"isGCS",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],es.prototype,"lookup",void 0),es=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.ShadedReliefFunction")],es);const ns=es;var ss;const rs=new Ot.J({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let os=ss=class extends h{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new ss({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};(0,i._)([(0,Gt.e)(rs)],os.prototype,"slopeType",void 0),(0,i._)([(0,a.MZ)({type:Number,json:{write:!0}})],os.prototype,"zFactor",void 0),(0,i._)([(0,a.MZ)({type:Number,json:{name:"psPower",write:!0}})],os.prototype,"pixelSizePower",void 0),(0,i._)([(0,a.MZ)({type:Number,json:{name:"psZFactor",write:!0}})],os.prototype,"pixelSizeFactor",void 0),(0,i._)([(0,a.MZ)({type:Boolean,json:{write:!0}})],os.prototype,"removeEdgeEffect",void 0),os=ss=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],os);const is=os;let as=class extends b{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(t),t.statistics="percent-rise"!==this.functionArguments.slopeType?[{min:0,max:90,avg:1,stddev:1}]:null,t.bandCount=1,this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{zFactor:n,slopeType:s,pixelSizePower:r,pixelSizeFactor:o}=this.functionArguments,{isGCS:i}=this,{extent:a,primaryPixelSizes:l}=t,u=l?.[0],c=u??(a?{x:a.width/e.width,y:a.height/e.height}:{x:1,y:1});return(0,Dt.yy)(e,{zFactor:n,slopeType:s,pixelSizePower:r,pixelSizeFactor:o,isGCS:i,resolution:c})}_getWebGLParameters(){const{zFactor:t,slopeType:e,pixelSizeFactor:n,pixelSizePower:s}=this.functionArguments;return{zFactor:this.isGCS&&t>=1?t*Dt.rk:t,slopeType:e,pixelSizeFactor:n??0,pixelSizePower:s??0,isOutputRounded:(0,u.zw)(this.outputPixelType)}}};(0,i._)([(0,a.MZ)({json:{write:!0,name:"rasterFunction"}})],as.prototype,"functionName",void 0),(0,i._)([(0,a.MZ)({type:is,json:{write:!0,name:"rasterFunctionArguments"}})],as.prototype,"functionArguments",void 0),(0,i._)([(0,a.MZ)()],as.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],as.prototype,"isGCS",void 0),as=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.SlopeFunction")],as);const ls=as;var us,cs=n(9513);let ps=us=class extends h{constructor(){super(...arguments),this.rows=3,this.cols=3,this.fillNoDataOnly=!1,this.statisticsType="min"}clone(){return new us({rows:this.rows,cols:this.cols,fillNoDataOnly:this.fillNoDataOnly,statisticsType:this.statisticsType,raster:(0,o.clone)(this.raster)})}};(0,i._)([(0,a.MZ)({json:{write:!0,read:{source:["kernelRows","rows"],reader:(t,e)=>Number(t??e?.kernelRows??3)}}})],ps.prototype,"rows",void 0),(0,i._)([(0,a.MZ)({json:{write:!0,read:{source:["kernelCols","cols"],reader:(t,e)=>Number(t??e?.kernelCols??3)}}})],ps.prototype,"cols",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],ps.prototype,"fillNoDataOnly",void 0),(0,i._)([(0,a.MZ)({json:{read:{source:["statisticsType","type"],reader:(t,e)=>cs.a.fromJSON(e?.statisticsType??e?.type)??"min"},write:{target:"type"}}}),(0,Gt.e)(cs.a)],ps.prototype,"statisticsType",void 0),ps=us=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.StatisticsFunctionArguments")],ps);const hs=ps;let ms=class extends b{constructor(){super(...arguments),this.functionName="Statistics",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{type:t}=this.functionArguments.toJSON();if(t<1||t>7)return{success:!1,supportsGPU:!1,error:`statistics-function: the given statistics type is not supported ${t}`};const e=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const n=e.clone();n.pixelType=this.outputPixelType;const{statisticsType:s}=this.functionArguments;return"stddev"===s&&this._removeStatsHistColormapVAT(n),this.rasterInfo=n,{success:!0,supportsGPU:n.bandCount<=3&&t<5}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{statisticsType:n,rows:s,cols:r,fillNoDataOnly:o}=this.functionArguments;return(0,cs.y)(e,{kernelRows:s,kernelCols:r,fillNoDataOnly:o,outputPixelType:this.outputPixelType,statisticsType:n,mirrorEdges:!0})}_getWebGLParameters(){const{rows:t,cols:e,statisticsType:n,fillNoDataOnly:s}=this.functionArguments;return{fillNoDataOnly:s,kernelRows:t,kernelCols:e,statisticsType:n,clampRange:(0,u.hP)(this.outputPixelType)}}};(0,i._)([(0,a.MZ)({json:{write:!0,name:"rasterFunction"}})],ms.prototype,"functionName",void 0),(0,i._)([(0,a.MZ)({type:hs,json:{write:!0,name:"rasterFunctionArguments"}})],ms.prototype,"functionArguments",void 0),(0,i._)([(0,a.MZ)()],ms.prototype,"rasterArgumentNames",void 0),ms=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.StatisticsFunction")],ms);const ds=ms;var fs;let gs=fs=class extends h{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(t,e){if(!t?.length)return null;const n=[];return t.forEach((t=>{const e={min:t.min,max:t.max,avg:t.avg??t.mean,stddev:t.stddev??t.standardDeviation};n.push(e)})),n}writeStatistics(t,e,n){if(!t?.length)return;const s=[];t.forEach((t=>{const e={...t,mean:t.avg,standardDeviation:t.stddev};delete e.avg,delete e.stddev,s.push(e)})),e[n]=s}clone(){return new fs({statistics:(0,o.clone)(this.statistics),histograms:(0,o.clone)(this.histograms)})}};(0,i._)([(0,a.MZ)({json:{write:!0}})],gs.prototype,"statistics",void 0),(0,i._)([(0,de.w)("statistics")],gs.prototype,"readStatistics",null),(0,i._)([(0,Ce.K)("statistics")],gs.prototype,"writeStatistics",null),(0,i._)([(0,a.MZ)({json:{write:!0}})],gs.prototype,"histograms",void 0),gs=fs=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],gs);const ys=gs;let xs=class extends b{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone(),{statistics:n,histograms:s}=this.functionArguments;return s&&(e.histograms=s),n&&(e.statistics=n),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};(0,i._)([(0,a.MZ)({json:{write:!0,name:"rasterFunction"}})],xs.prototype,"functionName",void 0),(0,i._)([(0,a.MZ)({type:ys,json:{write:!0,name:"rasterFunctionArguments"}})],xs.prototype,"functionArguments",void 0),(0,i._)([(0,a.MZ)()],xs.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],xs.prototype,"indexedColormap",void 0),(0,i._)([(0,a.MZ)()],xs.prototype,"isNoopProcess",void 0),xs=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],xs);const vs=xs;var ws;const bs=new Ot.J({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let _s=ws=class extends h{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(t,e,n){t?.length&&(Array.isArray(t[0])||(t=t.map((t=>[t.min,t.max,t.avg,t.stddev]))),e[n]=t)}clone(){return new ws({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:(0,o.clone)(this.statistics),gamma:(0,o.clone)(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:(0,o.clone)(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};(0,i._)([(0,a.MZ)({type:Boolean,json:{write:!0}})],_s.prototype,"computeGamma",void 0),(0,i._)([(0,a.MZ)({type:Boolean,json:{name:"dra",write:!0}})],_s.prototype,"dynamicRangeAdjustment",void 0),(0,i._)([(0,a.MZ)({type:[Number],json:{write:!0}})],_s.prototype,"gamma",void 0),(0,i._)([(0,a.MZ)()],_s.prototype,"histograms",void 0),(0,i._)([(0,a.MZ)({type:Number,json:{write:!0}})],_s.prototype,"maxPercent",void 0),(0,i._)([(0,a.MZ)({type:Number,json:{write:!0}})],_s.prototype,"minPercent",void 0),(0,i._)([(0,a.MZ)({type:Number,json:{write:!0}})],_s.prototype,"numberOfStandardDeviations",void 0),(0,i._)([(0,a.MZ)({type:Number,json:{name:"max",write:!0}})],_s.prototype,"outputMax",void 0),(0,i._)([(0,a.MZ)({type:Number,json:{name:"min",write:!0}})],_s.prototype,"outputMin",void 0),(0,i._)([(0,a.MZ)({type:Number,json:{write:!0}})],_s.prototype,"sigmoidStrengthLevel",void 0),(0,i._)([(0,a.MZ)({json:{type:[[Number]],write:!0}})],_s.prototype,"statistics",void 0),(0,i._)([(0,Ce.K)("statistics")],_s.prototype,"writeStatistics",null),(0,i._)([(0,Gt.e)(bs)],_s.prototype,"stretchType",void 0),(0,i._)([(0,a.MZ)({type:Boolean,json:{write:!0}})],_s.prototype,"useGamma",void 0),_s=ws=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.StretchFunctionArguments")],_s);const As=_s;let Ts=class extends b{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:e}=t,{functionArguments:n}=this,{dynamicRangeAdjustment:s,gamma:r,useGamma:o}=n;if(!s&&["u8","u16","s8","s16"].includes(e)){const s=(0,He.DP)(n.toJSON(),{rasterInfo:t}),i=(0,u.zw)(this.outputPixelType)?"round":"float";this.lookup=(0,He.RP)({pixelType:e,...s,gamma:o?r:null,rounding:i}),this.cutOffs=s}else s||(this.cutOffs=(0,He.DP)(n.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(e);const i=t.clone();i.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(i),"u8"===this.outputPixelType&&(i.keyProperties.DataType="processed");const{outputMin:a=0,outputMax:l=255}=this.functionArguments;i.statistics=[];for(let u=0;u<i.bandCount;u++)i.statistics[u]={min:a,max:l};return this.rasterInfo=i,{success:!0,supportsGPU:!s}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{lookup:n}=this;if(n)return(0,$t.eH)(e,{...n,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:s}=this,r=this.cutOffs||(0,He.DP)(s.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:e}),o=s.useGamma?s.gamma:null;return(0,He._N)(e,{...r,gamma:o,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:e=255,gamma:n,useGamma:s}=this.functionArguments,r=this.rasterInfo.bandCount>=2?3:1,o=s&&n?.length?(0,He.Nh)(r,n):[1,1,1],{minCutOff:i,maxCutOff:a}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};1===i.length&&(i[1]=i[2]=i[0],a[1]=a[2]=a[0]);const l=a.map(((n,s)=>(e-t)/(a[s]-i[s]))),c=(0,u.zw)(this.outputPixelType),p=s&&n?[n[0],n[1]??n[0],n[2]??n[0]]:[1,1,1],h=s?[o[0],o[1]??o[0],o[2]??o[0]]:[1,1,1];return{bandCount:r,minOutput:t,maxOutput:e,minCutOff:i,maxCutOff:a,factor:l,useGamma:s,gamma:p,gammaCorrection:h,stretchType:this.functionArguments.stretchType,isOutputRounded:c,type:"stretch"}}};(0,i._)([(0,a.MZ)({json:{write:!0,name:"rasterFunction"}})],Ts.prototype,"functionName",void 0),(0,i._)([(0,a.MZ)({type:As,json:{write:!0,name:"rasterFunctionArguments"}})],Ts.prototype,"functionArguments",void 0),(0,i._)([(0,a.MZ)()],Ts.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],Ts.prototype,"lookup",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],Ts.prototype,"cutOffs",void 0),Ts=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.StretchFunction")],Ts);const Ms=Ts;var Ps;let Ns=Ps=class extends h{constructor(){super(...arguments),this.attributeTableAsRecordSet=null}clone(){return new Ps({attributeTableAsRecordSet:(0,o.clone)(this.attributeTableAsRecordSet)})}};(0,i._)([(0,a.MZ)({json:{write:!0}})],Ns.prototype,"attributeTableAsRecordSet",void 0),Ns=Ps=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.TableFunctionArguments")],Ns);const Fs=Ns;let ks=class extends b{constructor(){super(...arguments),this.functionName="Table",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||t.pixelType.startsWith("f"))return{success:!1,supportsGPU:!1,error:"table-function: Source data must be single band and integer pixel type."};const{attributeTableAsRecordSet:e}=this.functionArguments;if(!e)return{success:!1,supportsGPU:!1,error:"table-function: Missing attributeTableAsRecordSet argument."};this.outputPixelType=this._getOutputPixelType(t.pixelType);const n=t.clone();return n.pixelType=this.outputPixelType,n.bandCount=1,"thematic"!==n.dataType&&(n.keyProperties=n.keyProperties?{...n.keyProperties,DataType:"thematic"}:{DataType:"thematic"}),this.rasterInfo=n,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};(0,i._)([(0,a.MZ)({json:{write:!0,name:"rasterFunction"}})],ks.prototype,"functionName",void 0),(0,i._)([(0,a.MZ)({type:Fs,json:{write:!0,name:"rasterFunctionArguments"}})],ks.prototype,"functionArguments",void 0),(0,i._)([(0,a.MZ)()],ks.prototype,"rasterArgumentNames",void 0),(0,i._)([(0,a.MZ)()],ks.prototype,"isNoopProcess",void 0),ks=(0,i._)([(0,l.$)("esri.layers.support.rasterFunctions.TableFunction")],ks);const Rs=ks,Is=new Map;function Bs(t,e){const{rasterFunctionArguments:n}=t;n&&(n.rasters||[n.raster,n.raster2]).forEach((t=>{t&&"number"!=typeof t&&("string"==typeof t?t.startsWith("http")&&(e.includes(t)||e.push(t)):"rasterFunctionArguments"in t&&Bs(t,e))}))}function Cs(t,e){if(e=e??{},"function"in(t=(0,o.clone)(t))&&"arguments"in t&&t.arguments){const n=zs(t,new Map,e);if(Ls(n),!n.renderingRule)throw new r.default("raster-function-helper","Unsupported raster function json.");t=n.renderingRule}if("rasterFunction"in t)return js(t=Ds(t),e);throw new r.default("raster-function-helper","unsupported raster function json.")}function Ss(t){return!!(t&&"object"==typeof t&&t.rasterFunction&&t.rasterFunctionArguments)}function Ds(t){const{rasterFunction:e,rasterFunctionArguments:n}=t,s={};for(const r in n){let t=n[r];const e=r.toLowerCase();if("rasters"===e&&Array.isArray(t))s.rasters=t.map((t=>Ss(t)?Ds(t):t));else switch(Ss(t)&&(t=Ds(t)),e){case"dra":s.dra=t;break;case"pspower":s.psPower=t;break;case"pszfactor":s.psZFactor=t;break;case"bandids":s.bandIds=t;break;default:s[r[0].toLowerCase()+r.slice(1)]=t}}return"Local"!==e||s.rasters?.length||(s.rasters=["$$"]),{...t,rasterFunctionArguments:s}}function js(t,e){const{rasterFunction:n,rasterFunctionArguments:s}=t,o=t.outputPixelType?.toLowerCase();if(null==n||!Is.has(n))throw new r.default("raster-function-helper",`unsupported raster function: ${n}`);const i=Is.get(n),a=("function"==typeof i.ctor?i.ctor:i.ctor.default).fromJSON({...t,outputPixelType:o}),{rasterArgumentNames:l}=a,u=[],c=function(t,e){return"rasters"===e[0]&&Array.isArray(t.rasters)?t.rasters:e.map((e=>t[e]))}(s,l),p="rasters"===l[0]||l.length>1,h=[];for(let r=0;r<c.length;r++){const t=c[r];let n;null==t||"string"==typeof t&&t.startsWith("$")?u.push(e?.raster):"string"==typeof t?e[t]&&u.push(e[t]):"number"!=typeof t&&"rasterFunction"in t&&(n=js(t,e),p||(a.functionArguments[l[r]]=n),u.push(n)),p&&h.push(n??t)}if(p&&("rasters"===l[0]?a.functionArguments.rasters=h:l.forEach(((t,e)=>{a.functionArguments[t]=h[e]}))),e){a.sourceRasters=u;const t=e.raster?.url;t&&(a.mainPrimaryRasterId=t)}return a}function Zs(t,e){if(t&&e)for(const n in t){const s=t[n];s&&"object"==typeof s&&"type"in s&&("RasterFunctionTemplate"===s.type?Zs(s.arguments,e):"RasterFunctionVariable"===s.type&&null!=e[s.name]&&(s.value=e[s.name]))}}function Gs(t,e){if(!t||"object"!=typeof t)return t;const{value:n}=t;if(!n||"object"!=typeof n)return t.isDataset?"$$":n;if(Array.isArray(n))return 0===n.length?[]:n.map((t=>"object"==typeof t&&"RasterFunctionVariable"===t.type?Gs(t,e):t));if("value"in n&&["number","string","boolean"].includes(typeof n.value))return n.value;if(t.isDataset&&"Scalar"!==n.type)return"$$";if(!("type"in n))return n;let s=n;switch(n.type){case"Scalar":s=n.value;break;case"AlgorithmicColorRamp":s=Os(n);break;case"MultiPartColorRamp":s={type:"multipart",colorRamps:n.ArrayOfColorRamp.map(Os)};break;case"ArgumentArray":if(n.elements?.length&&"RasterStatistics"!==n.elements[0].type){const t=[];for(let s=0;s<n.elements.length;s++){const o=n.elements[s],{type:i}=o;if(i)if("RasterFunctionTemplate"===i){const{renderingRule:n}=zs(o,e);t.push(n),null!=o._object_id&&e.set(o._object_id,n)}else{if("RasterFunctionVariable"!==i)throw new r.default("raster-function-helper","unsupported raster function json.");{const n=Gs(o,e);t.push(n),null!=o._object_id&&e.set(o._object_id,n)}}else t.push(o)}s=t}else s=n.elements}return null!=n._object_id&&e.set(n._object_id,s),s}function Os(t){const e=t.algorithm??"esriHSVAlgorithm";let{FromColor:n,ToColor:r}=t;if(!Array.isArray(n)){const{r:t,g:e,b:r}=(0,s.$)({h:n.Hue,s:n.Saturation,v:n.Value});n=[t,e,r,n.AlphaValue]}if(!Array.isArray(r)){const{r:t,g:e,b:n}=(0,s.$)({h:r.Hue,s:r.Saturation,v:r.Value});r=[t,e,n,r.AlphaValue]}return{type:"algorithmic",algorithm:e,fromColor:n,toColor:r}}function zs(t,e,n){n&&Zs(t,n);const s={renderingRule:{},templates:e};return Es(t,s),s}function Es(t,e){if(!t||!e.renderingRule)return;const{renderingRule:n,templates:s}=e,{function:r,arguments:o,_object_id:i}=t;if(!r||!o)return;null!=i&&s.set(i,n),n.rasterFunction=r.type.replace("Function",""),n.outputPixelType=r.pixelType;const a={};n.rasterFunctionArguments=a;for(const l in o){if("type"===l||"object_id"===l||"_object_ref_id"===l)continue;const t=o[l];t&&"object"==typeof t&&"type"in t&&("RasterFunctionTemplate"===t.type||"RasterFunctionVariable"===t.type)?("RasterFunctionVariable"===t.type?a[l]=Gs(t,s):(n.rasterFunctionArguments[l]={},Es(t,{renderingRule:n.rasterFunctionArguments[l],templates:s})),null!=t._object_id&&s.set(t._object_id,a[l])):a[l]=t}switch(a.DEM&&!a.Raster&&(a.Raster=a.DEM,delete a.DEM),n.rasterFunction){case"Stretch":!function(t){t.Statistics?.length&&"object"==typeof t.Statistics&&(t.Statistics=t.Statistics.map((t=>[t.min,t.max,t.mean,t.standardDeviation]))),null!=t.NumberOfStandardDeviation&&(t.NumberOfStandardDeviations=t.NumberOfStandardDeviation,delete t.NumberOfStandardDeviation)}(a);break;case"Colormap":!function(t){"randomcolorramp"===t.ColorRamp?.type?.toLowerCase()&&(delete t.ColorRamp,t.ColormapName="Random"),0===t.ColorSchemeType&&delete t.ColorRamp}(a);break;case"Convolution":!function(t){null!=t.ConvolutionType&&(t.Type=t.ConvolutionType,delete t.ConvolutionType)}(a);break;case"Mask":!function(t){t.NoDataValues?.length&&"string"==typeof t.NoDataValues[0]&&(t.NoDataValues=t.NoDataValues.filter((t=>""!==t)).map((t=>Number(t))))}(a)}}function Ls(t){const{renderingRule:e,templates:n}=t;if("object"!=typeof e||!e?.rasterFunctionArguments||!n.size)return;const{rasterFunctionArguments:s}=e;for(const o in s){const t=s[o],e="_object_ref_id"===o?t:t&&"object"==typeof t&&"_object_ref_id"in t?t._object_ref_id:null;if(null==e)t&&"object"==typeof t&&(t.rasterFunctionArguments&&Ls({renderingRule:t,templates:n}),Array.isArray(t)&&t.forEach(((s,o)=>{if("object"==typeof s)if(null!=s._object_ref_id){if(!n.has(s._object_ref_id))throw new r.default("raster-function-helper",`unsupported raster function json. _object_ref_id: ${t} does not exist`);const i=n.get(e);i&&"object"==typeof i?Object.assign(s,i):t[o]=i}else Ls({renderingRule:s,templates:n})})));else{if(!n.has(e))throw new r.default("raster-function-helper",`unsupported raster function json. _object_ref_id: ${e} does not exist`);const t=n.get(e);"_object_ref_id"!==o?s[o]=t:t&&"object"==typeof t&&Object.assign(s,t)}}}Is.set("Arithmetic",{desc:"Arithmetic Function",ctor:It,rasterArgumentNames:["rasters"]}),Is.set("Aspect",{desc:"Aspect Function",ctor:Zt,rasterArgumentNames:["raster"]}),Is.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:ne,rasterArgumentNames:["raster"]}),Is.set("Colormap",{desc:"Colormap Function",ctor:Te,rasterArgumentNames:["raster"]}),Is.set("ColormapToRGB",{desc:"ColormapToRGB Function",ctor:Ie,rasterArgumentNames:["raster"]}),Is.set("CompositeBand",{desc:"CompositeBand Function",ctor:Ze,rasterArgumentNames:["rasters"]}),Is.set("ComputeChange",{desc:"ComputeChange Function",ctor:Ue,rasterArgumentNames:["rasters"]}),Is.set("Convolution",{desc:"Convolution Function",ctor:an,rasterArgumentNames:["raster"]}),Is.set("ContrastBrightness",{desc:"Contrast Brightness Function",ctor:Je,rasterArgumentNames:["raster"]}),Is.set("ExtractBand",{desc:"ExtractBand Function",ctor:xn,rasterArgumentNames:["raster"]}),Is.set("Curvature",{desc:"Curvature Function",ctor:mn,rasterArgumentNames:["raster"]}),Is.set("Hillshade",{desc:"Hillshade Function",ctor:Rn,rasterArgumentNames:["raster"]}),Is.set("ShadedRelief",{desc:"ShadedRelief Function",ctor:ns,rasterArgumentNames:["raster"]}),Is.set("Grayscale",{desc:"Grayscale Function",ctor:An,rasterArgumentNames:["raster"]}),Is.set("Clip",{desc:"Clip Function",ctor:he,rasterArgumentNames:["raster"]}),Is.set("Local",{desc:"Local Function",ctor:Dn,rasterArgumentNames:["rasters"]}),Is.set("Mask",{desc:"Mask Function",ctor:En,rasterArgumentNames:["raster"]}),Is.set("NDVI",{desc:"NDVI Function",ctor:$n,rasterArgumentNames:["raster"]}),Is.set("Remap",{desc:"Remap Function",ctor:Yn,rasterArgumentNames:["raster"]}),Is.set("Slope",{desc:"Slope Function",ctor:ls,rasterArgumentNames:["raster"]}),Is.set("Statistics",{desc:"Focal Statistics Function",ctor:ds,rasterArgumentNames:["raster"]}),Is.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:vs,rasterArgumentNames:["raster"]}),Is.set("Stretch",{desc:"Stretch Function",ctor:Ms,rasterArgumentNames:["raster"]}),Is.set("Table",{desc:"Attribute Table Function",ctor:Rs,rasterArgumentNames:["raster"]})},67726:(t,e,n)=>{n.d(e,{$Q:()=>a,Sd:()=>l,b7:()=>u});var s=n(84190),r=n(12560),o=n(75400),i=n(61531);async function a(t,e,s){if("extent"===s.type)return function(t,e,n){const{width:s,height:r}=t,o=new Uint8Array(s*r),a=e.width/s,l=e.height/r;if(n.width/a<.5||n.height/l<.5)return new i.default({pixelType:t.pixelType,width:s,height:r,mask:o,pixels:[...t.pixels]});const{xmin:u,xmax:c,ymin:p,ymax:h}=e,{xmin:m,xmax:d,ymin:f,ymax:g}=n,y=Math.max(u,m),x=Math.min(c,d),v=Math.max(p,f),w=Math.min(h,g),b=.5*a,_=.5*l;if(x-y<b||w-v<_||x<u+b||y>c-b||v>h-_||w<p+_)return new i.default({pixelType:t.pixelType,width:s,height:r,mask:o,pixels:[...t.pixels]});const A=Math.max(0,(y-u)/a),T=Math.min(s,Math.max(0,(x-u)/a)),M=Math.max(0,(h-w)/l),P=Math.min(r,Math.max(0,(h-v)/l)),N=Math.round(A),F=Math.round(T)-1,k=Math.round(M),R=Math.round(P)-1;if(N===F&&A%1>.5&&T%1<.5||k===R&&M%1>.5&&P%1<.5)return new i.default({pixelType:t.pixelType,width:s,height:r,mask:o,pixels:[...t.pixels]});if(0===N&&0===k&&F===s&&R===r)return t;const I=t.mask;for(let i=k;i<=R;i++)for(let t=N;t<=F;t++){const e=i*s+t;o[e]=I?I[e]:255}return new i.default({pixelType:t.pixelType,width:s,height:r,mask:o,pixels:[...t.pixels]})}(t,e,s);const{width:r,height:o}=t,a=new Uint8Array(r*o),{contains:l,intersects:u}=await Promise.all([n.e(31329),n.e(60822)]).then(n.bind(n,60822));return u(e,s)?"polyline"===s.type?function(t,e,n){const{width:s,height:r}=t,o=new Uint8Array(s*r),a=e.width/s,l=e.height/r,{xmin:u,ymax:c}=e,{paths:p}=n,h=t.mask;for(let i=0;i<p.length;i++){const t=p[i];for(let e=0;e<t.length-1;e++){const[n,i]=t[e],[p,m]=t[e+1];let d=Math.floor((c-i)/l),f=Math.floor((c-m)/l);if(f<d){const t=d;d=f,f=t}d=Math.max(0,d),f=Math.min(r-1,f);const g=(p-n)/(m-i);for(let t=d;t<=f;t++){const e=t===d?Math.max(i,m):(r+1-t)*l,c=t===f?Math.min(i,m):e-l;let y=m===i?Math.floor((n-u)/a):Math.floor((g*(e-i)+n-u)/a),x=m===i?Math.floor((p-u)/a):Math.floor((g*(c-i)+n-u)/a);if(x<y){const t=y;y=x,x=t}const v=t*s;y=Math.max(0,y),x=Math.min(s-1,x);for(let t=v+y;t<=v+x;t++)o[t]=h?h[t]:255}}}return new i.default({pixelType:t.pixelType,width:s,height:r,mask:o,pixels:[...t.pixels]})}(t,e,s):l(s,e)?t:function(t,e,n){if(!t)return t;const{width:s,height:r}=t,o=e.width/s,a=e.height/r,{xmin:l,ymax:u}=e;let c;if("extent"===n.type){const t=(n.xmin-l)/o,e=(n.xmax-l)/o,s=(u-n.ymax)/a,r=(u-n.ymin)/a;c=[[[t,s],[t,r],[e,r],[e,s],[t,s]]]}else c=n.rings.map((t=>t.map((t=>{let[e,n]=t;return[(e-l)/o,(u-n)/a]}))));const p=document.createElement("canvas");p.width=s,p.height=r;const h=p.getContext("2d");h.fillStyle="#f00",h.beginPath(),c.forEach((t=>{h.moveTo(t[0][0],t[0][1]);for(let e=0;e<t.length;e++)h.lineTo(t[e][0],t[e][1]);h.closePath()})),h.fill();const m=h.getImageData(0,0,s,r).data,d=t.mask,f=s*r,g=new Uint8Array(f);for(let i=0;i<f;i++)d&&!d[i]||(g[i]=m[4*i+3]>127?255:0);return new i.default({pixelType:t.pixelType,width:s,height:r,mask:g,maskIsAlpha:!1,pixels:[...t.pixels]})}(t,e,s):new i.default({pixelType:t.pixelType,width:r,height:o,mask:a,maskIsAlpha:!1,pixels:[...t.pixels]})}function l(t,e){const{extent:n}=u(t,e,new o.default({x:t.pixelSize.x,y:t.pixelSize.y,spatialReference:t.spatialReference})),{extent:s}=t.extent;if(n.xmax=Math.min(n.xmax,s.xmax),n.ymax=Math.min(n.ymax,s.ymax),n.xmin<n.xmax&&n.ymin<n.ymax){const{x:e,y:s}=t.pixelSize,r=Math.round(n.width/e),o=Math.round(n.height/s);t.extent=n,t.width=r,t.height=o}}function u(t,e,n){let o=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const{spatialReference:i}=t,{x:a,y:l}=function(t,e){if(t.spatialReference.equals(e))return t;const n=(0,s.GA)(t.spatialReference),r=(0,s.GA)(e);if(n===r)return t;const o=n/r;return{x:t.x*o,y:t.y*o}}(n,i);let u,c,p;const h="extent"===e.type?e:e.extent;let{xmin:m,xmax:d,ymax:f,ymin:g}=h;const{xmin:y,ymax:x}=t.extent;return o?(m=y+(m>y?a*Math.round((m-y)/a):0),f=x-(f<x?l*Math.round((x-f)/l):0),d=y+(d>y?a*Math.round((d-y)/a):0),g=x-(g<x?l*Math.round((x-g)/l):0),u=new r.default({xmin:m,ymax:f,xmax:d,ymin:g,spatialReference:i}),c=Math.round(u.width/a),p=Math.round(u.height/l)):(c=Math.floor((d-m)/a+.8),p=Math.floor((f-g)/l+.8),m=y+(m>y?a*Math.floor((m-y)/a+.1):0),f=x-(f<x?l*Math.floor((x-f)/l+.1):0),d=m+c*a,g=f-p*l,u=new r.default({xmin:m,ymax:f,xmax:d,ymin:g,spatialReference:i})),{extent:u,width:c,height:p}}},75258:(t,e,n)=>{n.r(e),n.d(e,{CreateColorCompositeMethod:()=>c,argStatisticsType:()=>P,arithmeticOperation:()=>b,bandIndexType:()=>i,cellStatisticalOperation:()=>x,clippingType:()=>m,colorRampName:()=>l,colormapName:()=>a,computeChangKeepMethod:()=>T,computeChangeMethod:()=>A,convolutionKernel:()=>h,curvatureType:()=>r,hillshadeType:()=>o,localArithmeticOperation:()=>f,localConditionalOperation:()=>v,localLogicalOperation:()=>g,localOperators:()=>w,localTrigonometricOperation:()=>y,missingBandAction:()=>u,noDataInterpretation:()=>p,slopeType:()=>s,statisticsType:()=>M,stretchType:()=>d,thresholdType:()=>_});const s={degree:1,percentRise:2,adjusted:3},r={standard:0,planform:1,profile:2},o={traditional:0,multidirectional:1},i={userDefined:0,NDVI:1,SAVI:2,TSAVI:3,MSAVI:4,GEMI:5,PVI:6,GVITM:7,Sultan:8,VARI:9,GNDVI:10,SR:11,NDVIRe:12,SRRe:13,MTVI2:14,RTVICore:15,CIRe:16,CIG:17,NDWI:18,EVI:19,ironOxide:20,ferrousMinerals:21,clayMinerals:22,WNDWI:23,BAI:24,NBR:25,NDBI:26,NDMI:27,NDSI:28,MNDWI:29},a={random:"Random",NDVI:"NDVI",NDVI2:"NDVI2",NDVI3:"NDVI3",elevation:"Elevation",gray:"Gray",hillshade:"Hillshade"},l={aspect:"Aspect",blackToWhite:"Black to White",blueBright:"Blue Bright",blueLightToDark:"Blue Light to Dark",blueGreenBright:"Blue-Green Bright",blueGreenLightToDark:"Blue-Green Light to Dark",brownLightToDark:"Brown Light to Dark",brownToBlueGreenDivergingBright:"Brown to Blue Green Diverging, Bright",brownToBlueGreenDivergingDark:"Brown to Blue Green Diverging, Dark",coefficientBias:"Coefficient Bias",coldToHotDiverging:"Cold to Hot Diverging",conditionNumber:"Condition Number",cyanToPurple:"Cyan to Purple",cyanLightToBlueDark:"Cyan-Light to Blue-Dark",distance:"Distance",elevation1:"Elevation #1",elevation2:"Elevation #2",errors:"Errors",grayLightToDark:"Gray Light to Dark",greenBright:"Green Bright",greenLightToDark:"Green Light to Dark",greenToBlue:"Green to Blue",orangeBright:"Orange Bright",orangeLightToDark:"Orange Light to Dark",partialSpectrum:"Partial Spectrum",partialSpectrum1Diverging:"Partial Spectrum 1 Diverging",partialSpectrum2Diverging:"Partial Spectrum 2 Diverging",pinkToYellowGreenDivergingBright:"Pink to YellowGreen Diverging, Bright",pinkToYellowGreenDivergingDark:"Pink to YellowGreen Diverging, Dark",precipitation:"Precipitation",prediction:"Prediction",purpleBright:"Purple Bright",purpleToGreenDivergingBright:"Purple to Green Diverging, Bright",purpleToGreenDivergingDark:"Purple to Green Diverging, Dark",purpleBlueBright:"Purple-Blue Bright",purpleBlueLightToDark:"Purple-Blue Light to Dark",purpleRedBright:"Purple-Red Bright",purpleRedLightToDark:"Purple-Red Light to Dark",redBright:"Red Bright",redLightToDark:"Red Light to Dark",redToBlueDivergingBright:"Red to Blue Diverging, Bright",redToBlueDivergingDark:"Red to Blue Diverging, Dark",redToGreen:"Red to Green",redToGreenDivergingBright:"Red to Green Diverging, Bright",redToGreenDivergingDark:"Red to Green Diverging, Dark",slope:"Slope",spectrumFullBright:"Spectrum-Full Bright",spectrumFullDark:"Spectrum-Full Dark",spectrumFullLight:"Spectrum-Full Light",surface:"Surface",temperature:"Temperature",whiteToBlack:"White to Black",yellowToDarkRed:"Yellow to Dark Red",yellowToGreenToDarkBlue:"Yellow to Green to Dark Blue",yellowToRed:"Yellow to Red",yellowGreenBright:"Yellow-Green Bright",yellowGreenLightToDark:"Yellow-Green Light to Dark"},u={bestMatch:0,fail:1},c={byName:0,byId:2},p={matchAny:0,matchAll:1},h={userDefined:-1,lineDetectionHorizontal:0,lineDetectionVertical:1,lineDetectionLeftDiagonal:2,lineDetectionRightDiagonal:3,gradientNorth:4,gradientWest:5,gradientEast:6,gradientSouth:7,gradientNorthEast:8,gradientNorthWest:9,smoothArithmeticMean:10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,sobelHorizontal:17,sobelVertical:18,sharpen:19,sharpen2:20,pointSpread:21,none:255},m={outside:1,inside:2},d={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9},f={plus:1,minus:2,times:3,sqrt:4,power:5,abs:10,divide:23,exp:25,exp10:26,exp2:27,int:30,float:32,ln:35,log10:36,log2:37,mod:44,negate:45,roundDown:48,roundUp:49,square:53,floatDivide:64,floorDivide:65},g={bitwiseAnd:11,bitwiseLeftShift:12,bitwiseNot:13,bitwiseOr:14,bitwiseRightShift:15,bitwiseXOr:16,booleanAnd:17,booleanNot:18,booleanOr:19,booleanXOr:20,equalTo:24,greaterThan:28,greaterThanEqual:29,lessThan:33,lessThanEqual:34,isNull:31,notEqual:46},y={acos:6,asin:7,atan:8,atanh:9,cos:21,cosh:22,sin:51,sinh:52,tan:56,tanh:57,acosh:59,asinh:60,atan2:61},x={majority:38,max:39,mean:40,med:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58,majorityIgnoreNoData:66,maxIgnoreNoData:67,meanIgnoreNoData:68,medIgnoreNoData:69,minIgnoreNoData:70,minorityIgnoreNoData:71,rangeIgnoreNoData:72,stddevIgnoreNoData:73,sumIgnoreNoData:74,varietyIgnoreNoData:75},v={setNull:50,conditional:78},w={...f,...g,...y,...x,...v},b={plus:1,minus:2,multiply:3,divide:4,power:5,mod:6},_={otsu:1},A={difference:0,relativeDifference:1,categorical:2,spectralEuclidianDistance:3,spectralAngleDifference:4,bandWithMostChange:5},T={all:1,changed:2,unchanged:3},M={min:1,max:2,mean:3,standardDeviation:4,median:5,majority:6,minority:7},P={max:0,min:1,median:2,duration:3}},84058:(t,e,n)=>{function s(t,e,n,s,r){const o=Math.floor(s/2);for(let a=0;a<o;a++)for(let s=0;s<e;s++)t[a*e+s]=t[(r-1-a)*e+s],t[(n-1-a)*e+s]=t[(n-r+a)*e+s];const i=Math.floor(r/2);for(let a=0;a<n;a++){const n=a*e;for(let s=0;s<i;s++)t[n+s]=t[n+r-1-s],t[n+e-s-1]=t[n+e+s-r]}}n.d(e,{e:()=>s})}}]);