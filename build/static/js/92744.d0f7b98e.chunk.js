"use strict";(self.webpackChunkever_wading_birds=self.webpackChunkever_wading_birds||[]).push([[65241,92744],{65241:(e,t,r)=>{r.r(t),r.d(t,{default:()=>m});var i=r(93800),s=r(85715),o=r(19455),a=r(48602),n=(r(21265),r(50925),r(14746),r(47332)),l=r(14800),u=r(75269),d=r(15484),c=r(93074);let p=class extends(s.A.ClonableMixin(o.A)){constructor(e){super(e),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null}readId(e,t){return t.id??t.itemId??null}readRestrictionAttributes(e,t){const{restrictionAttributeNames:r}=t;return null==r?null:r.map((e=>c.OC.fromJSON(e)))}writeRestrictionAttributes(e,t,r){null!=e&&(t[r]=e.map((e=>c.OC.toJSON(e))))}};(0,i._)([(0,a.MZ)({type:[Object],json:{write:!0}})],p.prototype,"attributeParameterValues",void 0),(0,i._)([(0,a.MZ)({type:String,json:{write:!0}})],p.prototype,"description",void 0),(0,i._)([(0,n.e)(c.dd,{ignoreUnknown:!1})],p.prototype,"distanceAttributeName",void 0),(0,i._)([(0,a.MZ)({type:String,json:{write:!0}})],p.prototype,"id",void 0),(0,i._)([(0,l.w)("id",["id","itemId"])],p.prototype,"readId",null),(0,i._)([(0,n.e)(c.et,{ignoreUnknown:!1})],p.prototype,"impedanceAttributeName",void 0),(0,i._)([(0,a.MZ)({type:String,json:{write:!0}})],p.prototype,"name",void 0),(0,i._)([(0,a.MZ)({type:[String],json:{write:!0}})],p.prototype,"restrictionAttributeNames",void 0),(0,i._)([(0,l.w)("restrictionAttributeNames")],p.prototype,"readRestrictionAttributes",null),(0,i._)([(0,d.K)("restrictionAttributeNames")],p.prototype,"writeRestrictionAttributes",null),(0,i._)([(0,a.MZ)({type:Number,json:{write:{allowNull:!0}}})],p.prototype,"simplificationTolerance",void 0),(0,i._)([(0,n.e)(c.hY)],p.prototype,"simplificationToleranceUnits",void 0),(0,i._)([(0,n.e)(c.Mm,{ignoreUnknown:!1})],p.prototype,"timeAttributeName",void 0),(0,i._)([(0,n.e)(c.ow)],p.prototype,"type",void 0),(0,i._)([(0,a.MZ)({type:Boolean,json:{write:!0}})],p.prototype,"useHierarchy",void 0),(0,i._)([(0,n.e)(c.hE)],p.prototype,"uturnAtJunctions",void 0),p=(0,i._)([(0,u.$)("esri.rest.support.TravelMode")],p);const m=p},70363:(e,t,r)=>{r.r(t),r.d(t,{collectGeometries:()=>k,dropZValuesOffInputGeometry:()=>b,fetchServiceDescription:()=>O,isInputGeometryZAware:()=>U});var i=r(23060),s=r(74719),o=r(50925),a=r(93670),n=r(43103),l=r(10193),u=r(93800),d=r(19455),c=r(48602),p=(r(21265),r(14746),r(47332)),m=r(14800),v=r(75269),h=r(15484),f=r(93074);let y=class extends d.A{constructor(e){super(e),this.dataType=null,this.name=null,this.parameterNames=null,this.restrictionUsageParameterName=null,this.timeNeutralAttributeName=null,this.trafficSupport=null,this.units=null,this.usageType=null}};(0,u._)([(0,c.MZ)({type:String})],y.prototype,"dataType",void 0),(0,u._)([(0,p.e)(f.et,{ignoreUnknown:!1})],y.prototype,"name",void 0),(0,u._)([(0,c.MZ)({type:[String]})],y.prototype,"parameterNames",void 0),(0,u._)([(0,c.MZ)({type:String})],y.prototype,"restrictionUsageParameterName",void 0),(0,u._)([(0,p.e)(f.Mm,{ignoreUnknown:!1})],y.prototype,"timeNeutralAttributeName",void 0),(0,u._)([(0,c.MZ)({type:String})],y.prototype,"trafficSupport",void 0),(0,u._)([(0,p.e)(f.dn)],y.prototype,"units",void 0),(0,u._)([(0,p.e)(f.WU)],y.prototype,"usageType",void 0),y=(0,u._)([(0,v.$)("esri.rest.support.NetworkAttribute")],y);const g=y;let A=class extends d.A{constructor(e){super(e),this.buildTime=null,this.name=null,this.networkAttributes=null,this.networkSources=null,this.state=null}};(0,u._)([(0,c.MZ)({type:Number})],A.prototype,"buildTime",void 0),(0,u._)([(0,c.MZ)({type:String})],A.prototype,"name",void 0),(0,u._)([(0,c.MZ)({type:[g]})],A.prototype,"networkAttributes",void 0),(0,u._)([(0,c.MZ)()],A.prototype,"networkSources",void 0),(0,u._)([(0,c.MZ)({type:String})],A.prototype,"state",void 0),A=(0,u._)([(0,v.$)("esri.rest.support.NetworkDataset")],A);const T=A;var N=r(65241);let w=class extends d.A{constructor(e){super(e),this.accumulateAttributeNames=null,this.attributeParameterValues=null,this.currentVersion=null,this.defaultTravelMode=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsSupportedLanguages=null,this.directionsTimeAttribute=null,this.hasZ=null,this.impedance=null,this.networkDataset=null,this.supportedTravelModes=null}readAccumulateAttributes(e){return null==e?null:e.map((e=>f.et.fromJSON(e)))}writeAccumulateAttributes(e,t,r){e?.length&&(t[r]=e.map((e=>f.et.toJSON(e))))}get capabilities(){return{supportsNow:(this.currentVersion??10)>=10.81}}readDefaultTravelMode(e,t){const r=t.supportedTravelModes?.find((e=>{let{id:r}=e;return r===t.defaultTravelMode}))??t.supportedTravelModes?.find((e=>{let{itemId:r}=e;return r===t.defaultTravelMode}));return r?N.default.fromJSON(r):null}};(0,u._)([(0,c.MZ)()],w.prototype,"accumulateAttributeNames",void 0),(0,u._)([(0,m.w)("accumulateAttributeNames")],w.prototype,"readAccumulateAttributes",null),(0,u._)([(0,h.K)("accumulateAttributeNames")],w.prototype,"writeAccumulateAttributes",null),(0,u._)([(0,c.MZ)()],w.prototype,"attributeParameterValues",void 0),(0,u._)([(0,c.MZ)()],w.prototype,"capabilities",null),(0,u._)([(0,c.MZ)()],w.prototype,"currentVersion",void 0),(0,u._)([(0,c.MZ)()],w.prototype,"defaultTravelMode",void 0),(0,u._)([(0,m.w)("defaultTravelMode",["defaultTravelMode","supportedTravelModes"])],w.prototype,"readDefaultTravelMode",null),(0,u._)([(0,c.MZ)()],w.prototype,"directionsLanguage",void 0),(0,u._)([(0,p.e)(f.Z7)],w.prototype,"directionsLengthUnits",void 0),(0,u._)([(0,c.MZ)()],w.prototype,"directionsSupportedLanguages",void 0),(0,u._)([(0,p.e)(f.Mm,{ignoreUnknown:!1})],w.prototype,"directionsTimeAttribute",void 0),(0,u._)([(0,c.MZ)()],w.prototype,"hasZ",void 0),(0,u._)([(0,p.e)(f.et,{ignoreUnknown:!1})],w.prototype,"impedance",void 0),(0,u._)([(0,c.MZ)({type:T})],w.prototype,"networkDataset",void 0),(0,u._)([(0,c.MZ)({type:[N.default]})],w.prototype,"supportedTravelModes",void 0),w=(0,u._)([(0,v.$)("esri.rest.support.NetworkServiceDescription")],w);const M=w,S=()=>o.A.getLogger("esri.rest.networkService");function k(e,t,r,i){i[r]=[t.length,t.length+e.length],e.forEach((e=>{t.push(e.geometry)}))}function b(e,t){for(let r=0;r<t.length;r++){const i=e[t[r]];if(i&&i.length)for(const e of i)e.z=void 0}S().warnOnce("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")}function U(e,t){for(let r=0;r<t.length;r++){const i=e[t[r]];if(i&&i.length)for(const e of i)if(null!=e&&e.hasZ)return!0}return!1}async function O(e,t,r){if(!e)throw new s.default("network-service:missing-url","Url to Network service is missing");const o=(0,l.jV)({f:"json",token:t},r),{data:u}=await(0,i.default)(e,o),d=u.currentVersion>=10.4?async function(e,t,r){try{const s=(0,l.jV)({f:"json",token:t},r),o=(0,n.removeTrailingSlash)(e)+"/retrieveTravelModes",{data:{supportedTravelModes:a,defaultTravelMode:u}}=await(0,i.default)(o,s);return{supportedTravelModes:a,defaultTravelMode:u}}catch(T){throw new s.default("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:T})}}(e,t,r):async function(e,t){const r=(0,l.jV)({f:"json"},t),{data:s}=await(0,i.default)(e.replace(/\/rest\/.*$/i,"/info"),r);if(!s?.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:o}=s,u=(0,n.removeTrailingSlash)(o)+"/sharing/rest/portals/self",{data:d}=await(0,i.default)(u,r),c=(0,a.wc)("helperServices.routingUtilities.url",d);if(!c)return{supportedTravelModes:[],defaultTravelMode:null};const p=(0,l.Dl)(o),m=/\/solve$/i.test(p.path)?"Route":/\/solveclosestfacility$/i.test(p.path)?"ClosestFacility":"ServiceAreas",v=(0,l.jV)({f:"json",serviceName:m},t),h=(0,n.removeTrailingSlash)(c)+"/GetTravelModes/execute",f=await(0,i.default)(h,v),y=[];let g=null;if(f?.data?.results?.length){const e=f.data.results;for(const t of e)if("supportedTravelModes"===t.paramName){if(t.value?.features)for(const{attributes:e}of t.value.features)if(e){const t=JSON.parse(e.TravelMode);y.push(t)}}else"defaultTravelMode"===t.paramName&&(g=t.value)}return{supportedTravelModes:y,defaultTravelMode:g}}(e,r),{defaultTravelMode:c,supportedTravelModes:p}=await d;return u.defaultTravelMode=c,u.supportedTravelModes=p,M.fromJSON(u)}},93074:(e,t,r)=>{r.d(t,{$n:()=>k,$r:()=>A,EM:()=>g,Ec:()=>P,JJ:()=>y,Mm:()=>U,OC:()=>D,Sr:()=>c,UO:()=>n,Vj:()=>R,WU:()=>Z,Y8:()=>a,Z7:()=>l,_6:()=>M,_H:()=>v,aJ:()=>d,ag:()=>h,cQ:()=>p,dd:()=>b,dn:()=>u,et:()=>O,fe:()=>w,gD:()=>S,hE:()=>m,hY:()=>o,iM:()=>N,mt:()=>T,ow:()=>f,vS:()=>_});var i=r(42761);const s={esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"},o=(0,i.O)()(s),a=(0,i.O)()({...s,esriIntFeet:"international-feet",esriIntInches:"international-inches",esriIntMiles:"international-miles",esriIntNauticalMiles:"international-nautical-miles",esriIntYards:"international-yards"}),n=(0,i.O)()({esriAcres:"international-acres",esriAcresUS:"us-acres",esriAres:"ares",esriHectares:"hectares",esriSquareCentimeters:"square-centimeters",esriSquareDecimeters:"square-decimeters",esriSquareFeet:"square-international-feet",esriSquareFeetUS:"square-us-feet",esriSquareInches:"square-international-inches",esriSquareInchesUS:"square-us-inches",esriSquareKilometers:"square-kilometers",esriSquareMeters:"square-meters",esriSquareMiles:"square-international-miles",esriSquareMilesUS:"square-us-miles",esriSquareMillimeters:"square-millimeters",esriSquareYards:"square-international-yards",esriSquareYardsUS:"square-us-yards",esriUnknownAreaUnits:"unknown"}),l=(0,i.O)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),u=(0,i.O)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards",esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds",esriNAUKilometersPerHour:"kilometers-per-hour",esriNAUMilesPerHour:"miles-per-hour",esriNAUUnknown:"unknown"}),d=(0,i.O)()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),c=(0,i.O)()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"}),p=(0,i.O)()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"}),m=(0,i.O)()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"}),v=(0,i.O)()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),h=(0,i.O)()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"}),f=(0,i.O)()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"}),y=(0,i.O)()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),g=(0,i.O)()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),A=(0,i.O)()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),T=(0,i.O)()({1:"right",2:"left"},{useNumericKeys:!0}),N=(0,i.O)()({0:"restriction",1:"scaled-cost",2:"added-cost"},{useNumericKeys:!0}),w=(0,i.O)()({0:"permit",1:"restrict"},{useNumericKeys:!0}),M=(0,i.O)()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation",1007:"lane"},{useNumericKeys:!0}),S=(0,i.O)()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0}),k=(0,i.O)()({"NA Campus":"campus","NA Desktop":"desktop","NA Navigation":"navigation"}),b=(0,i.O)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters"},{ignoreUnknown:!1}),U=(0,i.O)()({Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),O=(0,i.O)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters",Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),D=(0,i.O)()({"Any Hazmat Prohibited":"any-hazmat-prohibited","Avoid Carpool Roads":"avoid-carpool-roads","Avoid Express Lanes":"avoid-express-lanes","Avoid Ferries":"avoid-ferries","Avoid Gates":"avoid-gates","Avoid Limited Access Roads":"avoid-limited-access-roads","Avoid Private Roads":"avoid-private-roads","Avoid Roads Unsuitable for Pedestrians":"avoid-roads-unsuitable-for-pedestrians","Avoid Stairways":"avoid-stairways","Avoid Toll Roads":"avoid-toll-roads","Avoid Toll Roads for Trucks":"avoid-toll-roads-for-trucks","Avoid Truck Restricted Roads":"avoid-truck-restricted-roads","Avoid Unpaved Roads":"avoid-unpaved-roads","Axle Count Restriction":"axle-count-restriction","Driving a Bus":"driving-a-bus","Driving a Taxi":"driving-a-taxi","Driving a Truck":"driving-a-truck","Driving an Automobile":"driving-an-automobile","Driving an Emergency Vehicle":"driving-an-emergency-vehicle","Height Restriction":"height-restriction","Kingpin to Rear Axle Length Restriction":"kingpin-to-rear-axle-length-restriction","Length Restriction":"length-restriction","Preferred for Pedestrians":"preferred-for-pedestrians","Riding a Motorcycle":"riding-a-motorcycle","Roads Under Construction Prohibited":"roads-under-construction-prohibited","Semi or Tractor with One or More Trailers Prohibited":"semi-or-tractor-with-one-or-more-trailers-prohibited","Single Axle Vehicles Prohibited":"single-axle-vehicles-prohibited","Tandem Axle Vehicles Prohibited":"tandem-axle-vehicles-prohibited","Through Traffic Prohibited":"through-traffic-prohibited","Truck with Trailers Restriction":"truck-with-trailers-restriction","Use Preferred Hazmat Routes":"use-preferred-hazmat-routes","Use Preferred Truck Routes":"use-preferred-truck-routes",Walking:"walking","Weight Restriction":"weight-restriction"},{ignoreUnknown:!1}),_=(0,i.O)()({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),R=(0,i.O)()({esriGeometryPoint:"point",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"envelope",esriGeometryMultipoint:"multipoint"}),Z=(0,i.O)()({esriNAUTCost:"cost",esriNAUTDescriptor:"descriptor",esriNAUTRestriction:"restriction",esriNAUTHierarchy:"hierarchy"}),P=(0,i.O)()({esriDSTAltName:"alt-name",esriDSTArrive:"arrive",esriDSTBranch:"branch",esriDSTCrossStreet:"cross-street",esriDSTCumulativeLength:"cumulative-length",esriDSTDepart:"depart",esriDSTEstimatedArrivalTime:"estimated-arrival-time",esriDSTExit:"exit",esriDSTGeneral:"general",esriDSTLength:"length",esriDSTServiceTime:"service-time",esriDSTStreetName:"street-name",esriDSTSummary:"summary",esriDSTTime:"time",esriDSTTimeWindow:"time-window",esriDSTToward:"toward",esriDSTViolationTime:"violation-time",esriDSTWaitTime:"wait-time"})}}]);