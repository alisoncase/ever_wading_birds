"use strict";(self.webpackChunkever_wading_birds=self.webpackChunkever_wading_birds||[]).push([[22076],{22076:(e,t,o)=>{o.r(t),o.d(t,{default:()=>f});var r=o(93800),s=o(85715),i=o(19455),p=o(48602),n=(o(21265),o(50925),o(14746),o(75269)),a=o(15484),d=o(93321),l=o(78629),u=o(54723);let y=class extends(s.A.ClonableMixin(i.A)){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.outSpatialReference=null,this.depthOffset=0,this.adjust=!1}writeGeometry(e,t,o){null!=e&&(t.geometryType=(0,l.getJsonType)(e),t[o]={...e.toJSON(),spatialReference:void 0})}};(0,r._)([(0,p.MZ)({types:u.yR,json:{read:l.fromJSON,write:!0}})],y.prototype,"geometry",void 0),(0,r._)([(0,a.K)("geometry")],y.prototype,"writeGeometry",null),(0,r._)([(0,p.MZ)({json:{write:!0}})],y.prototype,"rasterId",void 0),(0,r._)([(0,p.MZ)({type:d.default,json:{name:"outSR",write:!0}})],y.prototype,"outSpatialReference",void 0),(0,r._)([(0,p.MZ)({json:{name:"options.DOff",write:!0}})],y.prototype,"depthOffset",void 0),(0,r._)([(0,p.MZ)({json:{name:"options.Adjust",write:!0}})],y.prototype,"adjust",void 0),y=(0,r._)([(0,n.$)("esri.rest.support.ImageToMapParameters")],y);const f=y}}]);