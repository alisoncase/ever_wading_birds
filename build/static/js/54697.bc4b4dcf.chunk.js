"use strict";(self.webpackChunkever_wading_birds=self.webpackChunkever_wading_birds||[]).push([[25280,49705,54697,65241,69265,98274],{25280:(e,t,r)=>{r.r(t),r.d(t,{default:()=>u});var i,s=r(93800),o=r(48602),n=(r(21265),r(50925),r(14746),r(75269)),a=r(87520);let l=i=class extends a.default{constructor(e){super(e),this.doNotLocateOnRestrictedElements=null}clone(){return new i({doNotLocateOnRestrictedElements:this.doNotLocateOnRestrictedElements,...this.cloneProperties()})}};(0,s._)([(0,o.MZ)({type:Boolean,json:{write:!0}})],l.prototype,"doNotLocateOnRestrictedElements",void 0),l=i=(0,s._)([(0,n.$)("esri.rest.support.NetworkFeatureSet")],l);const u=l},49705:(e,t,r)=>{r.r(t),r.d(t,{default:()=>u});var i=r(93800),s=r(85715),o=r(19455),n=r(48602),a=(r(21265),r(50925),r(14746),r(75269));let l=class extends(s.A.ClonableMixin(o.A)){constructor(e){super(e),this.doNotLocateOnRestrictedElements=null,this.url=null}};(0,i._)([(0,n.MZ)({type:Boolean,json:{write:!0}})],l.prototype,"doNotLocateOnRestrictedElements",void 0),(0,i._)([(0,n.MZ)({type:String,json:{write:!0}})],l.prototype,"url",void 0),l=(0,i._)([(0,a.$)("esri.rest.support.NetworkUrl")],l);const u=l},54697:(e,t,r)=>{r.r(t),r.d(t,{default:()=>f});var i,s=r(93800),o=r(85715),n=r(89129),a=r(19455),l=r(48602),u=r(80556),p=(r(21265),r(14746),r(47332)),d=r(14800),c=r(75269),m=r(15484),y=r(93321),h=r(98274),v=r(69265),w=r(87520),A=r(93074),g=r(25280),N=r(49705),T=r(65241);let S=i=class extends(o.A.ClonableMixin(a.A)){constructor(e){super(e),this.accumulateAttributes=null,this.apiKey=null,this.attributeParameterValues=null,this.checksum=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsOutputType=null,this.directionsStyleName=null,this.directionsTimeAttribute=null,this.findBestSequence=null,this.geometryPrecision=null,this.geometryPrecisionM=null,this.geometryPrecisionZ=null,this.ignoreInvalidLocations=null,this.impedanceAttribute=null,this.outputGeometryPrecision=null,this.outputGeometryPrecisionUnits=null,this.outputLines="true-shape",this.outSpatialReference=null,this.overrides=null,this.pointBarriers=null,this.polygonBarriers=null,this.polylineBarriers=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.preserveObjectID=null,this.restrictionAttributes=null,this.restrictUTurns=null,this.returnBarriers=!1,this.returnDirections=!1,this.returnPolygonBarriers=!1,this.returnPolylineBarriers=!1,this.returnRoutes=!0,this.returnStops=!1,this.returnTraversedEdges=null,this.returnTraversedJunctions=null,this.returnTraversedTurns=null,this.returnZ=!0,this.startTime=null,this.startTimeIsUTC=!0,this.stops=null,this.timeWindowsAreUTC=null,this.travelMode=null,this.useHierarchy=null,this.useTimeWindows=null}static from(e){return(0,u.PZ)(i,e)}readAccumulateAttributes(e){return null==e?null:e.map((e=>A.et.fromJSON(e)))}writeAccumulateAttributes(e,t,r){e?.length&&(t[r]=e.map((e=>A.et.toJSON(e))))}writePointBarriers(e,t,r){M(e,t,r)}writePolygonBarrier(e,t,r){M(e,t,r)}writePolylineBarrier(e,t,r){M(e,t,r)}readRestrictionAttributes(e){return null==e?null:e.map((e=>A.OC.fromJSON(e)))}writeRestrictionAttributes(e,t,r){e?.length&&(t[r]=e.map((e=>A.OC.toJSON(e))))}readStartTime(e,t){const{startTime:r}=t;return null==r?null:"now"===r?"now":new Date(r)}writeStartTime(e,t){null!=e&&(t.startTime="now"===e?"now":e.getTime())}readStops(e,t){return function(e){return function(e){return e&&"type"in e}(e)?v.default.fromJSON(e):function(e){return e&&"url"in e}(e)?N.default.fromJSON(e):function(e){return e&&"features"in e&&"doNotLocateOnRestrictedElements"in e}(e)?g.default.fromJSON(e):function(e){return e&&"features"in e}(e)?w.default.fromJSON(e):null}(t.stops)}writeStops(e,t,r){M(e,t,r)}};(0,s._)([(0,l.MZ)({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],S.prototype,"accumulateAttributes",void 0),(0,s._)([(0,d.w)("accumulateAttributes")],S.prototype,"readAccumulateAttributes",null),(0,s._)([(0,m.K)("accumulateAttributes")],S.prototype,"writeAccumulateAttributes",null),(0,s._)([(0,l.MZ)(h.K)],S.prototype,"apiKey",void 0),(0,s._)([(0,l.MZ)({json:{write:!0}})],S.prototype,"attributeParameterValues",void 0),(0,s._)([(0,l.MZ)({type:String,json:{write:!0}})],S.prototype,"checksum",void 0),(0,s._)([(0,l.MZ)({type:String,json:{write:!0}})],S.prototype,"directionsLanguage",void 0),(0,s._)([(0,p.e)(A.Z7)],S.prototype,"directionsLengthUnits",void 0),(0,s._)([(0,p.e)(A.aJ)],S.prototype,"directionsOutputType",void 0),(0,s._)([(0,p.e)(A.$n)],S.prototype,"directionsStyleName",void 0),(0,s._)([(0,p.e)(A.Mm,{name:"directionsTimeAttributeName",ignoreUnknown:!1})],S.prototype,"directionsTimeAttribute",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],S.prototype,"findBestSequence",void 0),(0,s._)([(0,l.MZ)({type:Number,json:{write:!0}})],S.prototype,"geometryPrecision",void 0),(0,s._)([(0,l.MZ)({type:Number,json:{write:!0}})],S.prototype,"geometryPrecisionM",void 0),(0,s._)([(0,l.MZ)({type:Number,json:{write:!0}})],S.prototype,"geometryPrecisionZ",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],S.prototype,"ignoreInvalidLocations",void 0),(0,s._)([(0,p.e)(A.et,{name:"impedanceAttributeName",ignoreUnknown:!1})],S.prototype,"impedanceAttribute",void 0),(0,s._)([(0,l.MZ)({type:Number,json:{write:!0}})],S.prototype,"outputGeometryPrecision",void 0),(0,s._)([(0,p.e)(A.hY)],S.prototype,"outputGeometryPrecisionUnits",void 0),(0,s._)([(0,p.e)(A.Sr)],S.prototype,"outputLines",void 0),(0,s._)([(0,l.MZ)({type:y.default,json:{name:"outSR",write:!0}})],S.prototype,"outSpatialReference",void 0),(0,s._)([(0,l.MZ)({json:{write:!0}})],S.prototype,"overrides",void 0),(0,s._)([(0,l.MZ)({json:{name:"barriers",write:!0}})],S.prototype,"pointBarriers",void 0),(0,s._)([(0,m.K)("pointBarriers")],S.prototype,"writePointBarriers",null),(0,s._)([(0,l.MZ)({json:{write:!0}})],S.prototype,"polygonBarriers",void 0),(0,s._)([(0,m.K)("polygonBarriers")],S.prototype,"writePolygonBarrier",null),(0,s._)([(0,l.MZ)({json:{write:!0}})],S.prototype,"polylineBarriers",void 0),(0,s._)([(0,m.K)("polylineBarriers")],S.prototype,"writePolylineBarrier",null),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],S.prototype,"preserveFirstStop",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],S.prototype,"preserveLastStop",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],S.prototype,"preserveObjectID",void 0),(0,s._)([(0,l.MZ)({type:[String],json:{name:"restrictionAttributeNames",write:!0}})],S.prototype,"restrictionAttributes",void 0),(0,s._)([(0,d.w)("restrictionAttributes")],S.prototype,"readRestrictionAttributes",null),(0,s._)([(0,m.K)("restrictionAttributes")],S.prototype,"writeRestrictionAttributes",null),(0,s._)([(0,p.e)(A.hE)],S.prototype,"restrictUTurns",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],S.prototype,"returnBarriers",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],S.prototype,"returnDirections",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],S.prototype,"returnPolygonBarriers",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],S.prototype,"returnPolylineBarriers",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],S.prototype,"returnRoutes",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],S.prototype,"returnStops",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],S.prototype,"returnTraversedEdges",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],S.prototype,"returnTraversedJunctions",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],S.prototype,"returnTraversedTurns",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],S.prototype,"returnZ",void 0),(0,s._)([(0,l.MZ)({json:{write:!0}})],S.prototype,"startTime",void 0),(0,s._)([(0,d.w)("startTime")],S.prototype,"readStartTime",null),(0,s._)([(0,m.K)("startTime")],S.prototype,"writeStartTime",null),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],S.prototype,"startTimeIsUTC",void 0),(0,s._)([(0,l.MZ)({json:{write:!0}})],S.prototype,"stops",void 0),(0,s._)([(0,d.w)("stops")],S.prototype,"readStops",null),(0,s._)([(0,m.K)("stops")],S.prototype,"writeStops",null),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],S.prototype,"timeWindowsAreUTC",void 0),(0,s._)([(0,l.MZ)({type:T.default,json:{write:!0}})],S.prototype,"travelMode",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],S.prototype,"useHierarchy",void 0),(0,s._)([(0,l.MZ)({type:Boolean,json:{write:!0}})],S.prototype,"useTimeWindows",void 0),S=i=(0,s._)([(0,c.$)("esri.rest.support.RouteParameters")],S);const f=S;function M(e,t,r){null!=e&&(t[r]=n.default.isCollection(e)?{features:e.toArray().map((e=>e.toJSON()))}:e.toJSON())}},65241:(e,t,r)=>{r.r(t),r.d(t,{default:()=>m});var i=r(93800),s=r(85715),o=r(19455),n=r(48602),a=(r(21265),r(50925),r(14746),r(47332)),l=r(14800),u=r(75269),p=r(15484),d=r(93074);let c=class extends(s.A.ClonableMixin(o.A)){constructor(e){super(e),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null}readId(e,t){return t.id??t.itemId??null}readRestrictionAttributes(e,t){const{restrictionAttributeNames:r}=t;return null==r?null:r.map((e=>d.OC.fromJSON(e)))}writeRestrictionAttributes(e,t,r){null!=e&&(t[r]=e.map((e=>d.OC.toJSON(e))))}};(0,i._)([(0,n.MZ)({type:[Object],json:{write:!0}})],c.prototype,"attributeParameterValues",void 0),(0,i._)([(0,n.MZ)({type:String,json:{write:!0}})],c.prototype,"description",void 0),(0,i._)([(0,a.e)(d.dd,{ignoreUnknown:!1})],c.prototype,"distanceAttributeName",void 0),(0,i._)([(0,n.MZ)({type:String,json:{write:!0}})],c.prototype,"id",void 0),(0,i._)([(0,l.w)("id",["id","itemId"])],c.prototype,"readId",null),(0,i._)([(0,a.e)(d.et,{ignoreUnknown:!1})],c.prototype,"impedanceAttributeName",void 0),(0,i._)([(0,n.MZ)({type:String,json:{write:!0}})],c.prototype,"name",void 0),(0,i._)([(0,n.MZ)({type:[String],json:{write:!0}})],c.prototype,"restrictionAttributeNames",void 0),(0,i._)([(0,l.w)("restrictionAttributeNames")],c.prototype,"readRestrictionAttributes",null),(0,i._)([(0,p.K)("restrictionAttributeNames")],c.prototype,"writeRestrictionAttributes",null),(0,i._)([(0,n.MZ)({type:Number,json:{write:{allowNull:!0}}})],c.prototype,"simplificationTolerance",void 0),(0,i._)([(0,a.e)(d.hY)],c.prototype,"simplificationToleranceUnits",void 0),(0,i._)([(0,a.e)(d.Mm,{ignoreUnknown:!1})],c.prototype,"timeAttributeName",void 0),(0,i._)([(0,a.e)(d.ow)],c.prototype,"type",void 0),(0,i._)([(0,n.MZ)({type:Boolean,json:{write:!0}})],c.prototype,"useHierarchy",void 0),(0,i._)([(0,a.e)(d.hE)],c.prototype,"uturnAtJunctions",void 0),c=(0,i._)([(0,u.$)("esri.rest.support.TravelMode")],c);const m=c},69265:(e,t,r)=>{r.r(t),r.d(t,{default:()=>m});var i=r(93800),s=r(85715),o=r(19455),n=r(48602),a=(r(21265),r(50925),r(14746),r(47332)),l=r(75269),u=r(78629),p=r(54723),d=r(93074);let c=class extends(s.A.ClonableMixin(o.A)){constructor(e){super(e),this.doNotLocateOnRestrictedElements=null,this.geometry=null,this.geometryType=null,this.name=null,this.spatialRelationship=null,this.type="layer",this.where=null}};(0,i._)([(0,n.MZ)({type:Boolean,json:{write:!0}})],c.prototype,"doNotLocateOnRestrictedElements",void 0),(0,i._)([(0,n.MZ)({types:p.yR,json:{read:u.fromJSON,write:!0}})],c.prototype,"geometry",void 0),(0,i._)([(0,a.e)(d.Vj)],c.prototype,"geometryType",void 0),(0,i._)([(0,n.MZ)({type:String,json:{name:"layerName",write:!0}})],c.prototype,"name",void 0),(0,i._)([(0,a.e)(d.vS,{name:"spatialRel"})],c.prototype,"spatialRelationship",void 0),(0,i._)([(0,n.MZ)({type:String,json:{write:!0}})],c.prototype,"type",void 0),(0,i._)([(0,n.MZ)({type:String,json:{write:!0}})],c.prototype,"where",void 0),c=(0,i._)([(0,l.$)("esri.rest.support.DataLayer")],c);const m=c},93074:(e,t,r)=>{r.d(t,{$n:()=>_,$r:()=>g,EM:()=>A,Ec:()=>j,JJ:()=>w,Mm:()=>O,OC:()=>U,Sr:()=>d,UO:()=>a,Vj:()=>Z,WU:()=>D,Y8:()=>n,Z7:()=>l,_6:()=>f,_H:()=>y,aJ:()=>p,ag:()=>h,cQ:()=>c,dd:()=>b,dn:()=>u,et:()=>k,fe:()=>S,gD:()=>M,hE:()=>m,hY:()=>o,iM:()=>T,mt:()=>N,ow:()=>v,vS:()=>R});var i=r(42761);const s={esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"},o=(0,i.O)()(s),n=(0,i.O)()({...s,esriIntFeet:"international-feet",esriIntInches:"international-inches",esriIntMiles:"international-miles",esriIntNauticalMiles:"international-nautical-miles",esriIntYards:"international-yards"}),a=(0,i.O)()({esriAcres:"international-acres",esriAcresUS:"us-acres",esriAres:"ares",esriHectares:"hectares",esriSquareCentimeters:"square-centimeters",esriSquareDecimeters:"square-decimeters",esriSquareFeet:"square-international-feet",esriSquareFeetUS:"square-us-feet",esriSquareInches:"square-international-inches",esriSquareInchesUS:"square-us-inches",esriSquareKilometers:"square-kilometers",esriSquareMeters:"square-meters",esriSquareMiles:"square-international-miles",esriSquareMilesUS:"square-us-miles",esriSquareMillimeters:"square-millimeters",esriSquareYards:"square-international-yards",esriSquareYardsUS:"square-us-yards",esriUnknownAreaUnits:"unknown"}),l=(0,i.O)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),u=(0,i.O)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards",esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds",esriNAUKilometersPerHour:"kilometers-per-hour",esriNAUMilesPerHour:"miles-per-hour",esriNAUUnknown:"unknown"}),p=(0,i.O)()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),d=(0,i.O)()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"}),c=(0,i.O)()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"}),m=(0,i.O)()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"}),y=(0,i.O)()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),h=(0,i.O)()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"}),v=(0,i.O)()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"}),w=(0,i.O)()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),A=(0,i.O)()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),g=(0,i.O)()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),N=(0,i.O)()({1:"right",2:"left"},{useNumericKeys:!0}),T=(0,i.O)()({0:"restriction",1:"scaled-cost",2:"added-cost"},{useNumericKeys:!0}),S=(0,i.O)()({0:"permit",1:"restrict"},{useNumericKeys:!0}),f=(0,i.O)()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation",1007:"lane"},{useNumericKeys:!0}),M=(0,i.O)()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0}),_=(0,i.O)()({"NA Campus":"campus","NA Desktop":"desktop","NA Navigation":"navigation"}),b=(0,i.O)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters"},{ignoreUnknown:!1}),O=(0,i.O)()({Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),k=(0,i.O)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters",Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),U=(0,i.O)()({"Any Hazmat Prohibited":"any-hazmat-prohibited","Avoid Carpool Roads":"avoid-carpool-roads","Avoid Express Lanes":"avoid-express-lanes","Avoid Ferries":"avoid-ferries","Avoid Gates":"avoid-gates","Avoid Limited Access Roads":"avoid-limited-access-roads","Avoid Private Roads":"avoid-private-roads","Avoid Roads Unsuitable for Pedestrians":"avoid-roads-unsuitable-for-pedestrians","Avoid Stairways":"avoid-stairways","Avoid Toll Roads":"avoid-toll-roads","Avoid Toll Roads for Trucks":"avoid-toll-roads-for-trucks","Avoid Truck Restricted Roads":"avoid-truck-restricted-roads","Avoid Unpaved Roads":"avoid-unpaved-roads","Axle Count Restriction":"axle-count-restriction","Driving a Bus":"driving-a-bus","Driving a Taxi":"driving-a-taxi","Driving a Truck":"driving-a-truck","Driving an Automobile":"driving-an-automobile","Driving an Emergency Vehicle":"driving-an-emergency-vehicle","Height Restriction":"height-restriction","Kingpin to Rear Axle Length Restriction":"kingpin-to-rear-axle-length-restriction","Length Restriction":"length-restriction","Preferred for Pedestrians":"preferred-for-pedestrians","Riding a Motorcycle":"riding-a-motorcycle","Roads Under Construction Prohibited":"roads-under-construction-prohibited","Semi or Tractor with One or More Trailers Prohibited":"semi-or-tractor-with-one-or-more-trailers-prohibited","Single Axle Vehicles Prohibited":"single-axle-vehicles-prohibited","Tandem Axle Vehicles Prohibited":"tandem-axle-vehicles-prohibited","Through Traffic Prohibited":"through-traffic-prohibited","Truck with Trailers Restriction":"truck-with-trailers-restriction","Use Preferred Hazmat Routes":"use-preferred-hazmat-routes","Use Preferred Truck Routes":"use-preferred-truck-routes",Walking:"walking","Weight Restriction":"weight-restriction"},{ignoreUnknown:!1}),R=(0,i.O)()({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),Z=(0,i.O)()({esriGeometryPoint:"point",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"envelope",esriGeometryMultipoint:"multipoint"}),D=(0,i.O)()({esriNAUTCost:"cost",esriNAUTDescriptor:"descriptor",esriNAUTRestriction:"restriction",esriNAUTHierarchy:"hierarchy"}),j=(0,i.O)()({esriDSTAltName:"alt-name",esriDSTArrive:"arrive",esriDSTBranch:"branch",esriDSTCrossStreet:"cross-street",esriDSTCumulativeLength:"cumulative-length",esriDSTDepart:"depart",esriDSTEstimatedArrivalTime:"estimated-arrival-time",esriDSTExit:"exit",esriDSTGeneral:"general",esriDSTLength:"length",esriDSTServiceTime:"service-time",esriDSTStreetName:"street-name",esriDSTSummary:"summary",esriDSTTime:"time",esriDSTTimeWindow:"time-window",esriDSTToward:"toward",esriDSTViolationTime:"violation-time",esriDSTWaitTime:"wait-time"})},98274:(e,t,r)=>{r.d(t,{K:()=>i});const i={type:String,json:{read:{source:"token"},write:{target:"token"}}}}}]);