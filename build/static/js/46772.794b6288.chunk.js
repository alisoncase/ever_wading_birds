"use strict";(self.webpackChunkever_wading_birds=self.webpackChunkever_wading_birds||[]).push([[46772],{46772:(r,t,e)=>{e.r(t),e.d(t,{default:()=>h});var i=e(93800),o=e(6946),a=e(74719),s=e(50925),l=e(79953),n=e(48602),d=(e(21265),e(14746),e(75269)),u=e(15492);let c=class extends o.default{constructor(r){super(r),this._updatingHandlesLoad=new u.U,this._updatingHandlesExecute=new u.U}initialize(){this.addHandles([(0,l.watch)((()=>[this.utilityNetwork,this.view]),(()=>{this._setUp()}),{initial:!0})])}destroy(){this._updatingHandlesLoad.destroy(),this._updatingHandlesExecute.destroy()}get executionError(){return this._executionError}get loadError(){return this._loadError}get state(){return this._updatingHandlesLoad.updating?"loading":this.loadError?"disabled":this._updatingHandlesExecute.updating?"executing":this.executionError?"failed":"ready"}get utilityNetwork(){return this.utilityNetwork}set utilityNetwork(r){this._get("utilityNetwork")!==r&&this._set("utilityNetwork",r)}get view(){return this.view}set view(r){this._get("view")!==r&&this._set("view",r)}async executeNamedTraceConfiguration(r){return this._updatingHandlesExecute.addPromise(this._executeNamedTraceConfiguration(r))}async executeTraceConfiguration(r){return this._updatingHandlesExecute.addPromise(this._executeTraceConfiguration(r))}async _executeNamedTraceConfiguration(r){if("disabled"===this.state)throw this._logError("trace-analysis-view-model:load-error",this.loadError),new a.default("trace-analysis-view-model:load-error",this.loadError);return this._executionError=null,await this.utilityNetwork.trace(r).catch((r=>{throw this._executionError="trace-error",this._logError("trace-analysis-view-model:execution-error",this._executionError),r}))}async _executeTraceConfiguration(r){if("disabled"===this.state)throw this._logError("trace-analysis-view-model:load-error",this.loadError),new a.default("trace-analysis-view-model:load-error",this.loadError);return this._executionError=null,await this.utilityNetwork.trace(r).catch((r=>{throw this._executionError="trace-error",this._logError("trace-analysis-view-model:execution-error",this._executionError),r}))}_logError(r,t){s.A.getLogger(this).error(new a.default(r,t))}async _setUp(){const{utilityNetwork:r,view:t}=this;this._updatingHandlesLoad.addPromise((async()=>(this._loadError=null,t?"2d"!==t.type?(this._loadError="sceneView-not-supported",void this._logError("trace-analysis-view-model:load-error",this._loadError)):r?void 0:(this._loadError="no-utility-network",void this._logError("trace-analysis-view-model:load-error",this._loadError)):(this._loadError="no-view",void this._logError("trace-analysis-view-model:load-error",this._loadError))))())}};(0,i._)([(0,n.MZ)()],c.prototype,"_executionError",void 0),(0,i._)([(0,n.MZ)()],c.prototype,"_loadError",void 0),(0,i._)([(0,n.MZ)()],c.prototype,"executionError",null),(0,i._)([(0,n.MZ)()],c.prototype,"loadError",null),(0,i._)([(0,n.MZ)({readOnly:!0})],c.prototype,"state",null),(0,i._)([(0,n.MZ)()],c.prototype,"utilityNetwork",null),(0,i._)([(0,n.MZ)()],c.prototype,"view",null),c=(0,i._)([(0,d.$)("esri.widgets.UtilityNetworkTraceAnalysis.UtilityNetworkTraceAnalysisViewModel")],c);const h=c}}]);