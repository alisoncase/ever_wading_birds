"use strict";(self.webpackChunkever_wading_birds=self.webpackChunkever_wading_birds||[]).push([[79897],{79897:(e,t,a)=>{a.r(t),a.d(t,{default:()=>p});var r,s=a(93800),i=a(23060),n=a(74719),o=a(48602),d=(a(21265),a(50925),a(14746),a(75269)),l=a(57457),g=a(24203),m=a(52954),c=a(75215);let h=r=class extends((0,g.dM)((0,c.j)((0,m.J)(l.default)))){constructor(){super(...arguments),this.type="base-dynamic"}getImageUrl(){throw new n.default("basedynamiclayer:getImageUrl-not-implemented","getImageUrl() is not implemented")}addResolvingPromise(e){super.addResolvingPromise(e)}async fetchImage(e,t,a,r){const s=this.getImageUrl(e,t,a),n={responseType:"image",signal:r?.signal,query:{...this.refreshParameters}};if("string"==typeof s){const{data:e}=await(0,i.default)(s,n);return e}const o=await s,{data:d}=await(0,i.default)(o,n);return d}async fetchImageBitmap(e,t,a){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(this.fetchImage!==r.prototype.fetchImage){const r=await this.fetchImage(e,t,a,s);try{return await createImageBitmap(r)}catch(p){throw new n.default("request:server","Unable to load image",{error:p,extent:e,width:t,height:a})}}const o=this.getImageUrl(e,t,a),d={responseType:"blob",signal:s?.signal,query:{...this.refreshParameters}};if("string"==typeof o){const{data:e}=await(0,i.default)(o,d);return createImageBitmap(e)}const l=await o,{data:g}=await(0,i.default)(l,d);return createImageBitmap(g)}};(0,s._)([(0,o.MZ)({readOnly:!0,value:"base-dynamic"})],h.prototype,"type",void 0),(0,s._)([(0,o.MZ)({type:["show","hide"]})],h.prototype,"listMode",void 0),h=r=(0,s._)([(0,d.$)("esri.layers.BaseDynamicLayer")],h);const p=h}}]);