"use strict";(self.webpackChunkever_wading_birds=self.webpackChunkever_wading_birds||[]).push([[8328],{48328:(e,t,o)=>{o.r(t),o.d(t,{synthesizeAssociationGeometries:()=>u});var r=o(23060),n=o(10193),s=o(93800),l=o(19455),i=o(48602),a=(o(21265),o(50925),o(14746),o(75269)),d=o(88317);let p=class extends l.A{constructor(e){super(e),this.maxGeometryCountExceeded=!1,this.associations=[]}};(0,s._)([(0,i.MZ)({type:Boolean,json:{write:!0}})],p.prototype,"maxGeometryCountExceeded",void 0),(0,s._)([(0,i.MZ)({type:[d.A],json:{write:!0}})],p.prototype,"associations",void 0),p=(0,s._)([(0,a.$)("esri.rest.networks.support.AssociationGeometriesResult")],p);const m=p;async function u(e,t,o){const s=(0,n.Dl)(e),l={...t.toJSON(),f:"json"},i=(0,n.lF)({...s.query,...l});o?o.method="post":o={method:"post"};const a=(0,n.jV)(i,o),d=`${s.path}/synthesizeAssociationGeometries`;return(0,r.A)(d,a).then((e=>function(e,t){const{data:o}=e;if(t)for(const r of o.associations)r.geometry.spatialReference||(r.geometry.spatialReference=t.clone());return m.fromJSON(o)}(e,t.outSpatialReference)))}},88317:(e,t,o)=>{o.d(t,{A:()=>w});var r=o(93800),n=o(19455),s=o(48602),l=(o(21265),o(50925),o(14746),o(14800)),i=o(75269),a=o(15484),d=o(54824),p=o(79580),m=o(48362);let u=class extends n.A{constructor(e){super(e),this.globalId=null,this.associationType=null,this.fromNetworkElement=null,this.toNetworkElement=null,this.geometry=null,this.errorMessage=null,this.percentAlong=null,this.errorCode=null,this.isContentVisible=null,this.status=null}readFromNetworkElement(e,t){return new m.A({globalId:t.fromGlobalId,networkSourceId:t.fromNetworkSourceId,terminalId:t.fromTerminalId})}writeFromNetworkElement(e,t){e&&(t.fromGlobalId=e.globalId,t.fromNetworkSourceId=e.networkSourceId,t.fromTerminalId=e.terminalId)}readToNetworkElement(e,t){return new m.A({globalId:t.toGlobalId,networkSourceId:t.toNetworkSourceId,terminalId:t.toTerminalId})}writeToNetworkElement(e,t){e&&(t.toGlobalId=e.globalId,t.toNetworkSourceId=e.networkSourceId,t.toTerminalId=e.terminalId)}};(0,r._)([(0,s.MZ)({type:String,json:{write:!0}})],u.prototype,"globalId",void 0),(0,r._)([(0,s.MZ)({type:p.XZ.apiValues,json:{type:p.XZ.jsonValues,read:p.XZ.read,write:p.XZ.write}})],u.prototype,"associationType",void 0),(0,r._)([(0,s.MZ)({type:m.A,json:{write:{target:{fromGlobalId:{type:String},fromNetworkSourceId:{type:Number},fromTerminalId:{type:Number}}},read:{source:["fromGlobalId","fromNetworkSourceId","fromTerminalId"]}}})],u.prototype,"fromNetworkElement",void 0),(0,r._)([(0,l.w)("fromNetworkElement")],u.prototype,"readFromNetworkElement",null),(0,r._)([(0,a.K)("fromNetworkElement")],u.prototype,"writeFromNetworkElement",null),(0,r._)([(0,s.MZ)({type:m.A,json:{write:{target:{toGlobalId:{type:String},toNetworkSourceId:{type:Number},toTerminalId:{type:Number}}},read:{source:["toGlobalId","toNetworkSourceId","toTerminalId"]}}})],u.prototype,"toNetworkElement",void 0),(0,r._)([(0,l.w)("toNetworkElement")],u.prototype,"readToNetworkElement",null),(0,r._)([(0,a.K)("toNetworkElement")],u.prototype,"writeToNetworkElement",null),(0,r._)([(0,s.MZ)({type:d.A,json:{write:!0}})],u.prototype,"geometry",void 0),(0,r._)([(0,s.MZ)({type:String,json:{write:!0}})],u.prototype,"errorMessage",void 0),(0,r._)([(0,s.MZ)({type:Number,json:{write:!0}})],u.prototype,"percentAlong",void 0),(0,r._)([(0,s.MZ)({type:Number,json:{write:!0}})],u.prototype,"errorCode",void 0),(0,r._)([(0,s.MZ)({type:Boolean,json:{write:!0}})],u.prototype,"isContentVisible",void 0),(0,r._)([(0,s.MZ)({type:Number,json:{write:!0}})],u.prototype,"status",void 0),u=(0,r._)([(0,i.$)("esri.rest.networks.support.Association")],u);const w=u}}]);